bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(true);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOptionGroup(true);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  group  =  options.getOptionGroup(true);	  Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
2	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOptionGroup(currentToken);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  group  =  options.getOptionGroup(currentToken);	  Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
3	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  argument);	  Option    cmd    =    options.getOption(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
4	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  arguments);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  arguments);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  arguments);	  Option    cmd    =    options.getOption(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
5	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(arguments,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(arguments,  stopAtNonOption);	  Option    cmd    =    options.getOption(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
6	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(currentOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getGroup(currentOption);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	OptionGroup  group  =  options.getGroup(currentOption);	  OptionGroup    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
7	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(currentToken);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getGroup(currentToken);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	OptionGroup  group  =  options.getGroup(currentToken);	  OptionGroup    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
8	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(true);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getGroup(true);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	OptionGroup  group  =  options.getGroup(true);	  OptionGroup    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
9	[BUG]  [BUGGY]  Option  group  =  options.getGroup(currentOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getGroup(currentOption);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  group  =  options.getGroup(currentOption);	  Option    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
10	[BUG]  [BUGGY]  Option  group  =  options.getGroup(true);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getGroup(true);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  group  =  options.getGroup(true);	  Option    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
11	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleProperties(properties);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  handleProperties(properties);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  handleProperties(properties);  }	  if(stopAtNonOption)    {    handleRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
12	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  handleRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  ||  stopAtNonOption)  {  handleRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	||  stopAtNonOption)  {  handleRequiredArgs();  }	  if(stopAtNonOption)    {    handleRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
13	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleProperties();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  handleProperties();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  handleProperties();  }	  if(stopAtNonOption)    {    handleRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
14	[BUG]  [BUGGY]  pendingParsing)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	pendingParsing)  {  checkRequiredArgs();  }	  if(skipParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
15	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkRequiredArguments();  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  checkRequiredArguments();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  checkRequiredArguments();  }	  if(skipParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
16	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.parseOption(currentToken);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  optionGroup.parseOption(currentToken);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  optionGroup.parseOption(currentToken);	  Option    cmd    =    currentToken.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
17	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  currentOption.getOptionGroup();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Options  cmd  =  currentOption.getOptionGroup();	  Options    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
18	[BUG]  [BUGGY]  Options  cmd  =  group.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  group.getOptionGroup();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Options  cmd  =  group.getOptionGroup();	  Options    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
19	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOptionGroup();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.getOptionGroup();	  Options    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
20	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getOption();  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  currentOption.getOption();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Options  cmd  =  currentOption.getOption();	  Options    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
21	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  group);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parseOption(argument,  group);	  Option    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
22	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  null);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parseOption(argument,  null);	  Option    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
23	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  true);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  true);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parseOption(argument,  true);	  Option    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
24	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(currentOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(currentOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(currentOption);	  Option    cmd    =    currentOption.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
25	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(arguments);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parseOption(arguments);	  Option    cmd    =    currentOption.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
26	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.parseOption(options);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  optionGroup.parseOption(options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  optionGroup.parseOption(options);	  Option    cmd    =    currentOption.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
27	[BUG]  [BUGGY]  Options  cmd  =  currentOption.parseOption(options);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  currentOption.parseOption(options);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Options  cmd  =  currentOption.parseOption(options);	  Options    cmd    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
28	[BUG]  [BUGGY]  Option  cmd  =  options.parse(arguments[currentToken]);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(arguments[currentToken]);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(arguments[currentToken]);	  Option    cmd    =    options.parse(arguments[currentOption]);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
29	[BUG]  [BUGGY]  Option  cmd  =  options.parse(arguments[0]);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(arguments[0]);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(arguments[0]);	  Option    cmd    =    options.parse(arguments[currentOption]);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
30	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.parse(arguments[currentOption]);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  optionGroup.parse(arguments[currentOption]);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  optionGroup.parse(arguments[currentOption]);	  Option    cmd    =    options.parse(arguments[currentOption]);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
31	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(argument,  stopAtNonOption,  group);	  Option    cmd    =    options.getOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
32	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  null);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(argument,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(argument,  null);	  Option    cmd    =    options.getOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
33	[BUG]  [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  throw  new  IllegalStateException( " ");  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
34	[BUG]  [BUGGY]  Option  cmd  =  options.getOption( "stopParsing ");  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption( "stopParsing ");  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption( "stopParsing ");	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
35	[BUG]  [BUGGY]  Options  cmd  =  options.getOption(currentToken,  arguments);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  options.getOption(currentToken,  arguments);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Options  cmd  =  options.getOption(currentToken,  arguments);	  Options    cmd    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
36	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);	  Options    cmd    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
37	[BUG]  [BUGGY]  Options  cmd  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Options  cmd  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);	  Options    cmd    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
38	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  checkProperties();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  ||  stopAtNonOption)  {  checkProperties();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	||  stopAtNonOption)  {  checkProperties();  }  else  {  cmd  =  new  CommandLine();  }	  if(stopAtNonOption)    {    checkProperties();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
39	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  checkProperties();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  ||  stopAtNonOption)  {  checkProperties();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	||  stopAtNonOption)  {  checkProperties();  }	  if(stopAtNonOption)    {    checkProperties();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
40	[BUG]  [BUGGY]  Option  cmd  =  options.parse(currentToken,  arguments);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(currentToken,  arguments);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(currentToken,  arguments);	  Option    cmd    =    options.parse(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
41	[BUG]  [BUGGY]  Option  cmd  =  options.parse(currentToken,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(currentToken,  expectedOpts,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(currentToken,  expectedOpts,  stopAtNonOption);	  Option    cmd    =    options.parse(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
42	[BUG]  [BUGGY]  Option  cmd  =  options.parse(currentToken,  argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(currentToken,  argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(currentToken,  argument);	  Option    cmd    =    options.parse(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
43	[BUG]  [BUGGY]  Option  cmd  =  options.parse(currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(currentOption,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(currentOption,  expectedOpts);	  Option    cmd    =    options.parse(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
44	[BUG]  [BUGGY]  Option  cmd  =  group.parseOption(argument);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  group.parseOption(argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  group.parseOption(argument);	  Option    cmd    =    options.parseOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
45	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  currentOption);	  Option    cmd    =    options.parseOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
46	[BUG]  [BUGGY]  optionGroup.checkRequiredArgs();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  optionGroup.checkRequiredArgs();  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	optionGroup.checkRequiredArgs();	  if(skipParsing)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
47	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup(options);	  if(skipParsing)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
48	[BUG]  [BUGGY]  options.add(cmd);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  options.add(cmd);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	options.add(cmd);	  if(skipParsing)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
49	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionCmd();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOptionCmd();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOptionCmd();	  Option    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
50	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.getOption();	  Option    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
51	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(group);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(group);	  Option    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
52	[BUG]  [BUGGY]  if(stopAtNonOption  ||  skipParsing)  {  checkParsing();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  ||  skipParsing)  {  checkParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption  ||  skipParsing)  {  checkParsing();  }	  if(stopAtNonOption)    {    checkParsing();    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
53	[BUG]  [BUGGY]  if(stopAtNonOption  &&  cmd.length()  >  0)  {  checkParsing();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  cmd.length()  >  0)  {  checkParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption  &&  cmd.length()  >  0)  {  checkParsing();  }	  if(stopAtNonOption)    {    checkParsing();    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
54	[BUG]  [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  checkParsing();  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  checkParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption  &&  cmd!=  null)  {  checkParsing();  }	  if(stopAtNonOption)    {    checkParsing();    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
55	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parse(arguments,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parse(arguments,  stopAtNonOption);	  Option    cmd    =    currentOption.parse(arguments);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
56	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(arguments[0]);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parse(arguments[0]);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parse(arguments[0]);	  Option    cmd    =    currentOption.parse(arguments);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
57	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(arguments,  null);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parse(arguments,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parse(arguments,  null);	  Option    cmd    =    currentOption.parse(arguments);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
58	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(!stopAtNonOption)  {  checkRequiredOptions();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(!stopAtNonOption)  {  checkRequiredOptions();  }	  if(!stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
59	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  checkRequiredOptions();  }	  if(!stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
60	[BUG]  [BUGGY]  if(cmd  ==  null)  {  handleProperties(properties);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null)  {  handleProperties(properties);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd  ==  null)  {  handleProperties(properties);  }	  if(cmd!=    null)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
61	[BUG]  [BUGGY]  ||  cmd!=  null)  {  handleProperties(properties);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  ||  cmd!=  null)  {  handleProperties(properties);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	||  cmd!=  null)  {  handleProperties(properties);  }	  if(cmd!=    null)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
62	[BUG]  [BUGGY]  if(cmd  ==  null)  {  handleRequiredOptions(properties);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null)  {  handleRequiredOptions(properties);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd  ==  null)  {  handleRequiredOptions(properties);  }	  if(cmd!=    null)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
63	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(argument,  options);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parse(argument,  options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parse(argument,  options);	  Option    cmd    =    options.parse(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
64	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(argument,  currentOption,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(argument,  currentOption,  expectedOpts);	  Option    cmd    =    options.parse(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
65	[BUG]  [BUGGY]  Options  cmd  =  options.getOption(currentToken,  argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  options.getOption(currentToken,  argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Options  cmd  =  options.getOption(currentToken,  argument);	  Options    cmd    =    options.getOption(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
66	[BUG]  [BUGGY]  Options  cmd  =  options.getOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  options.getOption(argument,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Options  cmd  =  options.getOption(argument,  stopAtNonOption);	  Options    cmd    =    options.getOption(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
67	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(argument,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(argument,  expectedOpts);	  Option    cmd    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
68	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkState();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  checkState();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  checkState();  }	  if(stopAtNonOption)    {    checkRequiredParsing();    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
69	[BUG]  [BUGGY]  Options  cmd  =  options.getOption(currentOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  options.getOption(currentOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Options  cmd  =  options.getOption(currentOption);	  Options    cmd    =    currentOption.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
70	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(currentOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(currentOption);	  Options    cmd    =    currentOption.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
71	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  options);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.getOption(argument,  options);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
72	[BUG]  [BUGGY]  Option  cmd  =  currentToken.getOption(argument);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentToken.getOption(argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentToken.getOption(argument);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
73	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(argument,  currentToken,  stopAtNonOption);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
74	[BUG]  [BUGGY]  Option  cmd  =  group.getOption(argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  group.getOption(argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  group.getOption(argument);	  Option    cmd    =    options.getOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
75	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  group);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.getOption(argument,  group);	  Option    cmd    =    options.getOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
76	[BUG]  [BUGGY]  Option  cmd  =  groups.getOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  groups.getOption(argument,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  groups.getOption(argument,  stopAtNonOption);	  Option    cmd    =    options.getOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
77	[BUG]  [BUGGY]  parsing  ||  stopAtNonOption)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing  ||  stopAtNonOption)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	parsing  ||  stopAtNonOption)  {  checkRequiredArgs();  }	  parsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
78	[BUG]  [BUGGY]  parsing)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing)  {  checkRequiredOptions();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	parsing)  {  checkRequiredOptions();  }	  parsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
79	[BUG]  [BUGGY]  parse)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parse)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	parse)  {  checkRequiredArgs();  }	  parsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
80	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkParsing();  }  else  {  cmd.clear();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  checkParsing();  }  else  {  cmd.clear();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  checkParsing();  }  else  {  cmd.clear();  }	  if(stopAtNonOption)    {    checkParsing();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
81	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getParser();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getParser();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.getParser();	  Option    cmd    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
82	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getCurrentOption();  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getCurrentOption();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.getCurrentOption();	  Option    cmd    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
83	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getArgumentOpts();  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getArgumentOpts();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.getArgumentOpts();	  Option    cmd    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
84	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.getOption(options);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  optionGroup.getOption(options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  optionGroup.getOption(options);	  Option    cmd    =    currentOption.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
85	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.getOption(argument,  stopAtNonOption);	  Option    cmd    =    currentOption.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
86	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  null);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(argument,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.getOption(argument,  null);	  Option    cmd    =    currentOption.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
87	[BUG]  [BUGGY]  if(stopAtNonOption  ||  cmd!=  null)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  ||  cmd!=  null)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption  ||  cmd!=  null)  {  checkRequiredArgs();  }	  if(stopAtNonOption    &&    cmd!=    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
88	[BUG]  [BUGGY]  if(stopAtNonOption  &&  cmd  ==  null)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  cmd  ==  null)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption  &&  cmd  ==  null)  {  checkRequiredArgs();  }	  if(stopAtNonOption    &&    cmd!=    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
89	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  null);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(argument,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  null);	  Option    cmd    =    options.parseOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
90	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  block);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(argument,  block);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  block);	  Option    cmd    =    options.parseOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
91	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  stopAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(argument,  stopAtNonOption,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  stopAtNonOption,  group);	  Option    cmd    =    options.parseOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
92	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.getOption(argument,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  currentOption  =  options.getOption(argument,  stopAtNonOption);	  Option    currentOption    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
93	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument,  null);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.getOption(argument,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  currentOption  =  options.getOption(argument,  null);	  Option    currentOption    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
94	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument,  0);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.getOption(argument,  0);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  currentOption  =  options.getOption(argument,  0);	  Option    currentOption    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
95	[BUG]  [BUGGY]  Option  cmd  =  currentToken.parse(currentOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentToken.parse(currentOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentToken.parse(currentOption);	  Option    cmd    =    currentOption.parse(currentToken);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
96	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(arguments[currentToken]);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parse(arguments[currentToken]);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parse(arguments[currentToken]);	  Option    cmd    =    currentOption.parse(currentToken);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
97	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  arguments);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  arguments);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(currentToken,  arguments);	  Option    cmd    =    options.parseOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
98	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  expectedOpts,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(currentToken,  expectedOpts,  stopAtNonOption);	  Option    cmd    =    options.parseOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
99	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(currentToken,  argument);	  Option    cmd    =    options.parseOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
100	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(currentToken,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parseOption(currentToken,  expectedOpts);	  Option    cmd    =    options.parseOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
101	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(argument,  group);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parse(argument,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parse(argument,  group);	  Option    cmd    =    currentOption.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
102	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(argument,  null);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parse(argument,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parse(argument,  null);	  Option    cmd    =    currentOption.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
103	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(argument,  true);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parse(argument,  true);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parse(argument,  true);	  Option    cmd    =    currentOption.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
104	[BUG]  [BUGGY]  if(cmd  ==  null)  {  checkRequiredParsers();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null)  {  checkRequiredParsers();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd  ==  null)  {  checkRequiredParsers();  }	  if(cmd!=    null)    {    checkRequiredParsers();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
105	[BUG]  [BUGGY]  if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredParsers();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredParsers();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredParsers();  }	  if(cmd!=    null)    {    checkRequiredParsers();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
106	[BUG]  [BUGGY]  if(cmd  ==  null  ||  cmd.length()!=  0)  {  checkRequiredParsers();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null  ||  cmd.length()!=  0)  {  checkRequiredParsers();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd  ==  null  ||  cmd.length()!=  0)  {  checkRequiredParsers();  }	  if(cmd!=    null)    {    checkRequiredParsers();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
107	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getParser();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  currentOption.getParser();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Options  cmd  =  currentOption.getParser();	  Options    cmd    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
108	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  options);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parseOption(argument,  options);	  Option    cmd    =    options.parseOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
109	[BUG]  [BUGGY]  Option  cmd  =  currentToken.parseOption(argument,  options);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentToken.parseOption(argument,  options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentToken.parseOption(argument,  options);	  Option    cmd    =    options.parseOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
110	[BUG]  [BUGGY]  Option  cmd  =  currentToken.parseOption(argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentToken.parseOption(argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentToken.parseOption(argument);	  Option    cmd    =    options.parseOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
111	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  null);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(argument,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(argument,  null);	  Option    cmd    =    options.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
112	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  group);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(argument,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(argument,  group);	  Option    cmd    =    options.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
113	[BUG]  [BUGGY]  Option  cmd  =  currentToken.parse(argument,  options);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentToken.parse(argument,  options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentToken.parse(argument,  options);	  Option    cmd    =    options.parse(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
114	[BUG]  [BUGGY]  Option  cmd  =  currentToken.parse(argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentToken.parse(argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentToken.parse(argument);	  Option    cmd    =    options.parse(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
115	[BUG]  [BUGGY]  Option  cmd  =  stopAtNonOption?  CheckRequiredArgs()  :  null;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  stopAtNonOption?  CheckRequiredArgs()  :  null;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  stopAtNonOption?  CheckRequiredArgs()  :  null;	  if(stopAtNonOption)    {    CheckRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
116	[BUG]  [BUGGY]  Option  cmd  =  stopAtNonOption?  checkRequiredArgs()  :  null;  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  stopAtNonOption?  checkRequiredArgs()  :  null;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  stopAtNonOption?  checkRequiredArgs()  :  null;	  if(stopAtNonOption)    {    CheckRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
117	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(currentToken);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup(currentToken);	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
118	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(true);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup(true);	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
119	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(arguments);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.getOption(arguments);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  currentOption  =  options.getOption(arguments);	  Option    currentOption    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
120	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  currentOption  =  options.getOption(currentToken,  expectedOpts);	  Option    currentOption    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
121	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkProperties(properties);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  checkProperties(properties);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  checkProperties(properties);  }	  if(stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
122	[BUG]  [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  checkProperties();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  checkProperties();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption  &&  cmd!=  null)  {  checkProperties();  }	  if(stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
123	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  null);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  null);	  Option    cmd    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
124	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  checkRequiredOptions();  }  else  {  cmd  =  new  CommandLine();  }	  if(stopAtNonOption)    {    checkProperties();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
125	[BUG]  [BUGGY]  if(cmd  ==  null)  {  checkProperties();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null)  {  checkProperties();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd  ==  null)  {  checkProperties();  }	  if(cmd    ==    null)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
126	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(defaultToken);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(defaultToken);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup(defaultToken);	  OptionGroup    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
127	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentToken,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  currentToken,  stopAtNonOption);	  Option    cmd    =    options.parseOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
128	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleSkipParsing();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  handleSkipParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  handleSkipParsing();  }	  if(stopAtNonOption)    {    handleRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
129	[BUG]  [BUGGY]  Option  cmd  =  group.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  group.getOptionGroup();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  group.getOptionGroup();	  Option    cmd    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
130	[BUG]  [BUGGY]  if(cmd!=  null)  {  handleRequiredOptions(properties);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd!=  null)  {  handleRequiredOptions(properties);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd!=  null)  {  handleRequiredOptions(properties);  }	  if(cmd!=    null)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
131	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(token);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(token);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.getOption(token);	  Option    cmd    =    currentOption.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
132	[BUG]  [BUGGY]  Option  cmd  =  options.getOption( "cmd ");  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption( "cmd ");  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption( "cmd ");	  if(cmd!=    null)    {    checkRequiredParsers();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
133	[BUG]  [BUGGY]  if(cmd!=  null)  {  checkProperties();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd!=  null)  {  checkProperties();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd!=  null)  {  checkProperties();  }	  if(cmd!=    null)    {    checkRequiredParsers();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
134	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(argument,  currentToken,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(argument,  currentToken,  stopAtNonOption);	  Option    cmd    =    options.parse(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
135	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(defaultToken);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOptionGroup(defaultToken);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  group  =  options.getOptionGroup(defaultToken);	  Option    group    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
136	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  group);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  group);	  Option    cmd    =    options.getOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
137	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parseOption(argument,  stopAtNonOption);	  Option    cmd    =    currentOption.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
138	[BUG]  [BUGGY]  if(stopAtNonOption  &&  cmd.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  checkParsing();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  cmd.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  checkParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption  &&  cmd.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  checkParsing();  }	  if(stopAtNonOption)    {    checkParsing();    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
139	[BUG]  [BUGGY]  if(skipParsing)  {  checkParsing();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(skipParsing)  {  checkParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(skipParsing)  {  checkParsing();  }	  if(stopAtNonOption)    {    checkParsing();    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
140	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  nextToken);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(argument,  nextToken);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  nextToken);	  Option    cmd    =    options.parseOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
141	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(options,  group);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(options,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.getOption(options,  group);	  Option    cmd    =    currentOption.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
142	[BUG]  [BUGGY]  if(stopAtNonOption  &&  options.hasOption(argument))  {  checkProperties();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  options.hasOption(argument))  {  checkProperties();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption  &&  options.hasOption(argument))  {  checkProperties();  }	  if(stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
143	[BUG]  [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  checkRequiredParsing();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  checkRequiredParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption  &&  cmd!=  null)  {  checkRequiredParsing();  }	  if(stopAtNonOption)    {    checkRequiredParsing();    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
144	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  currentOption  =  options.getOption(currentToken,  stopAtNonOption);	  Option    currentOption    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
145	[BUG]  [BUGGY]  Option  group  =  options.getOption( "group ");  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOption( "group ");  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  group  =  options.getOption( "group ");	  if(skipParsing)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
146	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOptionGroup(options);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  group  =  options.getOptionGroup(options);	  if(skipParsing)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
147	[BUG]  [BUGGY]  Option  group  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getOptions();  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  group  =  options.getOptions();	  if(skipParsing)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
148	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  null);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  null);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(currentToken,  null);	  Option    cmd    =    options.parseOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
149	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument,  startAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.getOption(argument,  startAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  currentOption  =  options.getOption(argument,  startAtNonOption);	  Option    currentOption    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
150	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  stopAtNonOption,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  stopAtNonOption,  expectedOpts);	  Option    cmd    =    options.getOption(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
151	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  block);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(argument,  block);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(argument,  block);	  Option    cmd    =    options.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
152	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parse(argument,  stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parse(argument,  stopAtNonOption);	  Option    cmd    =    currentOption.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
153	[BUG]  [BUGGY]  pendingParsing  =  false;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing  =  false;  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	pendingParsing  =  false;	  if(skipParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
154	[BUG]  [BUGGY]  Option  cmd  =  optionGroup.parse(options);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  optionGroup.parse(options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  optionGroup.parse(options);	  Option    cmd    =    currentOption.parse(options);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
155	[BUG]  [BUGGY]  parsing)  {  checkRequiredParsers();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing)  {  checkRequiredParsers();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	parsing)  {  checkRequiredParsers();  }	  parsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
156	[BUG]  [BUGGY]  parsing)  {  checkRequiredParser();  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing)  {  checkRequiredParser();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	parsing)  {  checkRequiredParser();  }	  parsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
157	[BUG]  [BUGGY]  if(currentOption!=  null)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(currentOption!=  null)  {  checkRequiredOptions();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(currentOption!=  null)  {  checkRequiredOptions();  }	  if(currentToken!=    null)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
158	[BUG]  [BUGGY]  if(currentToken!=  null)  {  checkRequiredParsers();  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(currentToken!=  null)  {  checkRequiredParsers();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(currentToken!=  null)  {  checkRequiredParsers();  }	  if(currentToken    ==    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
159	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getArguments();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Options  cmd  =  currentOption.getArguments();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Options  cmd  =  currentOption.getArguments();	  Options    cmd    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
160	[BUG]  [BUGGY]  pendingParsing)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	pendingParsing)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
161	[BUG]  [BUGGY]  Option  group  =  options.getGroup(currentToken);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  group  =  options.getGroup(currentToken);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  group  =  options.getGroup(currentToken);	  Option    group    =    options.getGroup();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
162	[BUG]  [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  CheckRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  CheckRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption  &&  cmd!=  null)  {  CheckRequiredArgs();  }	  if(stopAtNonOption)    {    CheckRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
163	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  CheckRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  CheckRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  CheckRequiredArgs();  }	  if(stopAtNonOption)    {    CheckRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
164	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(argument,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(argument,  expectedOpts);	  Option    cmd    =    options.parse(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
165	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup(argument);	  if(stopAtNonOption)    {    throw    new    IllegalArgumentException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
166	[BUG]  [BUGGY]  if(cmd!=  null  &&  cmd.length()  >  0)  {  checkRequiredParsers();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd!=  null  &&  cmd.length()  >  0)  {  checkRequiredParsers();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd!=  null  &&  cmd.length()  >  0)  {  checkRequiredParsers();  }	  if(cmd!=    null)    {    checkRequiredParsers();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
167	[BUG]  [BUGGY]  if(cmd!=  null)  {  checkParsers();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd!=  null)  {  checkParsers();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd!=  null)  {  checkParsers();  }	  if(cmd!=    null)    {    checkRequiredParsers();    }    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
168	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentToken,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  currentToken,  expectedOpts);	  Option    cmd    =    options.parseOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
169	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleToken(argument);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  handleToken(argument);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  handleToken(argument);  }	  if(stopAtNonOption)    {    handleRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
170	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	luate(cmd,  stopAtNonOption))  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }	  if(skipParsing)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
171	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption))  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	luate(cmd,  stopAtNonOption))  {  checkRequiredArgs();  }	  if(skipParsing)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
172	[BUG]  [BUGGY]  foundOption(true,  false)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  foundOption(true,  false)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	foundOption(true,  false)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }	  if(skipParsing)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
173	[BUG]  [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	luate(cmd,  stopAtNonOption)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }	  if(skipParsing)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
174	[BUG]  [BUGGY]  if(stopAtNonOption  &&  options.hasOption(argument))  {  checkParsing();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  &&  options.hasOption(argument))  {  checkParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption  &&  options.hasOption(argument))  {  checkParsing();  }	  if(stopAtNonOption)    {    checkParsing();    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
175	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleParsing();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  handleParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  handleParsing();  }	  if(stopAtNonOption)    {    checkParsing();    }    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
176	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  this.stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(argument,  this.stopAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(argument,  this.stopAtNonOption);	  Option    cmd    =    options.getOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
177	[BUG]  [BUGGY]  if(stopAtNonOption  ||  expectedOpts)  {  CheckRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption  ||  expectedOpts)  {  CheckRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption  ||  expectedOpts)  {  CheckRequiredArgs();  }	  if(stopAtNonOption)    {    CheckRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
178	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  checkProperties(properties);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(!stopAtNonOption)  {  checkProperties(properties);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(!stopAtNonOption)  {  checkProperties(properties);  }	  if(!stopAtNonOption)    {    checkProperties();    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
179	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  group,  currentToken);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(argument,  group,  currentToken);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(argument,  group,  currentToken);	  Option    cmd    =    options.getOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
180	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(argument,  group,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(argument,  group,  expectedOpts);	  Option    cmd    =    options.getOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
181	[BUG]  [BUGGY]  if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredArgs();  }	  if(cmd    ==    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
182	[BUG]  [BUGGY]  if(skipParsing)  {  checkParsing();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(skipParsing)  {  checkParsing();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(skipParsing)  {  checkParsing();  }  else  {  cmd  =  new  CommandLine();  }	  if(stopAtNonOption)    {    checkParsing();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
183	[BUG]  [BUGGY]  if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredOptions();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd  ==  null  ||  cmd.length()  ==  0)  {  checkRequiredOptions();  }	  if(cmd    ==    null)    {    checkRequiredOptions();    }    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
184	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parse(currentToken,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parse(currentToken,  expectedOpts);	  Option    cmd    =    currentOption.parse(currentToken);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
185	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(options,  options);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getOption(options,  options);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.getOption(options,  options);	  Option    cmd    =    currentOption.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
186	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(options,  group);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(options,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parseOption(options,  group);	  Option    cmd    =    currentOption.parseOption(options);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
187	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleRequiredParsing();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(stopAtNonOption)  {  handleRequiredParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  handleRequiredParsing();  }	  if(stopAtNonOption)    {    checkRequiredParsing();    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
188	[BUG]  [BUGGY]  if(skipParsing)  {  checkRequiredParsing();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(skipParsing)  {  checkRequiredParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(skipParsing)  {  checkRequiredParsing();  }	  if(stopAtNonOption)    {    checkRequiredParsing();    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
189	[BUG]  [BUGGY]  parsing,  group)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing,  group)  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	parsing,  group)  {  checkRequiredArgs();  }	  parsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
190	[BUG]  [BUGGY]  parsing)  {  checkParsing();  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  parsing)  {  checkParsing();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	parsing)  {  checkParsing();  }	  parsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
191	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(argument,  currentToken,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(argument,  currentToken,  expectedOpts);	  Option    cmd    =    options.parse(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
192	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  preferredOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  preferredOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  preferredOpts);	  Option    cmd    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
193	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(argument,  currentToken,  expectedOpts);	  Option    cmd    =    options.getOption(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
194	[BUG]  [BUGGY]  Option  currentOption  =  options.parseOption(argument);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.parseOption(argument);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  currentOption  =  options.parseOption(argument);	  Options    cmd    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
195	[BUG]  [BUGGY]  Option  currentOption  =  options.parseOption(currentToken);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.parseOption(currentToken);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  currentOption  =  options.parseOption(currentToken);	  Options    cmd    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
196	[BUG]  [BUGGY]  Option  currentToken  =  options.parseOption(argument);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentToken  =  options.parseOption(argument);  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  currentToken  =  options.parseOption(argument);	  Options    cmd    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
197	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  block);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.getOption(currentToken,  block);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  block);	  Option    cmd    =    options.getOption(currentToken,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
198	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(argument,  group,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  group,  expectedOpts);	  Option    cmd    =    options.parseOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
199	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  group,  currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(argument,  group,  currentToken);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  group,  currentToken);	  Option    cmd    =    options.parseOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
200	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(group,  argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(group,  argument);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(group,  argument);	  Option    cmd    =    options.parseOption(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
201	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parseOption(argument,  blockAtNonOption);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  blockAtNonOption);	  Option    cmd    =    options.parseOption(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
202	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(arguments,  group);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parse(arguments,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parse(arguments,  group);	  Option    cmd    =    currentOption.parse(arguments);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
203	[BUG]  [BUGGY]  Option  cmd  =  options.parse(arguments[currentOption  +  1]);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  options.parse(arguments[currentOption  +  1]);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(arguments[currentOption  +  1]);	  Option    cmd    =    options.parse(arguments[currentOption]);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
204	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getArguments();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getArguments();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.getArguments();	  Option    cmd    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
205	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getArgument();  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.getArgument();  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.getArgument();	  Option    cmd    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
206	[BUG]  [BUGGY]  if(cmd!=  null)  {  handleToken(cmd);  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  if(cmd!=  null)  {  handleToken(cmd);  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd!=  null)  {  handleToken(cmd);  }	  if(cmd!=    null)    {    handleProperties(properties);    }    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
207	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  cmd  =  currentOption.parseOption(argument,  expectedOpts);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parseOption(argument,  expectedOpts);	  Option    cmd    =    options.parseOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
208	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument,  group);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  Option  currentOption  =  options.getOption(argument,  group);  [BUGGY]      checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  currentOption  =  options.getOption(argument,  group);	  Option    currentOption    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
209	[BUG]  [BUGGY]  pendingParsing()  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }        [BUGGY]  pendingParsing()  {  checkRequiredArgs();  }  [BUGGY]        handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	pendingParsing()  {  checkRequiredArgs();  }	  if(skipParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
