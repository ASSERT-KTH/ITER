bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Options  cmd  =  options.parseOption(currentToken);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Options  cmd  =  options.parseOption(currentToken);  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Options  cmd  =  options.parseOption(currentToken);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
2	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(options);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  currentOption.parseOption(options);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parseOption(options);	      Option    cmd    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
3	[BUG]  [BUGGY]  Option  cmd  =  currentToken.parseOption(options);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  currentToken.parseOption(options);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentToken.parseOption(options);	      Option    cmd    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
4	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(currentToken);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  currentOption.parse(currentToken);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parse(currentToken);	      Option    cmd    =    options.parse(currentToken);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
5	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(options);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  currentOption.parse(options);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parse(options);	      Option    cmd    =    options.parse(currentOption);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
6	[BUG]  [BUGGY]  parsing)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  parsing)  {  checkRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	parsing)  {  checkRequiredArgs();  }	  if(!skipParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
7	[BUG]  [BUGGY]  if(stopAtNonOption)  {  CheckRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption)  {  CheckRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  CheckRequiredArgs();  }	  if(!skipParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
8	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkProperties();  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption)  {  checkProperties();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  checkProperties();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
9	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkProperties();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption)  {  checkProperties();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  checkProperties();  }  else  {  cmd  =  new  CommandLine();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
10	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkParsing();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption)  {  checkParsing();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  checkParsing();  }  else  {  cmd  =  new  CommandLine();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
11	[BUG]  [BUGGY]  if(cmd  ==  null)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(cmd  ==  null)  {  checkRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd  ==  null)  {  checkRequiredArgs();  }	  if(currentToken!=    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
12	[BUG]  [BUGGY]  if(currentToken  ==  null)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(currentToken  ==  null)  {  checkRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(currentToken  ==  null)  {  checkRequiredArgs();  }	  if(currentToken!=    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
13	[BUG]  [BUGGY]  if(cmd  ==  null)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(cmd  ==  null)  {  checkRequiredOptions();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd  ==  null)  {  checkRequiredOptions();  }	  if(cmd!=    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
14	[BUG]  [BUGGY]  if(cmd!=  null)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(cmd!=  null)  {  checkRequiredOptions();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd!=  null)  {  checkRequiredOptions();  }	  if(cmd!=    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
15	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getOption(options);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Options  cmd  =  currentOption.getOption(options);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Options  cmd  =  currentOption.getOption(options);	      Options    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
16	[BUG]  [BUGGY]  Options  cmd  =  options.getOption(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Options  cmd  =  options.getOption(currentToken,  expectedOpts);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Options  cmd  =  options.getOption(currentToken,  expectedOpts);	      Options    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
17	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(argument,  currentToken);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
18	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  currentOption.getOption(argument);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.getOption(argument);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
19	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parse(argument,  currentToken);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(argument,  currentToken);	      Option    cmd    =    options.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
20	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parse(argument,  currentOption);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(argument,  currentOption);	      Option    cmd    =    options.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
21	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(options);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  currentOption.getOption(options);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.getOption(options);	      Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
22	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.getOption(currentToken,  expectedOpts);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  expectedOpts);	      Option    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
23	[BUG]  [BUGGY]  Options  cmd  =  currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Options  cmd  =  currentOption.getOptions();  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Options  cmd  =  currentOption.getOptions();	      Options    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
24	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  currentOption.getOptions();  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.getOptions();	      Options    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
25	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  checkRequiredParsing();  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(!stopAtNonOption)  {  checkRequiredParsing();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(!stopAtNonOption)  {  checkRequiredParsing();  }	  if(!stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
26	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  checkProperties();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(!stopAtNonOption)  {  checkProperties();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(!stopAtNonOption)  {  checkProperties();  }	  if(!stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
27	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentToken);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  currentToken);	      Option    cmd    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
28	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  currentOption.parseOption(argument);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parseOption(argument);	      Option    cmd    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
29	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkRequiredParsing();  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption)  {  checkRequiredParsing();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  checkRequiredParsing();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
30	[BUG]  [BUGGY]  if(stopAtNonOption)  {  checkParsing();  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption)  {  checkParsing();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  checkParsing();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
31	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parseOption(argument,  stopAtNonOption);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  stopAtNonOption);	      Option    cmd    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
32	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  group  =  options.getOptionGroup();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  group  =  options.getOptionGroup();	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
33	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.getOption(currentToken,  stopAtNonOption);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(currentToken,  stopAtNonOption);	      Options    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
34	[BUG]  [BUGGY]  Options  cmd  =  options.getOption(currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Options  cmd  =  options.getOption(currentToken,  stopAtNonOption);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Options  cmd  =  options.getOption(currentToken,  stopAtNonOption);	      Options    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
35	[BUG]  [BUGGY]  if(cmd!=  null)  {  checkRequiredParsers();  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(cmd!=  null)  {  checkRequiredParsers();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd!=  null)  {  checkRequiredParsers();  }	  if(cmd!=    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
36	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(argument);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  currentOption.parse(argument);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parse(argument);	      Option    cmd    =    options.parse(currentToken);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
37	[BUG]  [BUGGY]  Option  cmd  =  options.parse(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parse(currentToken,  expectedOpts);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(currentToken,  expectedOpts);	      Option    cmd    =    options.parse(currentToken);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
38	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parse(argument,  stopAtNonOption);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(argument,  stopAtNonOption);	      Option    cmd    =    options.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
39	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parse(arguments);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  currentOption.parse(arguments);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  currentOption.parse(arguments);	      Option    cmd    =    options.parse(currentOption);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
40	[BUG]  [BUGGY]  Options  cmd  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Options  cmd  =  options.getOptionGroup();  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Options  cmd  =  options.getOptionGroup();	      Options    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
41	[BUG]  [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption  &&  cmd!=  null)  {  checkRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption  &&  cmd!=  null)  {  checkRequiredArgs();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
42	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(argument,  stopAtNonOption);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
43	[BUG]  [BUGGY]  if(skipParsing)  {  checkRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(skipParsing)  {  checkRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(skipParsing)  {  checkRequiredArgs();  }	  if(!skipParsing)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
44	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  currentOption  =  options.getOption(argument);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  currentOption  =  options.getOption(argument);	      Options    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
45	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  currentOption  =  options.getOption(currentToken);	      Options    cmd    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
46	[BUG]  [BUGGY]  Option  cmd  =  options.parse(arguments[currentOption]);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parse(arguments[currentOption]);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parse(arguments[currentOption]);	      Option    cmd    =    options.parse(currentOption);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
47	[BUG]  [BUGGY]  if(currentToken!=  null)  {  checkRequiredOptions();  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(currentToken!=  null)  {  checkRequiredOptions();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(currentToken!=  null)  {  checkRequiredOptions();  }	  if(currentToken!=    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
48	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  group);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.getOption(argument,  group);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOption(argument,  group);	      Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
49	[BUG]  [BUGGY]  if(cmd!=  null)  {  handleProperties(properties);  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(cmd!=  null)  {  handleProperties(properties);  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(cmd!=  null)  {  handleProperties(properties);  }	  if(cmd!=    null)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
50	[BUG]  [BUGGY]  if(stopAtNonOption)  {  handleRequiredArgs();  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption)  {  handleRequiredArgs();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  handleRequiredArgs();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
51	[BUG]  [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(stopAtNonOption)  {  throw  new  IllegalArgumentException( " ");  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  group);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parseOption(argument,  group);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(argument,  group);	      Option    cmd    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
53	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  OptionGroup  group  =  options.getGroup();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	OptionGroup  group  =  options.getGroup();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
54	[BUG]  [BUGGY]  Option  group  =  options.getGroup();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  group  =  options.getGroup();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  group  =  options.getGroup();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
55	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  OptionGroup  group  =  options.getOptionGroup();  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	OptionGroup  group  =  options.getOptionGroup();	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
56	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.parseOption(currentToken,  expectedOpts);  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.parseOption(currentToken,  expectedOpts);	      Option    cmd    =    options.parseOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
57	[BUG]  [BUGGY]  Option  cmd  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  Option  cmd  =  options.getOptionGroup();  [BUGGY]    checkRequiredArgs();  handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	Option  cmd  =  options.getOptionGroup();	      Options    cmd    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
58	[BUG]  [BUGGY]  if(skipParsing)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {  handleToken(argument);  }  }      [BUGGY]  if(skipParsing)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }  [BUGGY]      handleProperties(properties);  checkRequiredOptions();  return  cmd;  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	125	125	1	replace	if(skipParsing)  {  checkRequiredArgs();  }  else  {  cmd  =  new  CommandLine();  }	  if(stopAtNonOption)    {    checkRequiredArgs();    }    else    {    cmd    =    new    CommandLine();    }    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
