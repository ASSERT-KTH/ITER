projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125checkRequiredArgs();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!skipParsing){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(currentToken!=null){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredArgs();}else{cmd=newCommandLine();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.parseOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentToken.parseOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125parsing){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){CheckRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkProperties();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkProperties();}else{cmd=newCommandLine();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkParsing();}else{cmd=newCommandLine();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(currentToken==null){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd==null){checkRequiredOptions();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){checkRequiredOptions();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.getOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOption(currentToken,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=currentOption.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){checkRequiredParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(!stopAtNonOption){checkProperties();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parseOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkRequiredParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){checkParsing();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(currentToken,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOption(currentToken,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){checkRequiredParsers();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(currentToken,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=currentOption.parse(arguments);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optionscmd=options.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption&&cmd!=null){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(skipParsing){checkRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptioncurrentOption=options.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parse(arguments[currentOption]);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(currentToken!=null){checkRequiredOptions();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOption(argument,group);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(cmd!=null){handleProperties(properties);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){handleRequiredArgs();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(argument,group);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optiongroup=options.getGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125OptionGroupgroup=options.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.parseOption(currentToken,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125Optioncmd=options.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java125if(skipParsing){checkRequiredArgs();}else{cmd=newCommandLine();}
