bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    String[]  arguments  =  cmd.toArray(new  String[cmd.size()  ]);  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]    String[]  arguments  =  cmd.toArray(new  String[cmd.size()  ]);  [BUGGY]  for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	    String[]  arguments  =  cmd.toArray(new  String[cmd.size()  ]);		non-compiled	[CE]  illegal  start  of  type	51	None	add
2	[BUG]  [BUGGY]    String[]  arguments  =  cmd.split( ": ");  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]    String[]  arguments  =  cmd.split( ": ");  [BUGGY]  for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	    String[]  arguments  =  cmd.split( ": ");		non-compiled	[CE]  illegal  start  of  type	51	None	add
3	[BUG]  [BUGGY]    String[]  arguments  =  cmd.toArray(new  String[cmd.length()  ]);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]    String[]  arguments  =  cmd.toArray(new  String[cmd.length()  ]);  [BUGGY]  for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	    String[]  arguments  =  cmd.toArray(new  String[cmd.length()  ]);		non-compiled	[CE]  illegal  start  of  type	51	None	add
4	[BUG]  [BUGGY]    String[]  arguments  =  cmd.split( "n ");  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]    String[]  arguments  =  cmd.split( "n ");  [BUGGY]  for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	    String[]  arguments  =  cmd.split( "n ");		non-compiled	[CE]  illegal  start  of  type	51	None	add
5	[BUG]  [BUGGY]    Options  properties  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]    Options  properties  =  options.getOptions();  [BUGGY]  for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	    Options  properties  =  options.getOptions();		non-compiled	[CE]  illegal  start  of  type	51	None	add
6	[BUG]  [BUGGY]  for(String  argument  :  arguments.length)  {  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]  for(String  argument  :  arguments.length)  {  [BUGGY]  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.length)  {	for  (String  argument  :  arguments)  {  	non-compiled	[CE]  illegal  start  of  type	50	None	replace
7	[BUG]  [BUGGY]  for(String  argument  :  options.getArguments())  {  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]  for(String  argument  :  options.getArguments())  {  [BUGGY]  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.getArguments())  {	for  (String  argument  :  arguments)  {  	non-compiled	[CE]  illegal  start  of  type	50	None	replace
8	[BUG]  [BUGGY]  for(String  argument  :  arguments.keySet())  {  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]  for(String  argument  :  arguments.keySet())  {  [BUGGY]  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.keySet())  {	for  (String  argument  :  arguments)  {  	non-compiled	[CE]  illegal  start  of  type	50	None	replace
9	[BUG]  [BUGGY]  for(String  argument  :  expectedOpts)  {  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]  for(String  argument  :  expectedOpts)  {  [BUGGY]  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  expectedOpts)  {	for  (String  argument  :  arguments)  {  	non-compiled	[CE]  illegal  start  of  type	50	None	replace
10	[BUG]  [BUGGY]    java.lang.AssertionError:  expected  null;  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]    java.lang.AssertionError:  expected  null;  [BUGGY]  for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	    java.lang.AssertionError:  expected  null;		non-compiled	[CE]  illegal  start  of  type	51	None	add
11	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(cmd);  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]    Option  currentOption  =  options.getOption(cmd);  [BUGGY]  for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	    Option  currentOption  =  options.getOption(cmd);		non-compiled	[CE]  illegal  start  of  type	51	None	add
12	[BUG]  [BUGGY]    Options  options  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]    Options  options  =  options.getOptions();  [BUGGY]  for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	    Options  options  =  options.getOptions();		non-compiled	[CE]  illegal  start  of  type	51	None	add
13	[BUG]  [BUGGY]    java.lang.AssertionError:  expectedNull;  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]    java.lang.AssertionError:  expectedNull;  [BUGGY]  for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	    java.lang.AssertionError:  expectedNull;		non-compiled	[CE]  illegal  start  of  type	51	None	add
14	[BUG]  [BUGGY]    Option  currentOption  =  options.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]    Option  currentOption  =  options.getOption(currentToken);  [BUGGY]  for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	    Option  currentOption  =  options.getOption(currentToken);		non-compiled	[CE]  illegal  start  of  type	51	None	add
15	[BUG]  [BUGGY]  for(String  argument  :  options.getArgumentArgs())  {  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]  for(String  argument  :  options.getArgumentArgs())  {  [BUGGY]  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.getArgumentArgs())  {	for  (String  argument  :  arguments)  {  	non-compiled	[CE]  illegal  start  of  type	50	None	replace
16	[BUG]  [BUGGY]  for(String  argument  :  cmd)  {  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]  for(String  argument  :  cmd)  {  [BUGGY]  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  cmd)  {	for  (String  argument  :  arguments)  {  	non-compiled	[CE]  illegal  start  of  type	50	None	replace
17	[BUG]  [BUGGY]  for(String  argument  :  options.getArgumentNames())  {  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]  for(String  argument  :  options.getArgumentNames())  {  [BUGGY]  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.getArgumentNames())  {	for  (String  argument  :  arguments)  {  	non-compiled	[CE]  illegal  start  of  type	50	None	replace
18	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]))  {  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]))  {  [BUGGY]  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]))  {	for  (String  argument  :  arguments)  {  	non-compiled	[CE]  illegal  start  of  type	50	None	replace
19	[BUG]  [BUGGY]  for(String  argument  :  arguments.values())  {  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]  for(String  argument  :  arguments.values())  {  [BUGGY]  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.values())  {	for  (String  argument  :  arguments)  {  	non-compiled	[CE]  illegal  start  of  type	50	None	replace
20	[BUG]  [BUGGY]    OptionGroup  currentOption  =  options.getOptionGroup(cmd);  [CE]  illegal  start  of  type  [FE]    java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]    OptionGroup  currentOption  =  options.getOptionGroup(cmd);  [BUGGY]  for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	    OptionGroup  currentOption  =  options.getOptionGroup(cmd);		non-compiled	[CE]  illegal  start  of  type	51	None	add
21	[BUG]  [BUGGY]    Argument[]  arguments  =  cmd.toArray(new  Arguments);  [CE]  illegal  start  of  type  [FE]      java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]    Argument[]  arguments  =  cmd.toArray(new  Arguments);  [BUGGY]  for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	    Argument[]  arguments  =  cmd.toArray(new  Arguments);		non-compiled	[CE]  illegal  start  of  type	51	None	add
22	[BUG]  [BUGGY]    Argument[]  arguments  =  cmd.getArguments();  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null  [CONTEXT]    for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {  [BUGGY]    Argument[]  arguments  =  cmd.getArguments();  [BUGGY]  for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	    Argument[]  arguments  =  cmd.getArguments();		non-compiled	[CE]  illegal  start  of  type	51	None	add
