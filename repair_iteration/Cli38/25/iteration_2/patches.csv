bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(stopAtNonOption)  {  AssertionError:  expected(null);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  if(stopAtNonOption)  {  AssertionError:  expected(null);  }  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	if(stopAtNonOption)  {  AssertionError:  expected(null);  }	  java.lang.AssertionError:    expected(null);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
2	[BUG]  [BUGGY]  java.lang.AssertionError:  expected(null,  cmd);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  java.lang.AssertionError:  expected(null,  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	java.lang.AssertionError:  expected(null,  cmd);	  java.lang.AssertionError:    expected(null);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
3	[BUG]  [BUGGY]  Argument[]  arguments  =  currentToken.toArray(new  Arguments);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  currentToken.toArray(new  Arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  currentToken.toArray(new  Arguments);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
4	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  currentToken,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  currentToken,  expectedOpts);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
5	[BUG]  [BUGGY]  AssertionError:  expectedNull;  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  AssertionError:  expectedNull;  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	AssertionError:  expectedNull;	  if(expectedNull)    {    AssertionError:    expectedNull;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
6	[BUG]  [BUGGY]  While(expectedNull)  {  AssertionError:  expectedNull;  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  While(expectedNull)  {  AssertionError:  expectedNull;  }  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	While(expectedNull)  {  AssertionError:  expectedNull;  }	  if(expectedNull)    {    AssertionError:    expectedNull;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
7	[BUG]  [BUGGY]  AnsertionError:  expectedNull;  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  AnsertionError:  expectedNull;  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	AnsertionError:  expectedNull;	  if(expectedNull)    {    AssertionError:    expectedNull;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
8	[BUG]  [BUGGY]  aughtExceptionHandler:  expectedNull;  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  aughtExceptionHandler:  expectedNull;  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	aughtExceptionHandler:  expectedNull;	  if(expectedNull)    {    AssertionError:    expectedNull;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
9	[BUG]  [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.size()  *  1]);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.size()  *  1]);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.toArray(new  String[cmd.size()  *  1]);	  String[]    arguments    =    cmd.toArray(new    String[cmd.size()    +    1]);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
10	[BUG]  [BUGGY]  Option  currentOption  =  options.getOptionGroup(cmd);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOptionGroup(cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOptionGroup(cmd);	  Option    currentOption    =    options.getOptionGroup(group);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
11	[BUG]  [BUGGY]  Option  currentOption  =  options.getOptionGroup(group,  cmd);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOptionGroup(group,  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOptionGroup(group,  cmd);	  Option    currentOption    =    options.getOptionGroup(group);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
12	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOptionGroup(group);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  cmd.getOptionGroup(group);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  cmd.getOptionGroup(group);	  Option    currentOption    =    options.getOptionGroup(group);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
13	[BUG]  [BUGGY]  for(String  argument  :  cmd.getArguments())  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  cmd.getArguments())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  cmd.getArguments())  {	  for(String    argument    :    properties.getArguments())    {    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
14	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments,  currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments,  currentToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments,  currentToken);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    arguments);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
15	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments,  stopAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  arguments,  stopAtNonOption);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    arguments);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
16	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.length  -  1]))  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.length  -  1]))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.length  -  1]))  {	  for(String    argument    :    arguments.toArray(new    String[arguments.length]))    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
17	[BUG]  [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.length]))  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.length]))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.toArray(new  String[arguments.length]))  {	  for(String    argument    :    arguments.toArray(new    String[arguments.length]))    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
18	[BUG]  [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.length]))  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.length]))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  properties.toArray(new  String[arguments.length]))  {	  for(String    argument    :    arguments.toArray(new    String[arguments.length]))    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
19	[BUG]  [BUGGY]  Options  properties  =  group.getOptions();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  group.getOptions();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Options  properties  =  group.getOptions();	  Options    properties    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
20	[BUG]  [BUGGY]  Argument[]  arguments  =  this.group.getArguments();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  this.group.getArguments();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  this.group.getArguments();	  Argument[]    arguments    =    group.getArguments();    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
21	[BUG]  [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[Cmd.size()]);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[Cmd.size()]);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.toArray(new  String[Cmd.size()]);	  String[]    arguments    =    cmd.toArray(new    String[cmd.size()    -    1]);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
22	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(currentToken,  expectedOpts,  stopAtNonOption);	  Option    currentOption    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
23	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  expectedOpts,  cmd);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  expectedOpts,  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(currentToken,  expectedOpts,  cmd);	  Option    currentOption    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
24	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  expectedOpts);	  Option    currentOption    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
25	[BUG]  [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.length()  *  1]);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.length()  *  1]);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.toArray(new  String[cmd.length()  *  1]);	  String[]    arguments    =    cmd.toArray(new    String[cmd.length()    +    1]);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
26	[BUG]  [BUGGY]  for(String  argument  :  cmd.getArgumentNames())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  cmd.getArgumentNames())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  cmd.getArgumentNames())  {	  for(String    argument    :    properties.getArgumentNames())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
27	[BUG]  [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  this)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  this)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  this)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    this)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
28	[BUG]  [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  this)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  this)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  this)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    this)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
29	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(cmd,  null);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(cmd,  null);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	OptionGroup  currentOption  =  options.getOptionGroup(cmd,  null);	  OptionGroup    currentOption    =    options.getOptionGroup(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
30	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(cmd,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(cmd,  stopAtNonOption,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	OptionGroup  currentOption  =  options.getOptionGroup(cmd,  stopAtNonOption,  expectedOpts);	  OptionGroup    currentOption    =    options.getOptionGroup(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
31	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(group,  stopAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	OptionGroup  currentOption  =  options.getOptionGroup(group,  stopAtNonOption);	  OptionGroup    currentOption    =    options.getOptionGroup(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
32	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  exceptions);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  exceptions);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  options.toArray(new  Arguments,  exceptions);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    exceptions);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
33	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  exceptions,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  exceptions,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  exceptions,  expectedOpts);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    exceptions);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
34	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "/> ");  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "/> ");  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.split( "/> ");	  String[]    arguments    =    cmd.split(   "/   ");    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
35	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "/.* ");  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "/.* ");  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.split( "/.* ");	  String[]    arguments    =    cmd.split(   "/   ");    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
36	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "/. ");  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "/. ");  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.split( "/. ");	  String[]    arguments    =    cmd.split(   "/   ");    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
37	[BUG]  [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  cmd)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  cmd)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  cmd)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
38	[BUG]  [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  cmd)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  cmd)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  cmd)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
39	[BUG]  [BUGGY]  Options  properties  =  options.getOptionProperties();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptionProperties();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Options  properties  =  options.getOptionProperties();	  Options    properties    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
40	[BUG]  [BUGGY]  Options  properties  =  options.getOptionOpts();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptionOpts();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Options  properties  =  options.getOptionOpts();	  Options    properties    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
41	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(group);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  cmd.getOption(group);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  cmd.getOption(group);	  Option    currentOption    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
42	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group,  cmd);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(group,  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(group,  cmd);	  Option    currentOption    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
43	[BUG]  [BUGGY]  Option  properties  =  cmd.getOptions();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  properties  =  cmd.getOptions();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  properties  =  cmd.getOptions();	  Option    properties    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
44	[BUG]  [BUGGY]  Option  properties  =  options.getOptions(cmd);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  properties  =  options.getOptions(cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  properties  =  options.getOptions(cmd);	  Option    properties    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
45	[BUG]  [BUGGY]  Option  properties  =  options.getOptions(),  cmd);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  properties  =  options.getOptions(),  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  properties  =  options.getOptions(),  cmd);	  Option    properties    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
46	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  currentToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  currentToken);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
47	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  stopAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  stopAtNonOption);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
48	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  0);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  0);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  0);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
49	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  group);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  group);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  group);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
50	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  group);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  group);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  group);	  Option    currentOption    =    options.getOption(cmd,    null);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
51	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(group,  null);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(group,  null);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(group,  null);	  Option    currentOption    =    options.getOption(cmd,    null);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
52	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  this);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  this);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  this);	  Option    currentOption    =    options.getOption(cmd,    null);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
53	[BUG]  [BUGGY]  AssertionError:  expected  null;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  AssertionError:  expected  null;  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	AssertionError:  expected  null;	  if(!stopAtNonOption)    {    AssertionError:    expected    null;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
54	[BUG]  [BUGGY]  ||!stopAtNonOption)  {  AssertionError:  expected  null;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  ||!stopAtNonOption)  {  AssertionError:  expected  null;  }  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	||!stopAtNonOption)  {  AssertionError:  expected  null;  }	  if(!stopAtNonOption)    {    AssertionError:    expected    null;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
55	[BUG]  [BUGGY]  ||!stopAtNonOption)  {  AssertionError:  expected  null;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  ||!stopAtNonOption)  {  AssertionError:  expected  null;  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	||!stopAtNonOption)  {  AssertionError:  expected  null;	  if(!stopAtNonOption)    {    AssertionError:    expected    null;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
56	[BUG]  [BUGGY]  for(String  argument  :  options.toArray(new  String[]  {  }  ))  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.toArray(new  String[]  {  }  ))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.toArray(new  String[]  {  }  ))  {	  for(String    argument    :    arguments.toArray(new    String[]    {    }    ))    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
57	[BUG]  [BUGGY]  for(String  argument  :  properties.toArray(new  String[]  {  }  ))  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.toArray(new  String[]  {  }  ))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  properties.toArray(new  String[]  {  }  ))  {	  for(String    argument    :    arguments.toArray(new    String[]    {    }    ))    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
58	[BUG]  [BUGGY]  for(String  argument  :  cmd.toArray(new  String[]  {  }  ))  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  cmd.toArray(new  String[]  {  }  ))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  cmd.toArray(new  String[]  {  }  ))  {	  for(String    argument    :    arguments.toArray(new    String[]    {    }    ))    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
59	[BUG]  [BUGGY]  for(String  argument  :  expectedOpts.length,  cmd)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  expectedOpts.length,  cmd)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  expectedOpts.length,  cmd)  {	  for(String    argument    :    expectedOpts.length)    {    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
60	[BUG]  [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[Cmd.length()]);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[Cmd.length()]);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.toArray(new  String[Cmd.length()]);	  String[]    arguments    =    cmd.toArray(new    String[cmd.length()    -    1]);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
61	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  cmd);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  options.toArray(new  Arguments,  cmd);	  Argument[]    arguments    =    options.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
62	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(cmd);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  options.toArray(cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  options.toArray(cmd);	  Argument[]    arguments    =    options.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
63	[BUG]  [BUGGY]  Option[]  arguments  =  options.toArray(new  Option[arguments.size()  ]);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option[]  arguments  =  options.toArray(new  Option[arguments.size()  ]);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option[]  arguments  =  options.toArray(new  Option[arguments.size()  ]);	  Argument[]    arguments    =    options.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
64	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currToken,  cmd);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(currToken,  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(currToken,  cmd);	  Option    currentOption    =    options.getOption(currToken);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
65	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(currToken);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  cmd.getOption(currToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  cmd.getOption(currToken);	  Option    currentOption    =    options.getOption(currToken);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
66	[BUG]  [BUGGY]  Options  properties  =  options.getOptions(group);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptions(group);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Options  properties  =  options.getOptions(group);	  Options    properties    =    options.getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
67	[BUG]  [BUGGY]  Options  properties  =  options.getOptions(cmd,  currentToken);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptions(cmd,  currentToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Options  properties  =  options.getOptions(cmd,  currentToken);	  Options    properties    =    options.getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
68	[BUG]  [BUGGY]  Options  properties  =  options.getOptions(currentOption);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptions(currentOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Options  properties  =  options.getOptions(currentOption);	  Options    properties    =    options.getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
69	[BUG]  [BUGGY]  Options  properties  =  options.getOptions(currentToken);  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptions(currentToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Options  properties  =  options.getOptions(currentToken);	  Options    properties    =    options.getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
70	[BUG]  [BUGGY]  String[]  arguments  =  group.split( ": "  +  name);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  group.split( ": "  +  name);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  group.split( ": "  +  name);	  String[]    arguments    =    group.split(   ":   ");    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
71	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(options,  group);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  cmd.getOption(options,  group);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  cmd.getOption(options,  group);	  Option    currentOption    =    cmd.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
72	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(options,  null);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  cmd.getOption(options,  null);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  cmd.getOption(options,  null);	  Option    currentOption    =    cmd.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
73	[BUG]  [BUGGY]  Option  options  =  group.getOptions();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  options  =  group.getOptions();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  options  =  group.getOptions();	  Option    options    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
74	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(),  cmd);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  options  =  currentOption.getOptions(),  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  options  =  currentOption.getOptions(),  cmd);	  Option    options    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
75	[BUG]  [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  currentToken)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  currentToken)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  currentToken)  {	  for(String    argument    :    options.toArray(new    String[arguments.size()    ]))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
76	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( ": "  +  group.getName()  +  1);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( ": "  +  group.getName()  +  1);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.split( ": "  +  group.getName()  +  1);	  String[]    arguments    =    cmd.split(   ":   "    +    group.getName());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
77	[BUG]  [BUGGY]  String[]  arguments  =  group.split( ": "  +  cmd.getName());  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  group.split( ": "  +  cmd.getName());  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  group.split( ": "  +  cmd.getName());	  String[]    arguments    =    cmd.split(   ":   "    +    group.getName());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
78	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( ": "  +  group.getName()  + ";n ");  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( ": "  +  group.getName()  + ";n ");  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.split( ": "  +  group.getName()  + ";n ");	  String[]    arguments    =    cmd.split(   ":   "    +    group.getName());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
79	[BUG]  [BUGGY]  for(String  argument  :  options.properties.length)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.properties.length)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.properties.length)  {	  for(String    argument    :    properties.length)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
80	[BUG]  [BUGGY]  Arguments[]  arguments  =  cmd.getArguments();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Arguments[]  arguments  =  cmd.getArguments();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Arguments[]  arguments  =  cmd.getArguments();	  Argument[]    arguments    =    this.cmd.getArguments();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
81	[BUG]  [BUGGY]  Option[]  arguments  =  cmd.getArguments();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option[]  arguments  =  cmd.getArguments();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option[]  arguments  =  cmd.getArguments();	  Argument[]    arguments    =    this.cmd.getArguments();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
82	[BUG]  [BUGGY]  Argument[]  arguments  =  group.toArray(new  Arguments,  cmd);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  group.toArray(new  Arguments,  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  group.toArray(new  Arguments,  cmd);	  Argument[]    arguments    =    group.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
83	[BUG]  [BUGGY]  Argument[]  arguments  =  group.toArray(new  Arguments,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  group.toArray(new  Arguments,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  group.toArray(new  Arguments,  expectedOpts);	  Argument[]    arguments    =    group.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
84	[BUG]  [BUGGY]  for(String  argument  :  arguments.keySet(),  cmd)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.keySet(),  cmd)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.keySet(),  cmd)  {	  for(String    argument    :    arguments.length,    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
85	[BUG]  [BUGGY]  for(String  argument  :  arguments.length,  commandLine)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.length,  commandLine)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.length,  commandLine)  {	  for(String    argument    :    arguments.length,    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
86	[BUG]  [BUGGY]  for(String  argument  :  arguments.length,  command)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.length,  command)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.length,  command)  {	  for(String    argument    :    arguments.length,    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
87	[BUG]  [BUGGY]  java.lang.AssertionError:  expected  =  true;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  java.lang.AssertionError:  expected  =  true;  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	java.lang.AssertionError:  expected  =  true;	  java.lang.AssertionError:    expected    =    null;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
88	[BUG]  [BUGGY]  java.lang.AssertionError:  expected  =  cmd;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  java.lang.AssertionError:  expected  =  cmd;  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	java.lang.AssertionError:  expected  =  cmd;	  java.lang.AssertionError:    expected    =    null;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
89	[BUG]  [BUGGY]  for(String  argument  :  arguments.getArgumentValues())  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.getArgumentValues())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.getArgumentValues())  {	  for(String    argument    :    options.getArgumentValues())    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
90	[BUG]  [BUGGY]  for(String  argument  :  options.getArgumentOpts())  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.getArgumentOpts())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.getArgumentOpts())  {	  for(String    argument    :    options.getArgumentValues())    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
91	[BUG]  [BUGGY]  for(String  argument  :  options.properties)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.properties)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.properties)  {	  for(String    argument    :    properties)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
92	[BUG]  [BUGGY]  for(String  argument  :  cmd.properties)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  cmd.properties)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  cmd.properties)  {	  for(String    argument    :    properties)    {    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
93	[BUG]  [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  currentToken)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  currentToken)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  currentToken)  {	  for(String    argument    :    properties.toArray(new    String[arguments.size()    ]))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
94	[BUG]  [BUGGY]  for(String  argument  :  cmd.toArray(new  String[arguments.size()  ]),  currentToken)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  cmd.toArray(new  String[arguments.size()  ]),  currentToken)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  cmd.toArray(new  String[arguments.size()  ]),  currentToken)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    currentToken)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
95	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  currentToken);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  currentToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  currentToken);	  Option    currentOption    =    options.getOption(currentToken,    cmd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
96	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  null);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  null);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(currentToken,  null);	  Option    currentOption    =    options.getOption(currentToken,    cmd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
97	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  command);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  command);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(currentToken,  command);	  Option    currentOption    =    options.getOption(currentToken,    cmd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
98	[BUG]  [BUGGY]  for(String  argument  :  arguments.getArgumentParameters())  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.getArgumentParameters())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.getArgumentParameters())  {	  for(String    argument    :    options.getArgumentParameters())    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
99	[BUG]  [BUGGY]  for(String  argument  :  arguments.getOptionNames())  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.getOptionNames())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.getOptionNames())  {	  for(String    argument    :    options.getOptionNames())    {    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
100	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  expectedOpts);	  Option    currentOption    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
101	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  blockAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  blockAtNonOption);	  Option    currentOption    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
102	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  properties);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  properties);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  stopAtNonOption,  properties);	  Option    currentOption    =    options.getOption(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
103	[BUG]  [BUGGY]  Option[]  arguments  =  options.getArguments();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option[]  arguments  =  options.getArguments();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option[]  arguments  =  options.getArguments();	  Argument[]    arguments    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
104	[BUG]  [BUGGY]  Argument[]  arguments  =  this.options.getArguments();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  this.options.getArguments();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  this.options.getArguments();	  Argument[]    arguments    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
105	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  AssertionError:  expected  null;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  ||  stopAtNonOption)  {  AssertionError:  expected  null;  }  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	||  stopAtNonOption)  {  AssertionError:  expected  null;  }	  if(stopAtNonOption)    {    AssertionError:    expected    null;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
106	[BUG]  [BUGGY]  ||  stopAtNonOption)  {  AssertionError:  expected  null;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  ||  stopAtNonOption)  {  AssertionError:  expected  null;  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	||  stopAtNonOption)  {  AssertionError:  expected  null;	  if(stopAtNonOption)    {    AssertionError:    expected    null;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
107	[BUG]  [BUGGY]  AnsertionError:  expected  null;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  AnsertionError:  expected  null;  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	AnsertionError:  expected  null;	  if(stopAtNonOption)    {    AssertionError:    expected    null;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
108	[BUG]  [BUGGY]  Option  options  =  cmd.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  options  =  cmd.getOptionGroups();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  options  =  cmd.getOptionGroups();	  Option    options    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
109	[BUG]  [BUGGY]  for(String  argument  :  arguments.getOptionArguments())  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.getOptionArguments())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.getOptionArguments())  {	  for(String    argument    :    options.getOptionArguments())    {    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
110	[BUG]  [BUGGY]  for(String  argument  :  arguments.getOptionArgs())  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.getOptionArgs())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.getOptionArgs())  {	  for(String    argument    :    options.getOptionArgs())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
111	[BUG]  [BUGGY]  for(String  argument  :  options.getArgs())  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.getArgs())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.getArgs())  {	  for(String    argument    :    options.getOptionArgs())    {    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
112	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(group,  cmd);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(group,  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	OptionGroup  currentOption  =  options.getOptionGroup(group,  cmd);	  OptionGroup    currentOption    =    options.getOptionGroup(group);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
113	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  AssertionError:  expected;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  if(!stopAtNonOption)  {  AssertionError:  expected;  }  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	if(!stopAtNonOption)  {  AssertionError:  expected;  }	  java.lang.AssertionError:    expected;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
114	[BUG]  [BUGGY]  if(stopAtNonOption)  {  AssertionError:  expected;  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  if(stopAtNonOption)  {  AssertionError:  expected;  }  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	if(stopAtNonOption)  {  AssertionError:  expected;  }	  java.lang.AssertionError:    expected;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
115	[BUG]  [BUGGY]  java.lang.AssertionError:  expectedOpts;  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  java.lang.AssertionError:  expectedOpts;  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	java.lang.AssertionError:  expectedOpts;	  java.lang.AssertionError:    expected;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
116	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "-n ");  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "-n ");  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.split( "-n ");	  String[]    arguments    =    cmd.split(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
117	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "- ")+  1;  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "- ")+  1;  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.split( "- ")+  1;	  String[]    arguments    =    cmd.split(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
118	[BUG]  [BUGGY]  Options  properties  =  cmd.getProperties();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  cmd.getProperties();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Options  properties  =  cmd.getProperties();	  Options    properties    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
119	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  expectedOpts);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    options);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
120	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(arguments);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  cmd.getOption(arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  cmd.getOption(arguments);	  Option    currentOption    =    cmd.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
121	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(cmd,  group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(cmd,  group,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	OptionGroup  currentOption  =  options.getOptionGroup(cmd,  group,  expectedOpts);	  OptionGroup    currentOption    =    options.getOptionGroup(cmd,    group);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
122	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(cmd,  group,  0);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(cmd,  group,  0);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	OptionGroup  currentOption  =  options.getOptionGroup(cmd,  group,  0);	  OptionGroup    currentOption    =    options.getOptionGroup(cmd,    group);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
123	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(cmd,  block);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(cmd,  block);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	OptionGroup  currentOption  =  options.getOptionGroup(cmd,  block);	  OptionGroup    currentOption    =    options.getOptionGroup(cmd,    group);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
124	[BUG]  [BUGGY]  Options  properties  =  options.getOptions(),  group);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptions(),  group);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Options  properties  =  options.getOptions(),  group);	  Options    properties    =    options.getOptions(),    cmd);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
125	[BUG]  [BUGGY]  Options  properties  =  options.getOptions(),  currentToken);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptions(),  currentToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Options  properties  =  options.getOptions(),  currentToken);	  Options    properties    =    options.getOptions(),    cmd);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
126	[BUG]  [BUGGY]  Options  properties  =  options.getOptions(),  cmd,  currentToken);  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptions(),  cmd,  currentToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Options  properties  =  options.getOptions(),  cmd,  currentToken);	  Options    properties    =    options.getOptions(),    cmd);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
127	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(currentToken,  cmd);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(currentToken,  cmd);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	OptionGroup  currentOption  =  options.getOptionGroup(currentToken,  cmd);	  OptionGroup    currentOption    =    options.getOptionGroup(currentToken);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
128	[BUG]  [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {	  for(String    argument    :    options.toArray(new    String[arguments.size()    ]))    {    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
129	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  startAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  startAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  expectedOpts,  startAtNonOption);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
130	[BUG]  [BUGGY]  Options  properties  =  options.getOptions(),  cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptions(),  cmd,  stopAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Options  properties  =  options.getOptions(),  cmd,  stopAtNonOption);	  Options    properties    =    options.getOptions(),    cmd);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
131	[BUG]  [BUGGY]  AtsertionError:  expectedNull;  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  AtsertionError:  expectedNull;  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	AtsertionError:  expectedNull;	  if(expectedNull)    {    AssertionError:    expectedNull;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
132	[BUG]  [BUGGY]  String[]  arguments  =  group.split( ":n ");  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  group.split( ":n ");  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  group.split( ":n ");	  String[]    arguments    =    group.split(   ":   ");    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
133	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  arguments);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(currentToken,  arguments);	  Option    currentOption    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
134	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  options  =  currentOption.getOptionGroups();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  options  =  currentOption.getOptionGroups();	  Option    options    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
135	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "/ ")+  Arrays.asList(arguments);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "/ ")+  Arrays.asList(arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.split( "/ ")+  Arrays.asList(arguments);	  String[]    arguments    =    cmd.split(   "/   ");    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
136	[BUG]  [BUGGY]  for(String  argument  :  properties.values())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.values())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  properties.values())  {	  for(String    argument    :    expectedOpts.values())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
137	[BUG]  [BUGGY]  for(String  argument  :  cmd.values())  {  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  cmd.values())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  cmd.values())  {	  for(String    argument    :    expectedOpts.values())    {    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
138	[BUG]  [BUGGY]  Option  options  =(Option)cmd.getOptions();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  options  =(Option)cmd.getOptions();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  options  =(Option)cmd.getOptions();	  Option    options    =    cmd.getOptions();    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
139	[BUG]  [BUGGY]  for(String  argument  :  cmd.toArray(new  String[arguments.length]))  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  cmd.toArray(new  String[arguments.length]))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  cmd.toArray(new  String[arguments.length]))  {	  for(String    argument    :    arguments.toArray(new    String[arguments.length]))    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
140	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  cmd,  stopAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(currentToken,  cmd,  stopAtNonOption);	  Option    currentOption    =    options.getOption(currentToken,    cmd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
141	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  commandLine);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  commandLine);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(currentToken,  commandLine);	  Option    currentOption    =    options.getOption(currentToken,    cmd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
142	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(cmd,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(cmd,  group,  stopAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	OptionGroup  currentOption  =  options.getOptionGroup(cmd,  group,  stopAtNonOption);	  OptionGroup    currentOption    =    options.getOptionGroup(cmd,    group);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
143	[BUG]  [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.length()  1]);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.length()  1]);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.toArray(new  String[cmd.length()  1]);	  String[]    arguments    =    cmd.toArray(new    String[cmd.length()    +    1]);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
144	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  options.toArray(new  Arguments,  expectedOpts);	  Argument[]    arguments    =    options.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
145	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(currToken,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(currToken,  expectedOpts);	  Option    currentOption    =    options.getOption(currToken);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
146	[BUG]  [BUGGY]  for(String  argument  :  options.getArgumentGroups())  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.getArgumentGroups())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.getArgumentGroups())  {	  for(String    argument    :    options.getArgumentParameters())    {    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
147	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  AssertionError:  expected(null);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  if(!stopAtNonOption)  {  AssertionError:  expected(null);  }  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	if(!stopAtNonOption)  {  AssertionError:  expected(null);  }	  java.lang.AssertionError:    expected(null);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
148	[BUG]  [BUGGY]  for(String  argument  :  options.getArguments(),  cmd)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.getArguments(),  cmd)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.getArguments(),  cmd)  {	  for(String    argument    :    arguments.length,    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
149	[BUG]  [BUGGY]  for(String  argument  :  properties.keySet(),  cmd)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.keySet(),  cmd)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  properties.keySet(),  cmd)  {	  for(String    argument    :    arguments.length,    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
150	[BUG]  [BUGGY]  for(String  argument  :  options.getArgumentNames(),  cmd)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.getArgumentNames(),  cmd)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.getArgumentNames(),  cmd)  {	  for(String    argument    :    arguments.length,    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
151	[BUG]  [BUGGY]  Argument[]  arguments  =  exceptions.toArray(new  Arguments);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  exceptions.toArray(new  Arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  exceptions.toArray(new  Arguments);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    exceptions);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
152	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(cmd,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(cmd,  blockAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	OptionGroup  currentOption  =  options.getOptionGroup(cmd,  blockAtNonOption);	  OptionGroup    currentOption    =    options.getOptionGroup(cmd,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
153	[BUG]  [BUGGY]  Argument[]  arguments  =  currentOption.getArguments();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  currentOption.getArguments();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  currentOption.getArguments();	  Argument[]    arguments    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
154	[BUG]  [BUGGY]  Option  properties  =  currentOption.getOptions();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  properties  =  currentOption.getOptions();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  properties  =  currentOption.getOptions();	  Option    properties    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
155	[BUG]  [BUGGY]  Options  properties  =  options.getOptions(cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptions(cmd,  stopAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Options  properties  =  options.getOptions(cmd,  stopAtNonOption);	  Options    properties    =    options.getOptions(cmd);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
156	[BUG]  [BUGGY]  for(String  argument  :  options.properties.keySet())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.properties.keySet())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.properties.keySet())  {	  for(String    argument    :    properties.keySet())    {    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
157	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[properties.getArgumentNames()))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[properties.getArgumentNames()))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[properties.getArgumentNames()))  {	  for(String    argument    :    properties.getArgumentNames())    {    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
158	[BUG]  [BUGGY]  for(String  argument  :  cmd.toArray(new  String[arguments.size()  ]),  this)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  cmd.toArray(new  String[arguments.size()  ]),  this)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  cmd.toArray(new  String[arguments.size()  ]),  this)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    this)    {    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
159	[BUG]  [BUGGY]  Argument[]  arguments  =  this.group.toArray(new  Arguments);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  this.group.toArray(new  Arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  this.group.toArray(new  Arguments);	  Argument[]    arguments    =    group.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
160	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(opts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(opts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(opts);	  Option    currentOption    =    options.getOption(group);    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
161	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  cmd.getOption(options,  stopAtNonOption);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  cmd.getOption(options,  stopAtNonOption);	  Option    currentOption    =    cmd.getOption(options);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
162	[BUG]  [BUGGY]  for(String  argument  :  options.toArray(new  String[]  {  arguments  }  ))  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.toArray(new  String[]  {  arguments  }  ))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.toArray(new  String[]  {  arguments  }  ))  {	  for(String    argument    :    arguments.toArray(new    String[]    {    }    ))    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
163	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(null);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  cmd.getOption(null);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  cmd.getOption(null);	  Option    currentOption    =    cmd.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
164	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(defaultToken);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  cmd.getOption(defaultToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  cmd.getOption(defaultToken);	  Option    currentOption    =    cmd.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
165	[BUG]  [BUGGY]  Options  properties  =  options.getOptionFactory();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  properties  =  options.getOptionFactory();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Options  properties  =  options.getOptionFactory();	  Options    properties    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
166	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  null)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  null)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  null)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
167	[BUG]  [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.size()  1]);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.toArray(new  String[cmd.size()  1]);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.toArray(new  String[cmd.size()  1]);	  String[]    arguments    =    cmd.toArray(new    String[cmd.size()    -    1]);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
168	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "- ")+  Arrays.asList(arguments);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "- ")+  Arrays.asList(arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.split( "- ")+  Arrays.asList(arguments);	  String[]    arguments    =    cmd.split(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
169	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "- ",  -1);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "- ",  -1);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.split( "- ",  -1);	  String[]    arguments    =    cmd.split(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
170	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "- ",  0);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "- ",  0);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.split( "- ",  0);	  String[]    arguments    =    cmd.split(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
171	[BUG]  [BUGGY]  Option  properties  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  properties  =  options.getOptionGroups();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  properties  =  options.getOptionGroups();	  Option    properties    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
172	[BUG]  [BUGGY]  Option  properties  =  options.getOptionProperties();  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  properties  =  options.getOptionProperties();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  properties  =  options.getOptionProperties();	  Option    properties    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
173	[BUG]  [BUGGY]  Argument[]  arguments  =  group.toArray(new  Arguments,  options);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  group.toArray(new  Arguments,  options);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  group.toArray(new  Arguments,  options);	  Argument[]    arguments    =    group.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
174	[BUG]  [BUGGY]  aughtExceptionHandler(expectedNull);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  aughtExceptionHandler(expectedNull);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	aughtExceptionHandler(expectedNull);	  if(expectedNull)    {    AssertionError:    expectedNull;    }    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
175	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[0]  {  }  ))  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[0]  {  }  ))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[0]  {  }  ))  {	  for(String    argument    :    arguments.toArray(new    String[]    {    }    ))    {    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
176	[BUG]  [BUGGY]  Option  currentOption  =  cmd.getOption(currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  cmd.getOption(currentToken,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  cmd.getOption(currentToken,  expectedOpts);	  Option    currentOption    =    cmd.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
177	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(group);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	OptionGroup  group  =  options.getOptionGroup(group);	  OptionGroup    currentOption    =    options.getOptionGroup(group);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
178	[BUG]  [BUGGY]  for(String  argument  :  arguments.length,  options.getArguments())  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.length,  options.getArguments())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.length,  options.getArguments())  {	  for(String    argument    :    arguments.length,    cmd)    {    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
179	[BUG]  [BUGGY]  for(String  argument  :  options.getArgumentArguments())  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  options.getArgumentArguments())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  options.getArgumentArguments())  {	  for(String    argument    :    options.getArgumentValues())    {    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
180	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  currentToken);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  currentToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  options.toArray(new  Arguments,  currentToken);	  Argument[]    arguments    =    options.toArray(new    Arguments);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
181	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  this.currentToken)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  this.currentToken)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]),  this.currentToken)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.size()    ]),    currentToken)    {    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
182	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[properties.length]))  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[properties.length]))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[properties.length]))  {	  for(String    argument    :    properties.length)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
183	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[properties.size()  ]))  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[properties.size()  ]))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[properties.size()  ]))  {	  for(String    argument    :    properties.length)    {    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
184	[BUG]  [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  arguments);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  options.toArray(new  Arguments,  arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  options.toArray(new  Arguments,  arguments);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    arguments);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
185	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "/ ",  2);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "/ ",  2);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.split( "/ ",  2);	  String[]    arguments    =    cmd.split(   "/   ");    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
186	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( ": "  +  group.getName(),  options);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( ": "  +  group.getName(),  options);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.split( ": "  +  group.getName(),  options);	  String[]    arguments    =    cmd.split(   ":   "    +    group.getName());    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
187	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currToken,  null);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(currToken,  null);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(currToken,  null);	  Option    currentOption    =    options.getOption(currToken);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
188	[BUG]  [BUGGY]  java.lang.AssertionError:  expected  =  new  HashMap  <  String,  Option>();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  java.lang.AssertionError:  expected  =  new  HashMap  <  String,  Option>();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	java.lang.AssertionError:  expected  =  new  HashMap  <  String,  Option>();	  java.lang.AssertionError:    expected    =    null;    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
189	[BUG]  [BUGGY]  String[]  arguments  =  group.split( ": ",  2);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  group.split( ": ",  2);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  group.split( ": ",  2);	  String[]    arguments    =    group.split(   ":   ");    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
190	[BUG]  [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  properties.toArray(new  String[arguments.size()  ]),  stopAtNonOption)  {	  for(String    argument    :    properties.toArray(new    String[arguments.size()    ]))    {    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
191	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  null,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  null,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  null,  expectedOpts);	  Option    currentOption    =    options.getOption(cmd,    null);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
192	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(cmd,  arguments);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(cmd,  arguments);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(cmd,  arguments);	  Option    currentOption    =    options.getOption(cmd,    null);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
193	[BUG]  [BUGGY]  for(String  argument  :  this.currentOption.getArguments())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  this.currentOption.getArguments())  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  this.currentOption.getArguments())  {	  for(String    argument    :    currentOption.getArguments())    {    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
194	[BUG]  [BUGGY]  Argument[]  arguments  =(this.cmd!=  null?  this.cmd.getArguments()  :  null);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =(this.cmd!=  null?  this.cmd.getArguments()  :  null);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =(this.cmd!=  null?  this.cmd.getArguments()  :  null);	  Argument[]    arguments    =    this.cmd.getArguments();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
195	[BUG]  [BUGGY]  Argument[]  arguments  =(this.cmd!=  null?  options.getArguments()  :  new  String[]  {  this.cmd.getArguments()  }  ;  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =(this.cmd!=  null?  options.getArguments()  :  new  String[]  {  this.cmd.getArguments()  }  ;  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =(this.cmd!=  null?  options.getArguments()  :  new  String[]  {  this.cmd.getArguments()  }  ;	  Argument[]    arguments    =    this.cmd.getArguments();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
196	[BUG]  [BUGGY]  java.lang.AssertionError:  expected  exception;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  java.lang.AssertionError:  expected  exception;  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	java.lang.AssertionError:  expected  exception;	  java.lang.AssertionError:    expected;    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
197	[BUG]  [BUGGY]  String[]  arguments  =  cmd.split( "- ",  2);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  String[]  arguments  =  cmd.split( "- ",  2);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	String[]  arguments  =  cmd.split( "- ",  2);	  String[]    arguments    =    cmd.split(   "-   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
198	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  cmd,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  cmd,  expectedOpts);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(currentToken,  cmd,  expectedOpts);	  Option    currentOption    =    options.getOption(currentToken,    cmd);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
199	[BUG]  [BUGGY]  Options  options  =  currentOption.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Options  options  =  currentOption.getOptionGroups();  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Options  options  =  currentOption.getOptionGroups();	  Options    options    =    currentOption.getOptions();    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
200	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.length]),  currentToken)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.length]),  currentToken)  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.length]),  currentToken)  {	  for(String    argument    :    arguments.toArray(new    String[arguments.length]))    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
201	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.length  +  1]))  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.length  +  1]))  {  [BUGGY]      {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.length  +  1]))  {	  for(String    argument    :    arguments.toArray(new    String[arguments.length]))    {    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
202	[BUG]  [BUGGY]  AssertionError:  expected  null;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  AssertionError:  expected  null;  }  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	AssertionError:  expected  null;  }	  if(stopAtNonOption)    {    AssertionError:    expected    null;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
203	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  currentToken);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  currentToken);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  options,  currentToken);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    options);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
204	[BUG]  [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  argument);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Argument[]  arguments  =  cmd.toArray(new  Arguments,  argument);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Argument[]  arguments  =  cmd.toArray(new  Arguments,  argument);	  Argument[]    arguments    =    cmd.toArray(new    Arguments,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
205	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  expectedOpts,  null);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]        for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  if  (arguments  !=  null)  {      [BUGGY]  Option  currentOption  =  options.getOption(currentToken,  expectedOpts,  null);  [BUGGY]      for  (String  argument  :  arguments)    {  {  handleToken(argument);  }  }  checkRequiredArgs();  handleProperties(properties);  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	118	119	1	replace	Option  currentOption  =  options.getOption(currentToken,  expectedOpts,  null);	  Option    currentOption    =    options.getOption(currentToken,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
