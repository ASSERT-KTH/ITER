projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returncmd;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnexpectedOpts;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnexpected;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optionscmd=options.parseOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optionscmd=options.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parse(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(!skipParsing){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(cmd!=null){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.cmd;
