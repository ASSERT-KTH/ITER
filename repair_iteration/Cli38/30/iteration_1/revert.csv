projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returncmd;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnexpectedOpts;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnexpected;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optionscmd=options.parseOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optionscmd=options.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parse(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(!skipParsing){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(cmd!=null){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.cmd;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.getOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnnull;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){returnthis;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){returnthis;}else{expectedOpts.add(currentToken);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){returnnull;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.defaultParser==null)?null:this.defaultParser;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.defaultParser!=null)?null:this.defaultParser;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.defaultParser==null?null:this.defaultParser);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.defaultParser.options;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnexpectedOpts.length;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnexpectedOpts.size();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnexpectedOpts.size()>0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnexpectedOpts.cloneTree();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optionscmd=currentOption.parseOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parseOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optionscmd=options.parseOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd!=null)?null:this.cmd;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd==null)?null:this.cmd;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.cmd.toString();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optionscmd=options.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optionscmd=currentOption.getOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){if(!skipParsing){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){if(!skipParsing){cmd=newCommandLine();cmd.addArg(argument,stopAtNonOption);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){if(skipParsing){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132cmd=newCommandLine();cmd.addArg(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(cmd==null){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(options!=null){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parseOption(argument,options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentToken.parseOption(argument,options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parseOption(argument,arguments);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(currentToken,argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=currentOption.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.expectedOpts;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(currentToken!=null){expectedOpts.add(currentToken);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(currentToken!=null){expectedOpts=newArrayList<String>();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(currentToken!=null){expectedOpts=newArrayList<Option>();}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(currentToken!=null){expectedOpts.add(currentToken);}else{defaultParser.parse(currentToken);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parse(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parse(currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parse(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parseOption(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(argument,blockAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(argument,currentToken,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentOption.parseOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=currentToken.parseOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=optionGroup.parseOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parseOption(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(!stopAtNonOption){thrownewIllegalArgumentException("");}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(!stopAtNonOption){expectedOpts.add(argument);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(cmd==null){cmd=newCommandline();cmd.addArg(argument);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132parsing){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument,stopAtNonOption);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnexpectedOpts.clone();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd==null)?false:this.cmd;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken==null)?null:currentToken;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132return(currentToken!=null)?null:currentToken;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132return(options==null)?null:options.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parse(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parse(argument,currentOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optionscmd=currentOption.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.defaultParser==null?this.defaultParser:defaultParser);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.expected;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnexpected.length;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optioncmd=options.parse(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132OptionGroupgroup=options.getOptionGroup(defaultToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(!stopAtNonOption){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132if(skipParsing){cmd=newCommandLine();cmd.addArg(argument);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132Optionscmd=currentOption.parseOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnexpectedOpts.values();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132returnthis.cmd.substring(0,this.currentToken.length()-1);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java132return(this.cmd!=null?this.cmd:arguments[0]);
