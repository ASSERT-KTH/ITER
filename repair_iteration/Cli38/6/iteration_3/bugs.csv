bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  options.getMatchingOption(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOption(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOption(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }	  options.getMatchingOptions(t)!=    null    &&    options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
2	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null    ||    options.getMatchingOptions(token).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
3	[BUG]  [BUGGY]  options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null    ||    options.getMatchingOptions(token).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
4	[BUG]  [BUGGY]  options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null    ||    options.getMatchingOptions(token).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
5	[BUG]  [BUGGY]  options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
6	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token)/  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token)/  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(token)/  1;	  Option    options    =    options.getOptions(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
7	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token)+  2;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token)+  2;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(token)+  2;	  Option    options    =    options.getOptions(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
8	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token)+  0;  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token)+  0;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(token)+  0;	  Option    options    =    options.getOptions(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
9	[BUG]  [BUGGY]  Option  option  =  options.getOption(t);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(t);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(t);	  if(options.getMatchingOptions(t)!=    null    &&    options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
10	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-',  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('-',  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf('-',  1);	  int    pos    =    token.indexOf('-',    0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
11	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('-',  0);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('-',  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf('-',  0);	  int    pos    =    token.indexOf('-',    0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
12	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-',  -1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('-',  -1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf('-',  -1);	  int    pos    =    token.indexOf('-',    0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
13	[BUG]  [BUGGY]  options.getMatchingOption(token)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOption(token)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOption(token)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }	  options.getMatchingOptions(token)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
14	[BUG]  [BUGGY]  options.getMatchingOptions(token)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOptions(token)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(token)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }	  options.getMatchingOptions(token)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
15	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('-')+  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('-')+  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf('-')+  1;	  int    pos    =    token.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
16	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-')+  2;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('-')+  2;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf('-')+  2;	  int    pos    =    token.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
17	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-')/  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('-')/  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf('-')/  1;	  int    pos    =    token.indexOf('-')+    1;    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
18	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "= ",  -1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "= ",  -1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "= ",  -1);	  int    pos    =    token.indexOf(   "=       ",    -1);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
19	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "=   ",  token.length());  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "=   ",  token.length());  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "=   ",  token.length());	  int    pos    =    token.indexOf(   "=   ".length());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
20	[BUG]  [BUGGY]  options.getMatchingOption(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOption(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOption(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }	  options.getMatchingOptions(t)!=    null    &&    options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
21	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token)||!options.getMatchingOptions(option);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token)||!options.getMatchingOptions(option);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(token)||!options.getMatchingOptions(option);	  Option    options    =    options.getOptions(token)&&!options.getMatchingOptions(option);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
22	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(optName);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  currentOption.getOptions(optName);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  currentOption.getOptions(optName);	  Option    options    =    options.getOptions(optName);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
23	[BUG]  [BUGGY]  Options  options  =  options.getOptions(token);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Options  options  =  options.getOptions(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Options  options  =  options.getOptions(token);	  Option    options    =    options.getOptions(optName);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
24	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ": "  +  getLongPrefix(token)+  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( ": "  +  getLongPrefix(token)+  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( ": "  +  getLongPrefix(token)+  1);	  int    pos    =    token.indexOf(   ":   "    +    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
25	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ": "  +  getLongPrefix(token));  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( ": "  +  getLongPrefix(token));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( ": "  +  getLongPrefix(token));	  int    pos    =    token.indexOf(   ":   "    +    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
26	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ": "  +  getPrefix(token));  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( ": "  +  getPrefix(token));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( ": "  +  getPrefix(token));	  int    pos    =    token.indexOf(   ":   "    +    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
27	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  getLongPrefix(token)+  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- "  +  getLongPrefix(token)+  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "- "  +  getLongPrefix(token)+  1);	  int    pos    =    token.indexOf(   "-   "    +    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
28	[BUG]  [BUGGY]  int  pos  =  token.indexOf(getLongPrefix(token));  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf(getLongPrefix(token));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf(getLongPrefix(token));	  int    pos    =    token.indexOf(   "-   "    +    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
29	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  getPrefix(token));  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- "  +  getPrefix(token));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "- "  +  getPrefix(token));	  int    pos    =    token.indexOf(   "-   "    +    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
30	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)/  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token)/  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token)/  1;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  2;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token)+  2;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token)+  2;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
32	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  0;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token)+  0;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token)+  0;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
33	[BUG]  [BUGGY]  if(options!=  null)  {  Option  option  =  options.getOption(token);  if(options!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options!=  null)  {  Option  option  =  options.getOption(token);  if(options!=  null)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options!=  null)  {  Option  option  =  options.getOption(token);  if(options!=  null)  {  return  false;  }	  Option    option    =    options.getOption(token);    if(options!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  if(options  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token);  if(options  ==  null)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token);  if(options  ==  null)  {  return  false;  }	  Option    option    =    options.getOption(token);    if(options!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  Option  option  =  options.getOption(optionName)&&!options.getMatchingOptions(optionName).isEmpty();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(optionName)&&!options.getMatchingOptions(optionName).isEmpty();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(optionName)&&!options.getMatchingOptions(optionName).isEmpty();	  Option    option    =    options.getOption(token)&&!options.getMatchingOptions(optionName).isEmpty();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
36	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(t)  ==  null)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)  ==  null)  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
37	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)!=  null)  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
38	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null    ||    options.getMatchingOptions(token).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
39	[BUG]  [BUGGY]  options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null    ||    options.getMatchingOptions(token).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
40	[BUG]  [BUGGY]  options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null    ||    options.getMatchingOptions(token).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
41	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "=?   ",  0);	  int    pos    =    token.indexOf(   "=?   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
42	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "=?   ",  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "=?   ",  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "=?   ",  1);	  int    pos    =    token.indexOf(   "=?   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
43	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "= ",  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "= ",  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "= ",  1);	  int    pos    =    token.lastIndexOf(   "=   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  if(option  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token);  if(option  ==  null)  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token);  if(option  ==  null)  {  return  true;  }	  Option    option    =    options.getOption(token);    if(option!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
45	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ": ",  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( ": ",  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( ": ",  1);	  int    pos    =    token.indexOf(   ":   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
46	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ": ",  0);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( ": ",  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( ": ",  0);	  int    pos    =    token.indexOf(   ":   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
47	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ": ",  -1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( ": ",  -1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( ": ",  -1);	  int    pos    =    token.indexOf(   ":   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
48	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(token)  ==  null)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(token)  ==  null)  {  return  false;  }	  if(options.getMatchingOptions(token)!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
49	[BUG]  [BUGGY]  options.getMatchingOptions(t)  ==  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOptions(t)  ==  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(t)  ==  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }	  options.getMatchingOptions(t)!=    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
50	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)  ==  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(t)  ==  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)  ==  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }	  if(options.getMatchingOptions(t)    ==    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
51	[BUG]  [BUGGY]  Option  options  =  currentOption.getOption(token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  currentOption.getOption(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  currentOption.getOption(token);	  Option    options    =    currentOption.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
52	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  currentOption.getOptions(token,  expectedOpts);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  currentOption.getOptions(token,  expectedOpts);	  Option    options    =    currentOption.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
53	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(token,  getLongPrefix(token));  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  currentOption.getOptions(token,  getLongPrefix(token));  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  currentOption.getOptions(token,  getLongPrefix(token));	  Option    options    =    currentOption.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
54	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(token)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(token)!=  null  &&  expectedOpts.size()  >  0)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }	  if(options.getMatchingOptions(token)    ==    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
55	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "=?   ",  1);	  int    pos    =    token.lastIndexOf(   "=?   ");    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
56	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  true;  }	  if(options.getMatchingOptions(token)    ==    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
57	[BUG]  [BUGGY]  options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  true;  }	  if(options.getMatchingOptions(token)    ==    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
58	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token,  token);	  Option    option    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
59	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  pos);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token,  pos);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token,  pos);	  Option    option    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
60	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  value  -  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token,  value  -  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token,  value  -  1);	  Option    option    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
61	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  value  +  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token,  value  +  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token,  value  +  1);	  Option    option    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
62	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ").length()  +  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- ").length()  +  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "- ").length()  +  1;	  int    pos    =    token.indexOf(   "-   ".length());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
63	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  token.length());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- "  +  token.length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "- "  +  token.length());	  int    pos    =    token.indexOf(   "-   ".length());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
64	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ".length());  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "- ".length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "- ".length());	  int    pos    =    token.indexOf(   "-   ".length());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
65	[BUG]  [BUGGY]  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }	  if(options.getMatchingOptions(token)!=    null    ||    expectedOpts.size()    ==    0)    {    for(int    pos    =    0;    pos    <    token.length();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
66	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)!=  null  &&  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(token)!=  null  &&  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(token)!=  null  &&  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }	  if(options.getMatchingOptions(token)!=    null    ||    expectedOpts.size()    ==    0)    {    for(int    pos    =    0;    pos    <    token.length();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
67	[BUG]  [BUGGY]  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }	  if(options.getMatchingOptions(token)!=    null    ||    expectedOpts.size()    ==    0)    {    for(int    pos    =    0;    pos    <    token.length();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
68	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ").length();  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "- ").length();  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "- ").length();	  int    pos    =    token.lastIndexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
69	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- "  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "- "  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "- "  +  1);	  int    pos    =    token.lastIndexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
70	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "/.- ");  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "/.- ");  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "/.- ");	  int    pos    =    token.lastIndexOf(   ".-   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
71	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ",  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- ",  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "- ",  1);	  int    pos    =    token.indexOf(   "-   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
72	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ",  0);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "- ",  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "- ",  0);	  int    pos    =    token.indexOf(   "-   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
73	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ",  -1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- ",  -1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "- ",  -1);	  int    pos    =    token.indexOf(   "-   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
74	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "-= ",  0);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "-= ",  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "-= ",  0);	  int    pos    =    token.indexOf(   "-=   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
75	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "-= ",  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "-= ",  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "-= ",  1);	  int    pos    =    token.indexOf(   "-=   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
76	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(token)+  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(token)+  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  expectedOpts  =  options.getMatchingOption(token)+  1;	  Option    expectedOpts    =    options.getMatchingOption(token);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
77	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(token)||  token.length()  ==  0;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(token)||  token.length()  ==  0;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  expectedOpts  =  options.getMatchingOption(token)||  token.length()  ==  0;	  Option    expectedOpts    =    options.getMatchingOption(token);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
78	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(token  +  1);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(token  +  1);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  expectedOpts  =  options.getMatchingOption(token  +  1);	  Option    expectedOpts    =    options.getMatchingOption(token);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
79	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ")+  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "- ")+  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "- ")+  1;	  int    pos    =    token.indexOf(   "-   ")+    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
80	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ")+  2;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- ")+  2;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "- ")+  2;	  int    pos    =    token.indexOf(   "-   ")+    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
81	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)||!options.getMatchingOptions(option).isEmpty();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token)||!options.getMatchingOptions(option).isEmpty();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token)||!options.getMatchingOptions(option).isEmpty();	  Option    option    =    options.getOption(token)&&!options.getMatchingOptions(option).isEmpty();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
82	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf(':');  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf(':');  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf(':');	  int    pos    =    token.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
83	[BUG]  [BUGGY]  int  pos  =  token.indexOf(':',  0);  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf(':',  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf(':',  0);	  int    pos    =    token.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
84	[BUG]  [BUGGY]  int  pos  =  token.indexOf(':',  1);  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf(':',  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf(':',  1);	  int    pos    =    token.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
85	[BUG]  [BUGGY]  int  pos  =  token.indexOf(':')+  1;  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf(':')+  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf(':')+  1;	  int    pos    =    token.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
86	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  pos);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token,  pos);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(token,  pos);	  Option    options    =    options.getOptions(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
87	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  0);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token,  0);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(token,  0);	  Option    options    =    options.getOptions(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
88	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(token,  token);	  Option    options    =    options.getOptions(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
89	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  value);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token,  value);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(token,  value);	  Option    options    =    options.getOptions(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
90	[BUG]  [BUGGY]  options.getOptions(token)  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getOptions(token)  ==  null)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getOptions(token)  ==  null)  {  return  false;  }	  options.getOptions(token)!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
91	[BUG]  [BUGGY]  options.getOption(token)!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getOption(token)!=  null)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getOption(token)!=  null)  {  return  false;  }	  options.getOptions(token)!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
92	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  2);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- "  +  2);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "- "  +  2);	  int    pos    =    token.indexOf(   "-   "    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
93	[BUG]  [BUGGY]  Option  options  =  options.getOption(token)+  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOption(token)+  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOption(token)+  1;	  Option    options    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
94	[BUG]  [BUGGY]  Option  options  =  options.getOption(token,  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOption(token,  value);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOption(token,  value);	  Option    options    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
95	[BUG]  [BUGGY]  Option  option  =  options.getOption(token  +  2);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token  +  2);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token  +  2);	  Option    option    =    options.getOption(token    +    1);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
96	[BUG]  [BUGGY]  for(int  pos  =  0;  pos  <  token.size();  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  for(int  pos  =  0;  pos  <  token.size();  pos++)  {  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	for(int  pos  =  0;  pos  <  token.size();  pos++)  {  }	  for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
97	[BUG]  [BUGGY]  for(int  pos  =  0;  pos  <  tokens.size();  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  for(int  pos  =  0;  pos  <  tokens.size();  pos++)  {  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	for(int  pos  =  0;  pos  <  tokens.size();  pos++)  {  }	  for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
98	[BUG]  [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.size()  -  1;  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.size()  -  1;  pos++)  {  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	for(int  pos  =  0;  pos  <  expectedOpts.size()  -  1;  pos++)  {  }	  for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
99	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "= ".length()  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "= ".length()  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "= ".length()  +  1);	  int    pos    =    token.lastIndexOf(   "=   ".length());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
100	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "= "  +  token.length());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "= "  +  token.length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "= "  +  token.length());	  int    pos    =    token.lastIndexOf(   "=   ".length());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
101	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(token)  ==  null)  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(token)  ==  null)  {  return  true;  }	  if(options.getOptions(token)    ==    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
102	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)||!options.getMatchingOptions(option);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token)||!options.getMatchingOptions(option);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token)||!options.getMatchingOptions(option);	  Option    option    =    options.getOption(token)&&!options.getMatchingOptions(option);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
103	[BUG]  [BUGGY]  options.getOptions(token)  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getOptions(token)  ==  null)  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getOptions(token)  ==  null)  {  return  true;  }	  options.getOptions(token)!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
104	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ",  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "- ",  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "- ",  1);	  int    pos    =    token.lastIndexOf(   "-=   ");    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
105	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)&&!options.getMatchingOptions(opt).isEmpty();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token)&&!options.getMatchingOptions(opt).isEmpty();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token)&&!options.getMatchingOptions(opt).isEmpty();	  Option    option    =    options.getOption(token)&&!options.getMatchingOptions(option).isEmpty();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
106	[BUG]  [BUGGY]  options.getMatchingOptions(token)!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOptions(token)!=  null)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(token)!=  null)  {  return  false;  }	  if(options.getMatchingOptions(token)!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
107	[BUG]  [BUGGY]  Option  option  =  options.getOption(value,  token);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(value,  token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(value,  token);	  Option    option    =    options.getOption(token,    value);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
108	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  null);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token,  null);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(token,  null);	  Option    options    =    options.getOptions(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
109	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "-= ",  -1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "-= ",  -1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "-= ",  -1);	  int    pos    =    token.indexOf(   "-=   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
110	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "-- ")+  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "-- ")+  1;  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "-- ")+  1;	  int    pos    =    token.indexOf(   "-   ")+    1;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
111	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(token)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(token)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null    ||    options.getMatchingOptions(token).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
112	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  -1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "=?   ",  -1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "=?   ",  -1);	  int    pos    =    token.lastIndexOf(   "=?   ");    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
113	[BUG]  [BUGGY]  options.getOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }	  options.getMatchingOptions(t)!=    null    &&    options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
114	[BUG]  [BUGGY]  Option  options  =  option.getOptions(token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  option.getOptions(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  option.getOptions(token);	  Option    options    =    currentOption.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
115	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(option);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  currentOption.getOptions(option);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  currentOption.getOptions(option);	  Option    options    =    currentOption.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
116	[BUG]  [BUGGY]  for(int  pos  =  1;  pos  <  expectedOpts.size();  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  for(int  pos  =  1;  pos  <  expectedOpts.size();  pos++)  {  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	for(int  pos  =  1;  pos  <  expectedOpts.size();  pos++)  {  }	  for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
117	[BUG]  [BUGGY]  options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  false;  }	  options.getMatchingOptions(t)!=    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
118	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "..length());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "..length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "..length());	  int    pos    =    token.lastIndexOf(   "=   ".length());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
119	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "..length()  +  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "..length()  +  1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "..length()  +  1);	  int    pos    =    token.lastIndexOf(   "=   ".length());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
120	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=   ",  token.length());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "=   ",  token.length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "=   ",  token.length());	  int    pos    =    token.lastIndexOf(   "=   ".length());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
121	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  if(options!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token);  if(options!=  null)  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token);  if(options!=  null)  {  return  true;  }	  Option    option    =    options.getOption(token);    if(options!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
122	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-'  +  getLongPrefix(token));  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf('-'  +  getLongPrefix(token));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf('-'  +  getLongPrefix(token));	  int    pos    =    token.indexOf(   "-   "    +    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
123	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf('.');  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf('.');  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf('.');	  int    pos    =    token.lastIndexOf(   ".-   ");    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
124	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "=?   ",  -1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "=?   ",  -1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "=?   ",  -1);	  int    pos    =    token.indexOf(   "=?   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
125	[BUG]  [BUGGY]  options.getMatchingOptions(token)!=  null  &&  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOptions(token)!=  null  &&  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(token)!=  null  &&  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }	  if(options.getMatchingOptions(token)!=    null    ||    expectedOpts.size()    ==    0)    {    for(int    pos    =    0;    pos    <    token.length();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
126	[BUG]  [BUGGY]  options.getMatchingOptions(token)!=  null  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOptions(token)!=  null  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(token)!=  null  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }	  if(options.getMatchingOptions(token)!=    null    ||    expectedOpts.size()    ==    0)    {    for(int    pos    =    0;    pos    <    token.length();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
127	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ",  token.length());  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- ",  token.length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "- ",  token.length());	  int    pos    =    token.indexOf(   "-   ".length());    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
128	[BUG]  [BUGGY]  options.getOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }	  options.getMatchingOptions(t)!=    null    &&    options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
129	[BUG]  [BUGGY]  options.getMatchingOptions(t)  ==  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOptions(t)  ==  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(t)  ==  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }	  options.getMatchingOptions(t)!=    null    &&    options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
130	[BUG]  [BUGGY]  Option  options  =  options.getOptions(option);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(option);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(option);	  Option    options    =    options.getOptions(optName);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
131	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(token).isEmpty();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(token).isEmpty();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  expectedOpts  =  options.getMatchingOption(token).isEmpty();	  Option    expectedOpts    =    options.getMatchingOption(token);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
132	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  0);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- "  +  0);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "- "  +  0);	  int    pos    =    token.indexOf(   "-   "    +    1);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
133	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "=? ",  token.length());  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "=? ",  token.length());  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "=? ",  token.length());	  int    pos    =    token.indexOf(   "=   ".length());    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
134	[BUG]  [BUGGY]  Option  options  =  options.getOption(token)&&!options.getMatchingOptions(option);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOption(token)&&!options.getMatchingOptions(option);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOption(token)&&!options.getMatchingOptions(option);	  Option    options    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
135	[BUG]  [BUGGY]  Option  options  =  options.getOptions(option)&&!options.getMatchingOptions(option);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(option)&&!options.getMatchingOptions(option);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(option)&&!options.getMatchingOptions(option);	  Option    options    =    options.getOptions(token)&&!options.getMatchingOptions(option);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
136	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token)-  1;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token)-  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(token)-  1;	  Option    options    =    options.getOptions(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
137	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(token)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(token)!=  null  &&  options.getMatchingOptions(token).isEmpty())  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null    ||    options.getMatchingOptions(token).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
138	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null    ||    options.getMatchingOptions(token).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
139	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)  ==  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(t)  ==  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)  ==  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null    &&    options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
140	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(t).length()  ==  0)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(t).length()  ==  0)  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(t).length()  ==  0)  {  return  true;  }	  if(options.getMatchingOptions(t)!=    null    &&    options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
141	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)  ==  null  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(token)  ==  null  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(token)  ==  null  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }	  if(options.getMatchingOptions(token)!=    null    ||    expectedOpts.size()    ==    0)    {    for(int    pos    =    0;    pos    <    token.length();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
142	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)!=  null)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(token)!=  null)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(token)!=  null)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }	  if(options.getMatchingOptions(token)!=    null    ||    expectedOpts.size()    ==    0)    {    for(int    pos    =    0;    pos    <    token.length();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
143	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  optName);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token,  optName);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(token,  optName);	  Option    options    =    options.getOptions(token,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
144	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)-  1;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token)-  1;  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token)-  1;	  Option    option    =    options.getOption(token)+    1;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
145	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  getIntPrefix(token));  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( "- "  +  getIntPrefix(token));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "- "  +  getIntPrefix(token));	  int    pos    =    token.indexOf(   "-   "    +    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
146	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)&&!options.getMatchingOptions(option).isLong();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOption(token)&&!options.getMatchingOptions(option).isLong();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token)&&!options.getMatchingOptions(option).isLong();	  Option    option    =    options.getOption(token)&&!options.getMatchingOptions(option).isEmpty();    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
147	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ": ",  -1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( ": ",  -1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( ": ",  -1);	  int    pos    =    token.lastIndexOf(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
148	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token)&&!options.getMatchingOptions(option).isEmpty();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  options  =  options.getOptions(token)&&!options.getMatchingOptions(option).isEmpty();  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(token)&&!options.getMatchingOptions(option).isEmpty();	  Option    options    =    options.getOptions(token)&&!options.getMatchingOptions(option);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
149	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=? ".length());  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.lastIndexOf( "=? ".length());  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "=? ".length());	  int    pos    =    token.lastIndexOf(   "=   ".length());    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
150	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)!=  null)  {  Option  option  =  options.getOption(token);  if(option!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(token)!=  null)  {  Option  option  =  options.getOption(token);  if(option!=  null)  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(token)!=  null)  {  Option  option  =  options.getOption(token);  if(option!=  null)  {  return  false;  }	  Option    option    =    options.getOption(token);    if(option    ==    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
151	[BUG]  [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(t).isEmpty())  {  return  true;  }	  options.getMatchingOptions(t)!=    null    &&    options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
152	[BUG]  [BUGGY]  options.getMatchingOption(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  options.getMatchingOption(t).isEmpty())  {  return  true;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOption(t).isEmpty())  {  return  true;  }	  options.getMatchingOptions(t)!=    null    &&    options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
153	[BUG]  [BUGGY]  Option  option  =  options.getOptions(token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  Option  option  =  options.getOptions(token);  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOptions(token);	  Option    options    =    currentOption.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
154	[BUG]  [BUGGY]  int  pos  =  token.indexOf(':',  -1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf(':',  -1);  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf(':',  -1);	  int    pos    =    token.indexOf(':');    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
155	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ": "  +  getIntPrefix(token));  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf( ": "  +  getIntPrefix(token));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( ": "  +  getIntPrefix(token));	  int    pos    =    token.indexOf(   ":   "    +    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
156	[BUG]  [BUGGY]  int  pos  =  token.indexOf(':'  +  getLongPrefix(token));  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  int  pos  =  token.indexOf(':'  +  getLongPrefix(token));  [BUGGY]      String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf(':'  +  getLongPrefix(token));	  int    pos    =    token.indexOf(   ":   "    +    getLongPrefix(token));    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
157	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null    ||    options.getMatchingOptions(token).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
158	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)  ==  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(     "-     ")  ||  token.length()  ==  1)  {  return  false;  }      [BUGGY]  if(options.getMatchingOptions(token)  ==  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  false;  }  [BUGGY]      int  pos  =  token.indexOf(     "=     ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(     "--     "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(token)  ==  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  false;  }	  if(options.getMatchingOptions(t)!=    null    ||    options.getMatchingOptions(token).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
