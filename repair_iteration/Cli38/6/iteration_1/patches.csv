bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)+  1;  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  option  =  options.getOption(token)+  1;  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token)+  1;	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
2	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  value);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  option  =  options.getOption(token,  value);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token,  value);	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
3	[BUG]  [BUGGY]  Option  option  =  options.getOption(token  +  1);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  option  =  options.getOption(token  +  1);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token  +  1);	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
4	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  if(option  ==  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  option  =  options.getOption(token);  if(option  ==  null)  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token);  if(option  ==  null)  {  return  false;  }	      Option    option    =    options.getOption(token);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
5	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  if(options!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  option  =  options.getOption(token);  if(options!=  null)  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token);  if(options!=  null)  {  return  false;  }	      Option    option    =    options.getOption(token);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
6	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  true;  }	      if(options.getMatchingOptions(token)!=    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
7	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }	      if(options.getMatchingOptions(token)!=    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
8	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(options.getMatchingOptions(token)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(token)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }	      if(options.getMatchingOptions(token)!=    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
9	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  true;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  true;  }	      if(options.getMatchingOptions(token)!=    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "-= ");  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "-= ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "-= ");	  int    pos    =    token.indexOf(   "-=   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ")+  1;  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "- ")+  1;  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "- ")+  1;	  int    pos    =    token.indexOf(   "-=   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ".length());  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "- ".length());  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "- ".length());	  int    pos    =    token.indexOf(   "-=   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
13	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(options.getMatchingOptions(token)!=  null)  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(token)!=  null)  {  return  false;  }	      if(options.getOptions(token)!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
14	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(options.getMatchingOptions(t)!=  null)  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)!=  null)  {  return  false;  }	      if(options.getOptions(token)!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
15	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "- ");  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "- ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "- ");	  int    pos    =    token.indexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
16	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  getLongPrefix(token));  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "- "  +  getLongPrefix(token));  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "- "  +  getLongPrefix(token));	  int    pos    =    token.indexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- "  +  1);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "- "  +  1);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "- "  +  1);	  int    pos    =    token.indexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "= ",  0);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "= ",  0);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "= ",  0);	  int    pos    =    token.indexOf(   "=   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
19	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "= ",  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "= ",  1);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "= ",  1);	  int    pos    =    token.indexOf(   "=   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
20	[BUG]  [BUGGY]  Option  options  =  options.getOption(token);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  options  =  options.getOption(token);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOption(token);	      Option    options    =    options.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
21	[BUG]  [BUGGY]  Option  options  =  currentOption.getOptions(token);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  options  =  currentOption.getOptions(token);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  currentOption.getOptions(token);	      Option    options    =    options.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
22	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token)+  1;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  options  =  options.getOptions(token)+  1;  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(token)+  1;	      Option    options    =    options.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
23	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "= ".length());  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "= ".length());  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "= ".length());	  int    pos    =    token.lastIndexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
24	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ": ");  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( ": ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( ": ");	  int    pos    =    token.indexOf(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
25	[BUG]  [BUGGY]  int  pos  =  token.indexOf(':');  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf(':');  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf(':');	  int    pos    =    token.indexOf(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
26	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ": "  +  getLongPrefix(token));  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( ": "  +  getLongPrefix(token));  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( ": "  +  getLongPrefix(token));	  int    pos    =    token.indexOf(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
27	[BUG]  [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }	      if(options.getMatchingOptions(token)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
28	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(options.getMatchingOptions(token)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(token)  ==  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }	      if(options.getMatchingOptions(token)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
29	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)!=  null  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(options.getMatchingOptions(token)!=  null  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(token)!=  null  ||  expectedOpts.size()  ==  0)  {  for(int  pos  =  0;  pos  <  token.length();  pos++)  {  }	      if(options.getMatchingOptions(token)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
30	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "= ".length());  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "= ".length());  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "= ".length());	      int    pos    =    token.indexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
31	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "=? ");  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "=? ");  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "=? ");	      int    pos    =    token.indexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
32	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  false;  }	      if(options.getMatchingOptions(token)!=    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
33	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }	      if(options.getMatchingOptions(token)!=    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
34	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(token).isEmpty())  {  return  false;  }	      if(options.getMatchingOptions(token)!=    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
35	[BUG]  [BUGGY]  options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(t)!=  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  false;  }	      if(options.getMatchingOptions(token)!=    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(options.getMatchingOptions(token)!=  null)  {  return  true;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(token)!=  null)  {  return  true;  }	      if(options.getOptions(token)!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
37	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-')+  1;  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf('-')+  1;  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf('-')+  1;	  int    pos    =    token.indexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
38	[BUG]  [BUGGY]  int  pos  =  token.indexOf('-',  0);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf('-',  0);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf('-',  0);	  int    pos    =    token.indexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token,  expectedOpts);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  options  =  options.getOptions(token,  expectedOpts);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(token,  expectedOpts);	      Option    options    =    options.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
40	[BUG]  [BUGGY]  Option  options  =  options.getOptions(token)&&!options.getMatchingOptions(option);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  options  =  options.getOptions(token)&&!options.getMatchingOptions(option);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(token)&&!options.getMatchingOptions(option);	      Option    options    =    options.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
41	[BUG]  [BUGGY]  Option  options  =  options.getOptions(optName);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  options  =  options.getOptions(optName);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  options  =  options.getOptions(optName);	      Option    options    =    options.getOptions(token);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  if(option!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  option  =  options.getOption(token);  if(option!=  null)  {  return  true;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token);  if(option!=  null)  {  return  true;  }	      Option    option    =    options.getOption(token);    if(option!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
43	[BUG]  [BUGGY]  options.getOptions(token)!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  options.getOptions(token)!=  null)  {  return  true;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getOptions(token)!=  null)  {  return  true;  }	      if(options.getOptions(token)!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
44	[BUG]  [BUGGY]  options.getMatchingOptions(token)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  options.getMatchingOptions(token)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(token)!=  null)  {  for(int  pos  =  0;  pos  <  expectedOpts.size();  pos++)  {  }	      if(options.getMatchingOptions(token)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
45	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "=? ",  0);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "=? ",  0);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "=? ",  0);	  int    pos    =    token.indexOf(   "=   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
46	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "=   ",  -1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "=   ",  -1);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "=   ",  -1);	  int    pos    =    token.indexOf(   "=   ",    0);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
47	[BUG]  [BUGGY]  options.getOptions(token)!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  options.getOptions(token)!=  null)  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getOptions(token)!=  null)  {  return  false;  }	      if(options.getOptions(token)!=    null)    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
48	[BUG]  [BUGGY]  options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  true;  }	      if(options.getMatchingOptions(token)!=    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
49	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)&&!options.getMatchingOptions(optionName).isEmpty();  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  option  =  options.getOption(token)&&!options.getMatchingOptions(optionName).isEmpty();  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token)&&!options.getMatchingOptions(optionName).isEmpty();	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
50	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)&&!options.getMatchingOptions(option);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  option  =  options.getOption(token)&&!options.getMatchingOptions(option);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token)&&!options.getMatchingOptions(option);	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
51	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( "=? ");  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( "=? ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( "=? ");	  int    pos    =    token.lastIndexOf(   "=   ");    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
52	[BUG]  [BUGGY]  options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	options.getMatchingOptions(t)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }	      if(options.getMatchingOptions(token)!=    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  int  pos  =  token.indexOf( ": ",  0);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( ": ",  0);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( ": ",  0);	  int    pos    =    token.indexOf(   ":   ");    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
54	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "-= ",  0);  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "-= ",  0);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "-= ",  0);	  int    pos    =    token.indexOf(   "-=   ");    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)  ==  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(options.getMatchingOptions(token)  ==  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  true;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(token)  ==  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  true;  }	      if(options.getMatchingOptions(token)!=    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
56	[BUG]  [BUGGY]  int  pos  =  token.lastIndexOf( ".- ");  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.lastIndexOf( ".- ");  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.lastIndexOf( ".- ");	  int    pos    =    token.indexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  int  pos  =  token.indexOf( "- ",  0);  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  int  pos  =  token.indexOf( "- ",  0);  [BUGGY]    String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	int  pos  =  token.indexOf( "- ",  0);	  int    pos    =    token.indexOf(   "-   ");    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
58	[BUG]  [BUGGY]  if(options.getMatchingOptions(token)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(options.getMatchingOptions(token)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(token)!=  null  &&  options.getMatchingOptions(t).isEmpty())  {  return  false;  }	      if(options.getMatchingOptions(token)!=    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
59	[BUG]  [BUGGY]  if(options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  false;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getMatchingOptions(t)  ==  null  ||  options.getMatchingOptions(t).isEmpty())  {  return  false;  }	      if(options.getMatchingOptions(token)!=    null    ||    options.getMatchingOptions(t).isEmpty())    {    return    false;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
60	[BUG]  [BUGGY]  Option  option  =  options.getOption(token)&&!options.getMatchingOptions(option).isEmpty();  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  option  =  options.getOption(token)&&!options.getMatchingOptions(option).isEmpty();  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  option  =  options.getOption(token)&&!options.getMatchingOptions(option).isEmpty();	      Option    option    =    options.getOption(token);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
61	[BUG]  [BUGGY]  if(options.getOptions(token)  ==  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  if(options.getOptions(token)  ==  null)  {  return  true;  }  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	if(options.getOptions(token)  ==  null)  {  return  true;  }	      if(options.getOptions(token)!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
62	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(token);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    private  boolean  isLongOption(String  token)  {  if  (!token.startsWith(   "-   ")  ||  token.length()  ==  1)  {  return  false;  }    [BUGGY]  Option  expectedOpts  =  options.getMatchingOption(token);  [BUGGY]    int  pos  =  token.indexOf(   "=   ");  String  t  =  pos  ==  -1  ?  token  :  token.substring(0,  pos);  if  (!options.getMatchingOptions(t).isEmpty())  {  return  true;  }  else  if  (getLongPrefix(token)  !=  null  &&  !token.startsWith(   "--   "))  {  [CLASS]  DefaultParser  [METHOD]  isLongOption  [RETURN_TYPE]  boolean  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  List  expectedOpts  String  argument  currentToken  optName  option  t  token  value  int  pos  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	326	326	1	replace	Option  expectedOpts  =  options.getMatchingOption(token);	      if(options.getMatchingOptions(token)!=    null)    {    for(int    pos    =    0;    pos    <    expectedOpts.size();    pos++)    {    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
