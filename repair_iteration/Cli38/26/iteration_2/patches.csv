bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments().split( ": "  +  argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments().split( ": "  +  argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments().split( ": "  +  argument);	  Argument[]    arguments    =    getArguments().split(   ":   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
2	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments().split( ": ").toLowerCase();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments().split( ": ").toLowerCase();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments().split( ": ").toLowerCase();	  Argument[]    arguments    =    getArguments().split(   ":   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
3	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.parse(argument,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.parse(argument,  currentToken);	  Option    cmd    =    options.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
4	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.parse(argument,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.parse(argument,  currentOption);	  Option    cmd    =    options.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
5	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  true);  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.parse(argument,  true);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.parse(argument,  true);	  Option    cmd    =    options.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
6	[BUG]  [BUGGY]  For(String  argument  :  expectedOpts)  {  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  expectedOpts)  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  expectedOpts)  {	  For(String    argument    :    arguments)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
7	[BUG]  [BUGGY]  For(String  argument  :  expectedOpts.keySet())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  expectedOpts.keySet())  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  expectedOpts.keySet())  {	  For(String    argument    :    arguments)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
8	[BUG]  [BUGGY]  For(String  argument  :  arguments.length)  {  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  arguments.length)  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  arguments.length)  {	  For(String    argument    :    arguments)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
9	[BUG]  [BUGGY]  For(String  argument  :  arguments.keySet())  {  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  arguments.keySet())  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  arguments.keySet())  {	  For(String    argument    :    arguments)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
10	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments().split( "- ");  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments().split( "- ");  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments().split( "- ");	  Argument[]    arguments    =    getArguments().split(   "n   ");    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
11	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments().split( "  <   ");  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments().split( "  <   ");  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments().split( "  <   ");	  Argument[]    arguments    =    getArguments().split(   "n   ");    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
12	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument,  stopAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument,  stopAtNonOption,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument,  stopAtNonOption,  expectedOpts);	  Argument[]    arguments    =    getArguments(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
13	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument,  group);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument,  group);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument,  group);	  Argument[]    arguments    =    getArguments(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
14	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  +  1];  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  +  1];  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.size()  +  1];	  String[]    expectedOpts    =    new    String[arguments.size()    ];    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
15	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  -  1];  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  -  1];  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.size()  -  1];	  String[]    expectedOpts    =    new    String[arguments.size()    ];    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
16	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  *  2];  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  *  2];  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.size()  *  2];	  String[]    expectedOpts    =    new    String[arguments.size()    ];    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
17	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  +  1];  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  +  1];  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.size()  +  1];	  String[]    expectedOpts    =    new    String[argument.size()    ];    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
18	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  -  1];  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  -  1];  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.size()  -  1];	  String[]    expectedOpts    =    new    String[argument.size()    ];    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
19	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  +  2];  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  +  2];  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.size()  +  2];	  String[]    expectedOpts    =    new    String[argument.size()    ];    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
20	[BUG]  [BUGGY]  String  currentToken  =(String)this.options.get(argument  +  1);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)this.options.get(argument  +  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =(String)this.options.get(argument  +  1);	  String    currentToken    =(String)this.options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
21	[BUG]  [BUGGY]  String  currentToken  =(String)this.options.get(argument  -  1);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)this.options.get(argument  -  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =(String)this.options.get(argument  -  1);	  String    currentToken    =(String)this.options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
22	[BUG]  [BUGGY]  String  currentToken  =(String)this.options.getValue(argument);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)this.options.getValue(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =(String)this.options.getValue(argument);	  String    currentToken    =(String)this.options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
23	[BUG]  [BUGGY]  handleToken(argument,  options,  currentOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  options,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  options,  currentOption);	  handleToken(argument,    options);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
24	[BUG]  [BUGGY]  handleToken(argument,  options,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  options,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  options,  expectedOpts);	  handleToken(argument,    options);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
25	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument,  null);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument,  null);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(argument,  null);	  Argument    currentToken    =    currentOption.getToken(argument);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
26	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(argument,  expectedOpts);	  Argument    currentToken    =    currentOption.getToken(argument);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
27	[BUG]  [BUGGY]  Argument  currentToken  =  arguments.getToken(argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  arguments.getToken(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  arguments.getToken(argument);	  Argument    currentToken    =    currentOption.getToken(argument);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
28	[BUG]  [BUGGY]  for(String  argument  :  expectedOpts.keySet())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  expectedOpts.keySet())  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  expectedOpts.keySet())  {	  for(String    argument    :    arguments)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
29	[BUG]  [BUGGY]  for(String  argument  :  arguments.keySet())  {  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.keySet())  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.keySet())  {	  for(String    argument    :    arguments)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
30	[BUG]  [BUGGY]  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  argument);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  argument);	  Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken,    argument);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
31	[BUG]  [BUGGY]  String  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  argument);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  argument);	  Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken,    argument);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
32	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  argument,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  argument,  stopAtNonOption);	  Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken,    argument);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
33	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.parseOption(argument,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.parseOption(argument,  currentToken);	  Option    cmd    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
34	[BUG]  [BUGGY]  Option  cmd  =  currentOption.parseOption(argument);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  currentOption.parseOption(argument);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  currentOption.parseOption(argument);	  Option    cmd    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
35	[BUG]  [BUGGY]  handleMissingArgument(argument,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  currentToken,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  currentToken,  expectedOpts);	  handleMissingArgument(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
36	[BUG]  [BUGGY]  handleMissingArgument(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  expectedOpts);	  handleMissingArgument(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
37	[BUG]  [BUGGY]  handleMissingArgument(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  currentToken,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  currentToken,  stopAtNonOption);	  handleMissingArgument(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
38	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  ]),  currentOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  ]),  currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  ]),  currentOption);	  Argument[]    arguments    =    getArguments(argument).toArray(new    String[arguments.size()    ]));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
39	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  -  1]));  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  -  1]));  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  -  1]));	  Argument[]    arguments    =    getArguments(argument).toArray(new    String[arguments.size()    ]));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
40	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  ]),  currentToken);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  ]),  currentToken);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  ]),  currentToken);	  Argument[]    arguments    =    getArguments(argument).toArray(new    String[arguments.size()    ]));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
41	[BUG]  [BUGGY]  ||  arguments.length()  ==  0)  {  for(Option  group  :  options.getOptionGroups())  {  expectedOpts.add(group);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  ||  arguments.length()  ==  0)  {  for(Option  group  :  options.getOptionGroups())  {  expectedOpts.add(group);  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	||  arguments.length()  ==  0)  {  for(Option  group  :  options.getOptionGroups())  {  expectedOpts.add(group);  }	  if(argument.length()    ==    0)    {    for(Option    group    :    options.getOptionGroups())    {    expectedOpts.add(group);    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
42	[BUG]  [BUGGY]  if(argument.length()  ==  1)  {  for(Option  group  :  options.getOptionGroups())  {  expectedOpts.add(group);  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(argument.length()  ==  1)  {  for(Option  group  :  options.getOptionGroups())  {  expectedOpts.add(group);  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(argument.length()  ==  1)  {  for(Option  group  :  options.getOptionGroups())  {  expectedOpts.add(group);  }	  if(argument.length()    ==    0)    {    for(Option    group    :    options.getOptionGroups())    {    expectedOpts.add(group);    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
43	[BUG]  [BUGGY]  for(Option  group  :  arguments)  {  expectedOpts.add(group);  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(Option  group  :  arguments)  {  expectedOpts.add(group);  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(Option  group  :  arguments)  {  expectedOpts.add(group);  }	  if(argument.length()    ==    0)    {    for(Option    group    :    options.getOptionGroups())    {    expectedOpts.add(group);    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
44	[BUG]  [BUGGY]  String[]  arguments  =(String[])options.get(argument.length  -  1);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =(String[])options.get(argument.length  -  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])options.get(argument.length  -  1);	  String[]    arguments    =(String[])options.get(argument    -    1);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
45	[BUG]  [BUGGY]  String[]  arguments  =(String[])properties.get(argument  -  1);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =(String[])properties.get(argument  -  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])properties.get(argument  -  1);	  String[]    arguments    =(String[])options.get(argument    -    1);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
46	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  1]);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  1]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  1]);	  Argument[]    arguments    =    getArguments(argument).toArray(new    String[arguments.size()    +    1]);    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
47	[BUG]  [BUGGY]  handleMissingArgument(argument,  group);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  group);	  handleMissingArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
48	[BUG]  [BUGGY]  handleMissingArgument(argument,  blockParsing);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  blockParsing);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  blockParsing);	  handleMissingArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
49	[BUG]  [BUGGY]  for(String  argument  :  arguments.toString())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.toString())  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.toString())  {	  if(argument.length()    ==    0)    {    for(String    argument    :    arguments.toString())    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
50	[BUG]  [BUGGY]  for(String  argument  :  arguments.toString())  {  continue;  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.toString())  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.toString())  {  continue;  }	  if(argument.length()    ==    0)    {    for(String    argument    :    arguments.toString())    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
51	[BUG]  [BUGGY]  ||  arguments.length()  ==  0)  {  for(String  argument  :  arguments.toString())  {  continue;  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  ||  arguments.length()  ==  0)  {  for(String  argument  :  arguments.toString())  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	||  arguments.length()  ==  0)  {  for(String  argument  :  arguments.toString())  {  continue;  }	  if(argument.length()    ==    0)    {    for(String    argument    :    arguments.toString())    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
52	[BUG]  [BUGGY]  For(String  argument  :  arguments.toString())  {  continue;  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  arguments.toString())  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  arguments.toString())  {  continue;  }	  if(argument.length()    ==    0)    {    for(String    argument    :    arguments.toString())    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
53	[BUG]  [BUGGY]  handleToken(argument,  group,  currentOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  group,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  group,  currentOption);	  handleToken(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
54	[BUG]  [BUGGY]  handleToken(argument,  group,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  group,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  group,  expectedOpts);	  handleToken(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
55	[BUG]  [BUGGY]  handleToken(argument,  cmd);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  cmd);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  cmd);	  handleToken(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
56	[BUG]  [BUGGY]  for(String  argument  :  expectedOpts.length)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  expectedOpts.length)  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  expectedOpts.length)  {	  for(String    argument    :    expectedOpts)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
57	[BUG]  [BUGGY]  for(String  argument  :  expectedOpts.values())  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  expectedOpts.values())  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  expectedOpts.values())  {	  for(String    argument    :    expectedOpts)    {    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
58	[BUG]  [BUGGY]  Argument  currentToken  =  argument.getToken();  expectedOpts.add(argument);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  argument.getToken();  expectedOpts.add(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  argument.getToken();  expectedOpts.add(argument);	  Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(argument);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
59	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(stopAtNonOption)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(stopAtNonOption)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  }	  Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(argument);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
60	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  }  else  {  expectedOpts.add(argument);  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(stopAtNonOption)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  }  else  {  expectedOpts.add(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(stopAtNonOption)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  }  else  {  expectedOpts.add(argument);  }	  Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(argument);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
61	[BUG]  [BUGGY]  if(arguments!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(arguments!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(arguments!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }	  if(currentToken!=    null)    {    Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
62	[BUG]  [BUGGY]  if(argument!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(argument!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(argument!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }	  if(currentToken!=    null)    {    Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
63	[BUG]  [BUGGY]  handleArgument(argument,  false);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  false);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  false);	  handleArgument(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
64	[BUG]  [BUGGY]  handleArgument(argument,  true,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  true,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  true,  stopAtNonOption);	  handleArgument(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
65	[BUG]  [BUGGY]  handleArgument(argument,  true,  false);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  true,  false);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  true,  false);	  handleArgument(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
66	[BUG]  [BUGGY]  for(String  argument  :  arguments.length)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.length)  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.length)  {  continue;  }	  if(argument.length()    ==    0)    {    for(String    argument    :    arguments.length)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
67	[BUG]  [BUGGY]  ||  arguments.length()  ==  0)  {  for(String  argument  :  arguments.length)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  ||  arguments.length()  ==  0)  {  for(String  argument  :  arguments.length)  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	||  arguments.length()  ==  0)  {  for(String  argument  :  arguments.length)  {  continue;  }	  if(argument.length()    ==    0)    {    for(String    argument    :    arguments.length)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
68	[BUG]  [BUGGY]  For(String  argument  :  arguments.length)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  arguments.length)  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  arguments.length)  {  continue;  }	  if(argument.length()    ==    0)    {    for(String    argument    :    arguments.length)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	95	None	replace
69	[BUG]  [BUGGY]  Argument[]  arguments  =  currentOption.getArgumentsTokenArray();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  currentOption.getArgumentsTokenArray();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  currentOption.getArgumentsTokenArray();	  Argument[]    arguments    =    currentOption.getArgumentsArray();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
70	[BUG]  [BUGGY]  Argument[]  arguments  =  currentOption.getArgumentsTokens();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  currentOption.getArgumentsTokens();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  currentOption.getArgumentsTokens();	  Argument[]    arguments    =    currentOption.getArgumentsArray();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
71	[BUG]  [BUGGY]  String[]  arguments  =(String[])this.properties.get(argument);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =(String[])this.properties.get(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])this.properties.get(argument);	  String[]    arguments    =(String[])properties.get(argument);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
72	[BUG]  [BUGGY]  String[]  arguments  =(String[])properties.get(argument  +  1);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =(String[])properties.get(argument  +  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])properties.get(argument  +  1);	  String[]    arguments    =(String[])properties.get(argument);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
73	[BUG]  [BUGGY]  String[]  arguments  =(String[])properties.get(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =(String[])properties.get(argument,  currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])properties.get(argument,  currentOption);	  String[]    arguments    =(String[])properties.get(argument);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
74	[BUG]  [BUGGY]  handleArgument(argument,  arguments,  null);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  arguments,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  arguments,  null);	  handleArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
75	[BUG]  [BUGGY]  handleArgument(argument,  null,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  null,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  null,  expectedOpts);	  handleArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
76	[BUG]  [BUGGY]  handleArgument(argument,  null,  currentOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  null,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  null,  currentOption);	  handleArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
77	[BUG]  [BUGGY]  handleArgument(argument,  null,  group);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  null,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  null,  group);	  handleArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
78	[BUG]  [BUGGY]  for(String  argument  :  expectedOpts.keySet())  {  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  expectedOpts.keySet())  {  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  expectedOpts.keySet())  {  }	  for(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
79	[BUG]  [BUGGY]  for(String  argument  :  arguments.keySet())  {  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.keySet())  {  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.keySet())  {  }	  for(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
80	[BUG]  [BUGGY]  handleToken(argument,  currentOption,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentOption,  expectedOpts,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  currentOption,  expectedOpts,  stopAtNonOption);	  handleToken(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
81	[BUG]  [BUGGY]  handleToken(argument,  expectedOpts,  currentOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  expectedOpts,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  expectedOpts,  currentOption);	  handleToken(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
82	[BUG]  [BUGGY]  handleToken(argument,  currentOption,  arguments);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentOption,  arguments);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  currentOption,  arguments);	  handleToken(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
83	[BUG]  [BUGGY]  handleToken(argument,  currentOption,  options);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentOption,  options);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  currentOption,  options);	  handleToken(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
84	[BUG]  [BUGGY]  handleArg(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArg(argument,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArg(argument,  currentOption);	  handleArg(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
85	[BUG]  [BUGGY]  handleArg(argument,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArg(argument,  group,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArg(argument,  group,  stopAtNonOption);	  handleArg(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
86	[BUG]  [BUGGY]  handleArg(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArg(argument,  currentToken,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArg(argument,  currentToken,  stopAtNonOption);	  handleArg(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
87	[BUG]  [BUGGY]  handleArg(argument,  group);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArg(argument,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArg(argument,  group);	  handleArg(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
88	[BUG]  [BUGGY]  for(String  argument  :  arguments.length,  expectedOpts.length)  {  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.length,  expectedOpts.length)  {  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.length,  expectedOpts.length)  {  }	  for(String    argument    :    arguments.length)    {    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
89	[BUG]  [BUGGY]  for(String  argument  :  expectedOpts.length)  {  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  expectedOpts.length)  {  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  expectedOpts.length)  {  }	  for(String    argument    :    arguments.length)    {    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
90	[BUG]  [BUGGY]  Argument[]  arguments  =  currentOption.getArguments(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  currentOption.getArguments(argument,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  currentOption.getArguments(argument,  expectedOpts);	  Argument[]    arguments    =    currentOption.getArguments(argument);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
91	[BUG]  [BUGGY]  Argument[]  arguments  =  currentOption.getArguments(argument,  null);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  currentOption.getArguments(argument,  null);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  currentOption.getArguments(argument,  null);	  Argument[]    arguments    =    currentOption.getArguments(argument);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
92	[BUG]  [BUGGY]  Argument  currentToken  =  argument.getToken()  +  currentOption;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  argument.getToken()  +  currentOption;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  argument.getToken()  +  currentOption;	  Argument    currentToken    =    currentOption.getToken()    +    argument;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
93	[BUG]  [BUGGY]  Argument  currentToken  =  arguments.getToken()  +  currentOption;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  arguments.getToken()  +  currentOption;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  arguments.getToken()  +  currentOption;	  Argument    currentToken    =    currentOption.getToken()    +    argument;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
94	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken()  +  argument.toLowerCase();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken()  +  argument.toLowerCase();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken()  +  argument.toLowerCase();	  Argument    currentToken    =    currentOption.getToken()    +    argument;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
95	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  argument;  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  argument;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(),  argument;	  Argument    currentToken    =    currentOption.getToken()    +    argument;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
96	[BUG]  [BUGGY]  handleMissingName(argument,  group);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  group);	  handleMissingName(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
97	[BUG]  [BUGGY]  handleMissingName(argument,  blockParsing);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  blockParsing);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  blockParsing);	  handleMissingName(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
98	[BUG]  [BUGGY]  handleMissingName(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  expectedOpts);	  handleMissingName(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
99	[BUG]  [BUGGY]  handleMissingName(argument,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  currentToken,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  currentToken,  expectedOpts);	  handleMissingName(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
100	[BUG]  [BUGGY]  handleMissingName(argument,  currentToken,  null);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  currentToken,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  currentToken,  null);	  handleMissingName(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
101	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.getOption(argument,  currentToken);	  Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
102	[BUG]  [BUGGY]  Option  cmd  =  currentOption.getOption(argument);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  currentOption.getOption(argument);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  currentOption.getOption(argument);	  Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
103	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  group);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.getOption(argument,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.getOption(argument,  group);	  Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
104	[BUG]  [BUGGY]  String[]  arguments  =(String[])this.options.get(argument  /  1);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =(String[])this.options.get(argument  /  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])this.options.get(argument  /  1);	  String[]    arguments    =(String[])this.options.get(argument    +    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
105	[BUG]  [BUGGY]  String[]  arguments  =(String[])this.options.get(argument  +  2);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =(String[])this.options.get(argument  +  2);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])this.options.get(argument  +  2);	  String[]    arguments    =(String[])this.options.get(argument    +    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
106	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[args.size()  +  1];  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[args.size()  +  1];  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[args.size()  +  1];	  String[]    expectedOpts    =    new    String[args.size()    ];    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
107	[BUG]  [BUGGY]  handleMissingName(argument,  arguments,  null);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  arguments,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  arguments,  null);	  handleMissingName(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
108	[BUG]  [BUGGY]  handleMissingName(argument,  null,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  null,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  null,  expectedOpts);	  handleMissingName(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
109	[BUG]  [BUGGY]  handleMissingName(argument,  null,  currentOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  null,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  null,  currentOption);	  handleMissingName(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
110	[BUG]  [BUGGY]  handleMissingName(argument,  null,  group);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  null,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  null,  group);	  handleMissingName(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
111	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  }  else  {  expectedOpts.add(argument);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(stopAtNonOption)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  }  else  {  expectedOpts.add(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(stopAtNonOption)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  }  else  {  expectedOpts.add(argument);  }	  Option    currentToken    =    currentOption.getToken();    expectedOpts.add(argument);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
112	[BUG]  [BUGGY]  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument,  stopAtNonOption);	  Option    currentToken    =    currentOption.getToken();    expectedOpts.add(argument);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
113	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(stopAtNonOption)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(stopAtNonOption)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  }	  Option    currentToken    =    currentOption.getToken();    expectedOpts.add(argument);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
114	[BUG]  [BUGGY]  handleToken(argument,  preferred,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  preferred,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  preferred,  expectedOpts);	  handleToken(argument,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
115	[BUG]  [BUGGY]  Argument  currentToken  =  argument.toString();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  argument.toString();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  argument.toString();	  Argument    currentToken    =    argument.getToken();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
116	[BUG]  [BUGGY]  Argument  currentToken  =  argument.toLowerCase();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  argument.toLowerCase();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  argument.toLowerCase();	  Argument    currentToken    =    argument.getToken();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
117	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[allOpts.size()  +  1];  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[allOpts.size()  +  1];  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[allOpts.size()  +  1];	  String[]    expectedOpts    =    new    String[allOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	99	None	replace
118	[BUG]  [BUGGY]  Option[]  arguments  =  option.getArguments();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option[]  arguments  =  option.getArguments();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option[]  arguments  =  option.getArguments();	  Argument[]    arguments    =    option.getArguments();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
119	[BUG]  [BUGGY]  if(currentToken!=  null)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(currentToken!=  null)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(currentToken!=  null)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }	  Option    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
120	[BUG]  [BUGGY]  String  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);	  Option    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
121	[BUG]  [BUGGY]  if(currentToken  ==  null)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(currentToken  ==  null)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(currentToken  ==  null)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }	  Option    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
122	[BUG]  [BUGGY]  for(String  argument  :  arguments.length,  expectedOpts.length)  {  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.length,  expectedOpts.length)  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.length,  expectedOpts.length)  {	  for(String    argument    :    arguments.length)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
123	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument);  if(cmd  ==  null)  {  expectedOpts[i]  =  arguments[i];  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.getOption(argument);  if(cmd  ==  null)  {  expectedOpts[i]  =  arguments[i];  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.getOption(argument);  if(cmd  ==  null)  {  expectedOpts[i]  =  arguments[i];  }	  Option    cmd    =    options.getOption(argument);    if(cmd!=    null)    {    expectedOpts[i]    =    arguments[i];    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
124	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument);  expectedOpts[i]  =  arguments[i];  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.getOption(argument);  expectedOpts[i]  =  arguments[i];  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.getOption(argument);  expectedOpts[i]  =  arguments[i];	  Option    cmd    =    options.getOption(argument);    if(cmd!=    null)    {    expectedOpts[i]    =    arguments[i];    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
125	[BUG]  [BUGGY]  handleError(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  currentToken);	  handleError(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
126	[BUG]  [BUGGY]  handleError(argument,  blockParsing);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  blockParsing);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  blockParsing);	  handleError(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
127	[BUG]  [BUGGY]  handleError(currentOption,  argument);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(currentOption,  argument);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(currentOption,  argument);	  handleError(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
128	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument,  currentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument,  currentToken,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument,  currentToken,  expectedOpts);	  Argument[]    arguments    =    getArguments(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
129	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument,  currentToken,  null);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument,  currentToken,  null);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument,  currentToken,  null);	  Argument[]    arguments    =    getArguments(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
130	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument,  currentToken,  0);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument,  currentToken,  0);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument,  currentToken,  0);	  Argument[]    arguments    =    getArguments(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
131	[BUG]  [BUGGY]  handleMissingName(argument,  false);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  false);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  false);	  handleMissingName(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
132	[BUG]  [BUGGY]  handleMissingName(argument,  true,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  true,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  true,  stopAtNonOption);	  handleMissingName(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
133	[BUG]  [BUGGY]  handleMissingName(argument,  true,  false);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  true,  false);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  true,  false);	  handleMissingName(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
134	[BUG]  [BUGGY]  ||  arguments.length()  ==  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group.getValue(argument));  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  ||  arguments.length()  ==  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group.getValue(argument));  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	||  arguments.length()  ==  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group.getValue(argument));  }	  if(argument.length()    ==    0)    {    for(Option    group    :    options.values())    {    expectedOpts.add(group.getValue(argument));    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
135	[BUG]  [BUGGY]  if(argument.length()!=  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group.getValue(argument));  }  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(argument.length()!=  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group.getValue(argument));  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(argument.length()!=  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group.getValue(argument));  }	  if(argument.length()    ==    0)    {    for(Option    group    :    options.values())    {    expectedOpts.add(group.getValue(argument));    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
136	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  for(Option  group  :  arguments.values())  {  expectedOpts.add(group.getValue(argument));  }  [CE]  illegal  start  of  type  [FE]                              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(argument.length()  ==  0)  {  for(Option  group  :  arguments.values())  {  expectedOpts.add(group.getValue(argument));  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(argument.length()  ==  0)  {  for(Option  group  :  arguments.values())  {  expectedOpts.add(group.getValue(argument));  }	  if(argument.length()    ==    0)    {    for(Option    group    :    options.values())    {    expectedOpts.add(group.getValue(argument));    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
137	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument);  if(cmd  ==  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.getOption(argument);  if(cmd  ==  null)  {  continue;  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.getOption(argument);  if(cmd  ==  null)  {  continue;  }	  Option    cmd    =    options.getOption(argument);    if(cmd!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
138	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken);  if(cmd!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken);  if(cmd!=  null)  {  continue;  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.getOption(argument,  currentToken);  if(cmd!=  null)  {  continue;  }	  Option    cmd    =    options.getOption(argument);    if(cmd!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
139	[BUG]  [BUGGY]  Argument  currentToken  =  argument.tokenTo(currentOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  argument.tokenTo(currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  argument.tokenTo(currentOption);	  Argument    currentToken    =    currentOption.tokenTo(argument);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
140	[BUG]  [BUGGY]  Argument  currentToken  =  arguments.tokenTo(currentOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  arguments.tokenTo(currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  arguments.tokenTo(currentOption);	  Argument    currentToken    =    currentOption.tokenTo(argument);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
141	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  null);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  null);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.tokenTo(argument,  null);	  Argument    currentToken    =    currentOption.tokenTo(argument);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
142	[BUG]  [BUGGY]  handleArgument(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  currentToken);	  handleArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
143	[BUG]  [BUGGY]  handleArgument(argument,  currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  currentOption,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  currentOption,  expectedOpts);	  handleArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
144	[BUG]  [BUGGY]  handleArgument(argument,  group);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  group);	  handleArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
145	[BUG]  [BUGGY]  if(arguments!=  null)  {  for(String  argument  :  arguments.split( "n "))  {  expectedOpts.add(argument);  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(arguments!=  null)  {  for(String  argument  :  arguments.split( "n "))  {  expectedOpts.add(argument);  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(arguments!=  null)  {  for(String  argument  :  arguments.split( "n "))  {  expectedOpts.add(argument);  }	  if(argument!=    null)    {    for(String    argument    :    arguments.split(   "n   "))    {    expectedOpts.add(argument);    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
146	[BUG]  [BUGGY]  if(arguments!=  null)  {  for(String  argument  :  arguments.split( "- "))  {  expectedOpts.add(argument);  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(arguments!=  null)  {  for(String  argument  :  arguments.split( "- "))  {  expectedOpts.add(argument);  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(arguments!=  null)  {  for(String  argument  :  arguments.split( "- "))  {  expectedOpts.add(argument);  }	  if(argument!=    null)    {    for(String    argument    :    arguments.split(   "n   "))    {    expectedOpts.add(argument);    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
147	[BUG]  [BUGGY]  if(argument!=  null)  {  for(String  argument  :  arguments.split( "- "))  {  expectedOpts.add(argument);  }  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(argument!=  null)  {  for(String  argument  :  arguments.split( "- "))  {  expectedOpts.add(argument);  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(argument!=  null)  {  for(String  argument  :  arguments.split( "- "))  {  expectedOpts.add(argument);  }	  if(argument!=    null)    {    for(String    argument    :    arguments.split(   "n   "))    {    expectedOpts.add(argument);    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
148	[BUG]  [BUGGY]  String[]  arguments  =  this.options.get(argument);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =  this.options.get(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =  this.options.get(argument);	  String[]    arguments    =    options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
149	[BUG]  [BUGGY]  String[]  arguments  =  options.get(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =  options.get(argument,  currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =  options.get(argument,  currentOption);	  String[]    arguments    =    options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
150	[BUG]  [BUGGY]  String[]  arguments  =  options.get(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =  options.get(argument,  currentToken);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =  options.get(argument,  currentToken);	  String[]    arguments    =    options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
151	[BUG]  [BUGGY]  String[]  arguments  =(String[])this.options.get(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =(String[])this.options.get(argument,  currentToken);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])this.options.get(argument,  currentToken);	  String[]    arguments    =(String[])this.options.get(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
152	[BUG]  [BUGGY]  String[]  arguments  =(String[])this.options.get(argument,  currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =(String[])this.options.get(argument,  currentOption,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])this.options.get(argument,  currentOption,  expectedOpts);	  String[]    arguments    =(String[])this.options.get(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
153	[BUG]  [BUGGY]  String[]  arguments  =(String[])this.options.get(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =(String[])this.options.get(argument,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])this.options.get(argument,  expectedOpts);	  String[]    arguments    =(String[])this.options.get(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
154	[BUG]  [BUGGY]  For(String  argument  :  expectedOpts)  {  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  expectedOpts)  {  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  expectedOpts)  {  }	  For(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
155	[BUG]  [BUGGY]  For(String  argument  :  arguments.length)  {  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  arguments.length)  {  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  arguments.length)  {  }	  For(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
156	[BUG]  [BUGGY]  For(String  argument  :  expectedOpts.keySet())  {  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  expectedOpts.keySet())  {  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  expectedOpts.keySet())  {  }	  For(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
157	[BUG]  [BUGGY]  handleToken(argument,  blockParsing,  currentOption);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  blockParsing,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  blockParsing,  currentOption);	  handleToken(argument,    blockParsing);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
158	[BUG]  [BUGGY]  handleToken(argument,  blockParsing,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  blockParsing,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  blockParsing,  expectedOpts);	  handleToken(argument,    blockParsing);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
159	[BUG]  [BUGGY]  handleMissingArgument(argument,  arguments,  null);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  arguments,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  arguments,  null);	  handleMissingArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
160	[BUG]  [BUGGY]  handleMissingArgument(argument,  null,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  null,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  null,  expectedOpts);	  handleMissingArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
161	[BUG]  [BUGGY]  handleMissingArgument(argument,  null,  group);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  null,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  null,  group);	  handleMissingArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
162	[BUG]  [BUGGY]  handleMissingArgument(argument,  null,  currentOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  null,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  null,  currentOption);	  handleMissingArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
163	[BUG]  [BUGGY]  handleError(argument,  arguments,  null);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  arguments,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  arguments,  null);	  handleError(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
164	[BUG]  [BUGGY]  handleError(argument,  null,  group);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  null,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  null,  group);	  handleError(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
165	[BUG]  [BUGGY]  handleError(argument,  null,  currentOption);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  null,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  null,  currentOption);	  handleError(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
166	[BUG]  [BUGGY]  handleError(argument,  null,  0);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  null,  0);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  null,  0);	  handleError(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
167	[BUG]  [BUGGY]  handleArgument(argument,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  group,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  group,  stopAtNonOption);	  handleArgument(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
168	[BUG]  [BUGGY]  handleArgument(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  currentToken,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  currentToken,  stopAtNonOption);	  handleArgument(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
169	[BUG]  [BUGGY]  handleMissingArgument(argument,  false);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  false);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  false);	  handleMissingArgument(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
170	[BUG]  [BUGGY]  handleMissingArgument(argument,  true,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  true,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  true,  stopAtNonOption);	  handleMissingArgument(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
171	[BUG]  [BUGGY]  handleMissingArgument(argument,  true,  false);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  true,  false);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  true,  false);	  handleMissingArgument(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
172	[BUG]  [BUGGY]  Argument  currentToken  =  arguments.getToken().trim();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  arguments.getToken().trim();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  arguments.getToken().trim();	  Argument    currentToken    =    arguments.getToken();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
173	[BUG]  [BUGGY]  Argument  currentToken  =  arguments.get(argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  arguments.get(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  arguments.get(argument);	  Argument    currentToken    =    arguments.getToken();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
174	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.length()  +  1];  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.length()  +  1];  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.length()  +  1];	  String[]    expectedOpts    =    new    String[argument.length()    ];    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
175	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.length()  -  1];  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.length()  -  1];  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.length()  -  1];	  String[]    expectedOpts    =    new    String[argument.length()    ];    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
176	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.length()  +  2];  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.length()  +  2];  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.length()  +  2];	  String[]    expectedOpts    =    new    String[argument.length()    ];    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
177	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument,  expectedOpts,  currentToken);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument,  expectedOpts,  currentToken);	  Argument[]    arguments    =    getArguments(argument,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
178	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument,  expectedOpts,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument,  expectedOpts,  stopAtNonOption);	  Argument[]    arguments    =    getArguments(argument,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
179	[BUG]  [BUGGY]  String  currentToken  =(String)options.get(argument  /  1);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)options.get(argument  /  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =(String)options.get(argument  /  1);	  String    currentToken    =(String)options.get(argument    +    1);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
180	[BUG]  [BUGGY]  handleToken(argument,  blockAtNonOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  blockAtNonOption,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  blockAtNonOption,  expectedOpts);	  handleToken(argument,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
181	[BUG]  [BUGGY]  handleToken(argument,  group,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  group,  blockAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  group,  blockAtNonOption);	  handleToken(argument,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
182	[BUG]  [BUGGY]  handleToken(argument,  blockAtNonOption,  cmd);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  blockAtNonOption,  cmd);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  blockAtNonOption,  cmd);	  handleToken(argument,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
183	[BUG]  [BUGGY]  String  currentToken  =(String)properties.get(argument  -  1);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)properties.get(argument  -  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =(String)properties.get(argument  -  1);	  String    currentToken    =(String)options.get(argument    -    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
184	[BUG]  [BUGGY]  For(String  argument  :  expectedOpts)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  expectedOpts)  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  expectedOpts)  {  continue;  }	  For(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
185	[BUG]  [BUGGY]  For(String  argument  :  arguments.keySet())  {  continue;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  arguments.keySet())  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  arguments.keySet())  {  continue;  }	  For(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
186	[BUG]  [BUGGY]  for(String  argument  :  arguments.keySet())  {  continue;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.keySet())  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.keySet())  {  continue;  }	  for(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
187	[BUG]  [BUGGY]  for(String  argument  :  arguments.values())  {  continue;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.values())  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.values())  {  continue;  }	  for(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
188	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument.toUpperCase());  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument.toUpperCase());  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument.toUpperCase());	  Argument[]    arguments    =    getArguments(argument.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
189	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument.toLowerCase(),  true);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument.toLowerCase(),  true);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument.toLowerCase(),  true);	  Argument[]    arguments    =    getArguments(argument.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
190	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument.toLowerCase(),  false);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument.toLowerCase(),  false);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument.toLowerCase(),  false);	  Argument[]    arguments    =    getArguments(argument.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
191	[BUG]  [BUGGY]  String  currentToken  =(String)properties.get(argument  +  1);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)properties.get(argument  +  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =(String)properties.get(argument  +  1);	  String    currentToken    =(String)properties.get(argument);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
192	[BUG]  [BUGGY]  String  currentToken  =(String)this.properties.get(argument);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)this.properties.get(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =(String)this.properties.get(argument);	  String    currentToken    =(String)properties.get(argument);    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
193	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments().toArray(new  String[arguments.size()  -  1]);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments().toArray(new  String[arguments.size()  -  1]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments().toArray(new  String[arguments.size()  -  1]);	  Argument[]    arguments    =    getArguments().toArray(new    String[arguments.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
194	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments().toArray(new  String[arguments.size()  +  1]);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments().toArray(new  String[arguments.size()  +  1]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments().toArray(new  String[arguments.size()  +  1]);	  Argument[]    arguments    =    getArguments().toArray(new    String[arguments.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
195	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments().toArray(new  String[arguments.size()  ]));  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments().toArray(new  String[arguments.size()  ]));  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments().toArray(new  String[arguments.size()  ]));	  Argument[]    arguments    =    getArguments().toArray(new    String[arguments.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
196	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[parameter.size()  +  1];  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[parameter.size()  +  1];  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[parameter.size()  +  1];	  String[]    expectedOpts    =    new    String[parameter.size()    ];    	non-compiled	[CE]  illegal  start  of  type	80	None	replace
197	[BUG]  [BUGGY]  Arguments[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()]);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Arguments[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Arguments[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()]);	  Argument[]    arguments    =    getArguments(argument).toArray(new    String[arguments.size()    -    1]);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
198	[BUG]  [BUGGY]  handleArgument(argument,  expectedOpts,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  expectedOpts,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  expectedOpts,  stopAtNonOption);	  handleArgument(argument,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
199	[BUG]  [BUGGY]  handleArgument(argument,  expectedOpts,  currentToken);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  expectedOpts,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  expectedOpts,  currentToken);	  handleArgument(argument,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
200	[BUG]  [BUGGY]  ||  arguments.length()  ==  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  ||  arguments.length()  ==  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group);  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	||  arguments.length()  ==  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group);  }	  if(argument.length()    ==    0)    {    for(Option    group    :    options.values())    {    expectedOpts.add(group);    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
201	[BUG]  [BUGGY]  if(argument.length()!=  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(argument.length()!=  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group);  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(argument.length()!=  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group);  }	  if(argument.length()    ==    0)    {    for(Option    group    :    options.values())    {    expectedOpts.add(group);    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
202	[BUG]  [BUGGY]  if(arguments!=  null)  {  for(String  argument  :  arguments.length)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(arguments!=  null)  {  for(String  argument  :  arguments.length)  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(arguments!=  null)  {  for(String  argument  :  arguments.length)  {  continue;  }	  if(arguments!=    null)    {    for(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
203	[BUG]  [BUGGY]  Argument[]  arguments  =  this.options.getArguments();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  this.options.getArguments();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  this.options.getArguments();	  Argument[]    arguments    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
204	[BUG]  [BUGGY]  Argument[]  arguments  =  options.getArguments(argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  options.getArguments(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  options.getArguments(argument);	  Argument[]    arguments    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
205	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument,  currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument,  currentOption,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument,  currentOption,  expectedOpts);	  Argument[]    arguments    =    getArguments(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
206	[BUG]  [BUGGY]  Option[]  arguments  =  getArguments(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option[]  arguments  =  getArguments(argument,  currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option[]  arguments  =  getArguments(argument,  currentOption);	  Argument[]    arguments    =    getArguments(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
207	[BUG]  [BUGGY]  options.parse(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  options.parse(argument,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	options.parse(argument,  currentOption);	  options.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
208	[BUG]  [BUGGY]  options.parse(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  options.parse(argument,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	options.parse(argument,  currentToken);	  options.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
209	[BUG]  [BUGGY]  Options  cmd  =  options.parse(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Options  cmd  =  options.parse(argument,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Options  cmd  =  options.parse(argument,  stopAtNonOption);	  options.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
210	[BUG]  [BUGGY]  options.parse(argument,  group);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  options.parse(argument,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	options.parse(argument,  group);	  options.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
211	[BUG]  [BUGGY]  Argument  currentToken  =  argument.getToken(),  currentOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  argument.getToken(),  currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  argument.getToken(),  currentOption);	  Argument    currentToken    =    currentOption.getToken(),    argument);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
212	[BUG]  [BUGGY]  Argument  currentToken  =  arguments.getToken(),  currentOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  arguments.getToken(),  currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  arguments.getToken(),  currentOption);	  Argument    currentToken    =    currentOption.getToken(),    argument);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
213	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  argument,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(),  argument,  expectedOpts);	  Argument    currentToken    =    currentOption.getToken(),    argument);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
214	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  arguments);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  arguments);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(),  arguments);	  Argument    currentToken    =    currentOption.getToken(),    argument);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
215	[BUG]  [BUGGY]  handleError(argument,  0,  argument.length);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  0,  argument.length);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  0,  argument.length);	  handleError(argument,    0);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
216	[BUG]  [BUGGY]  handleError(argument,  0,  arguments.length);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  0,  arguments.length);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  0,  arguments.length);	  handleError(argument,    0);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
217	[BUG]  [BUGGY]  handleError(argument,  1,  0);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  1,  0);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  1,  0);	  handleError(argument,    0);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
218	[BUG]  [BUGGY]  handleError(argument,  0,  argument);  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  0,  argument);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  0,  argument);	  handleError(argument,    0);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
219	[BUG]  [BUGGY]  handleMissingArgument(argument,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  group,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  group,  stopAtNonOption);	  handleMissingArgument(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
220	[BUG]  [BUGGY]  handleMissingArgument(argument,  cmd,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  cmd,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  cmd,  stopAtNonOption);	  handleMissingArgument(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
221	[BUG]  [BUGGY]  options.parse(argument,  currentOption));  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  options.parse(argument,  currentOption));  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	options.parse(argument,  currentOption));	  options.parse(argument,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
222	[BUG]  [BUGGY]  options.parse(argument,  currentToken));  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  options.parse(argument,  currentToken));  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	options.parse(argument,  currentToken));	  options.parse(argument,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
223	[BUG]  [BUGGY]  Options  cmd  =  options.parse(argument,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Options  cmd  =  options.parse(argument,  stopAtNonOption));  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Options  cmd  =  options.parse(argument,  stopAtNonOption));	  options.parse(argument,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
224	[BUG]  [BUGGY]  options.parse(argument,  group));  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  options.parse(argument,  group));  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	options.parse(argument,  group));	  options.parse(argument,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
225	[BUG]  [BUGGY]  handleMissingName(argument,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  group,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  group,  stopAtNonOption);	  handleMissingName(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
226	[BUG]  [BUGGY]  Argument[]  arguments  =  this.currentOption.getArguments(argument);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  this.currentOption.getArguments(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  this.currentOption.getArguments(argument);	  Argument[]    arguments    =    this.currentOption.getArguments();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
227	[BUG]  [BUGGY]  Argument[]  arguments  =(this.currentOption!=  null)?  this.currentOption.getArguments()  :  argument;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =(this.currentOption!=  null)?  this.currentOption.getArguments()  :  argument;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =(this.currentOption!=  null)?  this.currentOption.getArguments()  :  argument;	  Argument[]    arguments    =    this.currentOption.getArguments();    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
228	[BUG]  [BUGGY]  String[]  arguments  =(String[])this.options.get(argument.length  -  1);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =(String[])this.options.get(argument.length  -  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])this.options.get(argument.length  -  1);	  String[]    arguments    =(String[])this.options.get(argument    -    1);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
229	[BUG]  [BUGGY]  String[]  arguments  =(String[])this.options.get(argument  -  2);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =(String[])this.options.get(argument  -  2);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])this.options.get(argument  -  2);	  String[]    arguments    =(String[])this.options.get(argument    -    1);    	non-compiled	[CE]  illegal  start  of  type	85	None	replace
230	[BUG]  [BUGGY]  for(String  argument  :  expectedOpts.keySet())  {  continue;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  expectedOpts.keySet())  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  expectedOpts.keySet())  {  continue;  }	  for(String    argument    :    expectedOpts)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
231	[BUG]  [BUGGY]  for(String  argument  :  expectedOpts.length)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  expectedOpts.length)  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  expectedOpts.length)  {  continue;  }	  for(String    argument    :    expectedOpts)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
232	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments().toArray(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments().toArray(argument,  currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments().toArray(argument,  currentOption);	  Argument[]    arguments    =    getArguments().toArray(argument);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
233	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments().toArray(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments().toArray(argument,  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments().toArray(argument,  expectedOpts);	  Argument[]    arguments    =    getArguments().toArray(argument);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
234	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments().toArray(argument,  true);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments().toArray(argument,  true);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments().toArray(argument,  true);	  Argument[]    arguments    =    getArguments().toArray(argument);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
235	[BUG]  [BUGGY]  for(String  argument  :  arguments.trim())  {  continue;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.trim())  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.trim())  {  continue;  }	  if(argument.length()    ==    0)    {    for(String    argument    :    arguments.trim())    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
236	[BUG]  [BUGGY]  for(String  argument  :  arguments.trim())  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.trim())  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.trim())  {	  if(argument.length()    ==    0)    {    for(String    argument    :    arguments.trim())    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
237	[BUG]  [BUGGY]  ||  arguments.length()  ==  0)  {  for(String  argument  :  arguments.trim())  {  continue;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  ||  arguments.length()  ==  0)  {  for(String  argument  :  arguments.trim())  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	||  arguments.length()  ==  0)  {  for(String  argument  :  arguments.trim())  {  continue;  }	  if(argument.length()    ==    0)    {    for(String    argument    :    arguments.trim())    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
238	[BUG]  [BUGGY]  For(String  argument  :  arguments.trim())  {  continue;  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  arguments.trim())  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  arguments.trim())  {  continue;  }	  if(argument.length()    ==    0)    {    for(String    argument    :    arguments.trim())    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
239	[BUG]  [BUGGY]  handleError(argument,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  group,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  group,  stopAtNonOption);	  handleError(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
240	[BUG]  [BUGGY]  handleError(argument,  group);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  group);	  handleError(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
241	[BUG]  [BUGGY]  handleError(argument,  options);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  options);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  options);	  handleError(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
242	[BUG]  [BUGGY]  if(arguments!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(arguments!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(arguments!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }	  if(currentToken!=    null)    {    Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    }    else    {    expectedOpts.add(argument);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
243	[BUG]  [BUGGY]  if(arguments!=  null)  {  if(currentToken!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(arguments!=  null)  {  if(currentToken!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(arguments!=  null)  {  if(currentToken!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }	  if(currentToken!=    null)    {    Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    }    else    {    expectedOpts.add(argument);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
244	[BUG]  [BUGGY]  if(arguments!=  null)  {  if(currentToken!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(arguments!=  null)  {  if(currentToken!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(arguments!=  null)  {  if(currentToken!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }  }	  if(currentToken!=    null)    {    Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    }    else    {    expectedOpts.add(argument);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
245	[BUG]  [BUGGY]  Options  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Options  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Options  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);	  Option    currentToken    =    currentOption.getToken();    expectedOpts.add(argument);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
246	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken()  /  argument;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken()  /  argument;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken()  /  argument;	  Argument    currentToken    =    currentOption.getToken()    +    argument;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
247	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken()  +  arguments;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken()  +  arguments;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken()  +  arguments;	  Argument    currentToken    =    currentOption.getToken()    +    argument;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
248	[BUG]  [BUGGY]  String  currentToken  =(String)options.get(argument  +  1).toLowerCase();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)options.get(argument  +  1).toLowerCase();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =(String)options.get(argument  +  1).toLowerCase();	  String    currentToken    =(String)options.get(argument    +    1);    	non-compiled	[CE]  illegal  start  of  type	83	None	replace
249	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  ]),  options);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  ]),  options);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  ]),  options);	  Argument[]    arguments    =    getArguments(argument).toArray(new    String[arguments.size()    ]));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
250	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(argument,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(argument,  stopAtNonOption);	  Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(argument);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
251	[BUG]  [BUGGY]  Option  currentOption  =  options.getToken();  expectedOpts.add(argument);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  currentOption  =  options.getToken();  expectedOpts.add(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  currentOption  =  options.getToken();  expectedOpts.add(argument);	  Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(argument);    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
252	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments().toArray(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments().toArray(argument,  currentToken);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments().toArray(argument,  currentToken);	  Argument[]    arguments    =    getArguments().toArray(argument);    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
253	[BUG]  [BUGGY]  Argument[]  arguments  =  options.getArgumentsToParse();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  options.getArgumentsToParse();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  options.getArgumentsToParse();	  Argument[]    arguments    =    options.getArguments();    	non-compiled	[CE]  illegal  start  of  type	42	None	replace
254	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  argument,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(),  argument,  stopAtNonOption);	  Argument    currentToken    =    currentOption.getToken(),    argument);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
255	[BUG]  [BUGGY]  handleArgument(argument,  options);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  options);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  options);	  handleArgument(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
256	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument,  stopAtNonOption,  currentToken);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument,  stopAtNonOption,  currentToken);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument,  stopAtNonOption,  currentToken);	  Argument[]    arguments    =    getArguments(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	77	None	replace
257	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument,  currentToken,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument,  currentToken,  stopAtNonOption);	  Argument[]    arguments    =    getArguments(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
258	[BUG]  [BUGGY]  Argument[]  arguments  =  currentOption.getArgumentsToArray();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  currentOption.getArgumentsToArray();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  currentOption.getArgumentsToArray();	  Argument[]    arguments    =    currentOption.getArgumentsArray();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
259	[BUG]  [BUGGY]  handleToken(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  stopAtNonOption);	  handleToken(argument,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
260	[BUG]  [BUGGY]  handleToken(argument,  blockAtNonOption,  options);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  blockAtNonOption,  options);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  blockAtNonOption,  options);	  handleToken(argument,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
261	[BUG]  [BUGGY]  Argument[]  arguments  =  option.getArguments(argument);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  option.getArguments(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  option.getArguments(argument);	  Argument[]    arguments    =    option.getArguments();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
262	[BUG]  [BUGGY]  String[]  arguments  =(String[])this.options.get(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =(String[])this.options.get(argument,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])this.options.get(argument,  stopAtNonOption);	  String[]    arguments    =(String[])this.options.get(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
263	[BUG]  [BUGGY]  for(String  argument  :  arguments.values())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.values())  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.values())  {	  for(String    argument    :    arguments.length)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
264	[BUG]  [BUGGY]  handleError(currentToken,  argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(currentToken,  argument);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(currentToken,  argument);	  handleError(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
265	[BUG]  [BUGGY]  handleMissingName(argument,  null,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  null,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  null,  stopAtNonOption);	  handleMissingName(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
266	[BUG]  [BUGGY]  handleMissingName(argument,  options);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  options);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  options);	  handleMissingName(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
267	[BUG]  [BUGGY]  String[]  arguments  =(String[])properties.get(argument,  true);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =(String[])properties.get(argument,  true);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])properties.get(argument,  true);	  String[]    arguments    =(String[])properties.get(argument);    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
268	[BUG]  [BUGGY]  handleMissingArgument(argument,  null,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  null,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  null,  stopAtNonOption);	  handleMissingArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
269	[BUG]  [BUGGY]  handleMissingArgument(argument,  this);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  this);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  this);	  handleMissingArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
270	[BUG]  [BUGGY]  Argument  currentToken  =  options.getToken();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  options.getToken();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  options.getToken();	  Argument    currentToken    =    argument.getToken();    	non-compiled	[CE]  illegal  start  of  type	43	None	replace
271	[BUG]  [BUGGY]  For(String  argument  :  options.arguments)  {  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  options.arguments)  {  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  options.arguments)  {  }	  For(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
272	[BUG]  [BUGGY]  handleArg(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArg(argument,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArg(argument,  currentToken);	  handleArg(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
273	[BUG]  [BUGGY]  handleArg(argument,  options);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArg(argument,  options);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArg(argument,  options);	  handleArg(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
274	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(currentToken,  argument);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(currentToken,  argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(currentToken,  argument);	  Argument[]    arguments    =    getArguments(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
275	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  currentOption  =  options.getOption(argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  currentOption  =  options.getOption(argument);	  if(currentToken!=    null)    {    Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    }    	non-compiled	[CE]  illegal  start  of  type	91	None	replace
276	[BUG]  [BUGGY]  String  currentToken  =(String)this.options.get(argument,  arguments);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)this.options.get(argument,  arguments);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =(String)this.options.get(argument,  arguments);	  String    currentToken    =(String)this.options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
277	[BUG]  [BUGGY]  handleArgument(argument,  null,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  null,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  null,  stopAtNonOption);	  handleArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
278	[BUG]  [BUGGY]  handleArgument(argument,  null,  0);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  null,  0);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  null,  0);	  handleArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
279	[BUG]  [BUGGY]  handleToken(argument,  blockParsing,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  blockParsing,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  blockParsing,  stopAtNonOption);	  handleToken(argument,    blockParsing);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
280	[BUG]  [BUGGY]  handleToken(currentOption,  argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(currentOption,  argument,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(currentOption,  argument,  expectedOpts);	  handleToken(argument,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
281	[BUG]  [BUGGY]  handleError(argument,  null,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  null,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  null,  stopAtNonOption);	  handleError(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
282	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.getOption(argument,  stopAtNonOption);	  Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
283	[BUG]  [BUGGY]  For(String  argument  :  arguments.trim())  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  arguments.trim())  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  arguments.trim())  {	  if(argument.length()    ==    0)    {    for(String    argument    :    arguments.trim())    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	94	None	replace
284	[BUG]  [BUGGY]  if(currentOption!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  argument);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(currentOption!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(currentOption!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  argument);  }	  Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken,    argument);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
285	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(argument,  stopAtNonOption);	  Argument    currentToken    =    currentOption.getToken(argument);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
286	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument,  0);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument,  0);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(argument,  0);	  Argument    currentToken    =    currentOption.getToken(argument);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
287	[BUG]  [BUGGY]  if(currentToken!=  null)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(currentToken!=  null)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(currentToken!=  null)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }	  Option    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
288	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument.toLowerCase(),  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument.toLowerCase(),  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument.toLowerCase(),  stopAtNonOption);	  Argument[]    arguments    =    getArguments(argument.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
289	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.tokenTo(argument,  stopAtNonOption);	  Argument    currentToken    =    currentOption.tokenTo(argument);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
290	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  0);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  0);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.tokenTo(argument,  0);	  Argument    currentToken    =    currentOption.tokenTo(argument);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
291	[BUG]  [BUGGY]  for(Option  group  :  options.values())  {  expectedOpts.add(group.getValue(argument));  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(Option  group  :  options.values())  {  expectedOpts.add(group.getValue(argument));  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(Option  group  :  options.values())  {  expectedOpts.add(group.getValue(argument));  }	  if(argument.length()    ==    0)    {    for(Option    group    :    options.values())    {    expectedOpts.add(group.getValue(argument));    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
292	[BUG]  [BUGGY]  Option  group  =  options.values();  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  group  =  options.values();  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  group  =  options.values();	  if(argument.length()    ==    0)    {    for(Option    group    :    options.values())    {    expectedOpts.add(group.getValue(argument));    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
293	[BUG]  [BUGGY]  options.add(group.getValue(argument));  [CE]  illegal  start  of  type  [FE]                              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  options.add(group.getValue(argument));  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	options.add(group.getValue(argument));	  if(argument.length()    ==    0)    {    for(Option    group    :    options.values())    {    expectedOpts.add(group.getValue(argument));    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
294	[BUG]  [BUGGY]  OptionGroup  group  =  options.values();  [CE]  illegal  start  of  type  [FE]                                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  OptionGroup  group  =  options.values();  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	OptionGroup  group  =  options.values();	  if(argument.length()    ==    0)    {    for(Option    group    :    options.values())    {    expectedOpts.add(group.getValue(argument));    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
295	[BUG]  [BUGGY]  handleToken(argument,  group,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  group,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  group,  stopAtNonOption);	  handleToken(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
296	[BUG]  [BUGGY]  for(String  argument  :  arguments.values())  {  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.values())  {  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.values())  {  }	  for(String    argument    :    arguments.length)    {    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
297	[BUG]  [BUGGY]  for(String  argument  :  properties.length)  {  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  properties.length)  {  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  properties.length)  {  }	  for(String    argument    :    arguments.length)    {    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
298	[BUG]  [BUGGY]  For(String  argument  :  options.arguments)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  options.arguments)  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  options.arguments)  {  continue;  }	  For(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
299	[BUG]  [BUGGY]  For(String  argument  :  options.options)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  options.options)  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  options.options)  {  continue;  }	  For(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
300	[BUG]  [BUGGY]  Argument[]  arguments  =  currentOption.getArguments(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  currentOption.getArguments(argument,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  currentOption.getArguments(argument,  stopAtNonOption);	  Argument[]    arguments    =    currentOption.getArguments(argument);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
301	[BUG]  [BUGGY]  Argument[]  arguments  =  currentOption.getArguments(argument,  0);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  currentOption.getArguments(argument,  0);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  currentOption.getArguments(argument,  0);	  Argument[]    arguments    =    currentOption.getArguments(argument);    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
302	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.parseOption(argument,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.parseOption(argument,  stopAtNonOption);	  Option    cmd    =    options.parseOption(argument);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
303	[BUG]  [BUGGY]  handleMissingName(argument,  currentToken,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  currentToken,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  currentToken,  stopAtNonOption);	  handleMissingName(argument,    currentToken);    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
304	[BUG]  [BUGGY]  handleArgument(argument,  properties);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  properties);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  properties);	  handleArgument(argument,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
305	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption);  if(cmd!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.getOption(argument,  stopAtNonOption);  if(cmd!=  null)  {  continue;  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.getOption(argument,  stopAtNonOption);  if(cmd!=  null)  {  continue;  }	  Option    cmd    =    options.getOption(argument);    if(cmd!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
306	[BUG]  [BUGGY]  handleMissingArgument(argument,  options);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  options);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  options);	  handleMissingArgument(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
307	[BUG]  [BUGGY]  String[]  arguments  =  options.get(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =  options.get(argument,  stopAtNonOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =  options.get(argument,  stopAtNonOption);	  String[]    arguments    =    options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
308	[BUG]  [BUGGY]  for(Option  group  :  options.values())  {  expectedOpts.add(group);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(Option  group  :  options.values())  {  expectedOpts.add(group);  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(Option  group  :  options.values())  {  expectedOpts.add(group);  }	  if(argument.length()    ==    0)    {    for(Option    group    :    options.values())    {    expectedOpts.add(group);    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
309	[BUG]  [BUGGY]  options.add(argument);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  options.add(argument);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	options.add(argument);	  if(argument.length()    ==    0)    {    for(Option    group    :    options.values())    {    expectedOpts.add(group);    }    	non-compiled	[CE]  illegal  start  of  type	86	None	replace
310	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.parse(argument,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.parse(argument,  stopAtNonOption);	  Option    cmd    =    options.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
311	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments().split( ":n ");  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments().split( ":n ");  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments().split( ":n ");	  Argument[]    arguments    =    getArguments().split(   ":   ");    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
312	[BUG]  [BUGGY]  for(Option  group  :  options.getOptionGroups())  {  expectedOpts.add(group);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(Option  group  :  options.getOptionGroups())  {  expectedOpts.add(group);  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(Option  group  :  options.getOptionGroups())  {  expectedOpts.add(group);  }	  if(argument.length()    ==    0)    {    for(Option    group    :    options.getOptionGroups())    {    expectedOpts.add(group);    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
313	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(argument);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  group  =  options.getOptionGroup(argument);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  group  =  options.getOptionGroup(argument);	  if(argument.length()    ==    0)    {    for(Option    group    :    options.getOptionGroups())    {    expectedOpts.add(group);    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
314	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(argument);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(argument);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	OptionGroup  currentOption  =  options.getOptionGroup(argument);	  if(argument.length()    ==    0)    {    for(Option    group    :    options.getOptionGroups())    {    expectedOpts.add(group);    }    	non-compiled	[CE]  illegal  start  of  type	87	None	replace
315	[BUG]  [BUGGY]  if(stopAtNonOption)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(stopAtNonOption)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(stopAtNonOption)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }	  if(currentToken!=    null)    {    Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    }    else    {    expectedOpts.add(argument);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
316	[BUG]  [BUGGY]  handleToken(argument,  options,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  options,  stopAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  options,  stopAtNonOption);	  handleToken(argument,    options);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
317	[BUG]  [BUGGY]  options.parse(argument,  null));  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  options.parse(argument,  null));  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	options.parse(argument,  null));	  options.parse(argument,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
318	[BUG]  [BUGGY]  Options  options  =  options.parse(argument,  currentToken));  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Options  options  =  options.parse(argument,  currentToken));  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Options  options  =  options.parse(argument,  currentToken));	  options.parse(argument,    stopAtNonOption));    	non-compiled	[CE]  illegal  start  of  type	74	None	replace
319	[BUG]  [BUGGY]  String  currentToken  =(String)options.get(argument  -  2);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)options.get(argument  -  2);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =(String)options.get(argument  -  2);	  String    currentToken    =(String)options.get(argument    -    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
320	[BUG]  [BUGGY]  String  currentToken  =(String)options.get(argument  *  1);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)options.get(argument  *  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =(String)options.get(argument  *  1);	  String    currentToken    =(String)options.get(argument    -    1);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
321	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken);  if(cmd!=  null)  {  expectedOpts[i]  =  arguments[i];  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.getOption(argument,  currentToken);  if(cmd!=  null)  {  expectedOpts[i]  =  arguments[i];  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.getOption(argument,  currentToken);  if(cmd!=  null)  {  expectedOpts[i]  =  arguments[i];  }	  Option    cmd    =    options.getOption(argument);    if(cmd!=    null)    {    expectedOpts[i]    =    arguments[i];    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
322	[BUG]  [BUGGY]  options.parse(argument,  null);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  options.parse(argument,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	options.parse(argument,  null);	  options.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
323	[BUG]  [BUGGY]  handleArgument(argument,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  blockAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  blockAtNonOption);	  handleArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
324	[BUG]  [BUGGY]  handleArgument(argument,  blockParsing);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  blockParsing);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  blockParsing);	  handleArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
325	[BUG]  [BUGGY]  handleMissingName(argument,  useParsing);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  useParsing);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  useParsing);	  handleMissingName(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	78	None	replace
326	[BUG]  [BUGGY]  expectedOpts.add(argument);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  expectedOpts.add(argument);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	expectedOpts.add(argument);	  if(argument!=    null)    {    for(String    argument    :    arguments.split(   "n   "))    {    expectedOpts.add(argument);    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
327	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(argument);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	OptionGroup  group  =  options.getOptionGroup(argument);	  if(argument!=    null)    {    for(String    argument    :    arguments.split(   "n   "))    {    expectedOpts.add(argument);    }    	non-compiled	[CE]  illegal  start  of  type	88	None	replace
328	[BUG]  [BUGGY]  String[]  arguments  =  options.get(argument  -  1);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =  options.get(argument  -  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =  options.get(argument  -  1);	  String[]    arguments    =(String[])options.get(argument    -    1);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
329	[BUG]  [BUGGY]  String[]  arguments  =(String[])options.get(argument  -  2);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =(String[])options.get(argument  -  2);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])options.get(argument  -  2);	  String[]    arguments    =(String[])options.get(argument    -    1);    	non-compiled	[CE]  illegal  start  of  type	70	None	replace
330	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  group  =  options.getOptionGroup();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  group  =  options.getOptionGroup();	  if(arguments!=    null)    {    for(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
331	[BUG]  [BUGGY]  for(String  argument  :  options.arguments)  {  continue;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  options.arguments)  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  options.arguments)  {  continue;  }	  for(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
332	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument)+  1;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument)+  1;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(argument)+  1;	  Argument    currentToken    =    currentOption.getToken(argument);    	non-compiled	[CE]  illegal  start  of  type	81	None	replace
333	[BUG]  [BUGGY]  for(String  argument  :  arguments.length())  {  continue;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.length())  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.length())  {  continue;  }	  if(argument.length()    ==    0)    {    for(String    argument    :    arguments.toString())    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	96	None	replace
334	[BUG]  [BUGGY]  String  currentToken  =(String)this.options.get(argument).toLowerCase();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String  currentToken  =(String)this.options.get(argument).toLowerCase();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =(String)this.options.get(argument).toLowerCase();	  String    currentToken    =(String)this.options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
335	[BUG]  [BUGGY]  Argument[]  arguments  =  option.toString();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  option.toString();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  option.toString();	  Argument[]    arguments    =    option.getArguments();    	non-compiled	[CE]  illegal  start  of  type	97	None	replace
336	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument.toLowerCase()  +  1);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument.toLowerCase()  +  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument.toLowerCase()  +  1);	  Argument[]    arguments    =    getArguments(argument.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
337	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument.toLowerCase(),  argument);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument.toLowerCase(),  argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument.toLowerCase(),  argument);	  Argument[]    arguments    =    getArguments(argument.toLowerCase());    	non-compiled	[CE]  illegal  start  of  type	93	None	replace
338	[BUG]  [BUGGY]  For(String  argument  :  arguments.values())  {  continue;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  arguments.values())  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  arguments.values())  {  continue;  }	  For(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
339	[BUG]  [BUGGY]  For(String  argument  :  arguments.toArray(new  String[arguments.size()  ]))  {  continue;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  arguments.toArray(new  String[arguments.size()  ]))  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  arguments.toArray(new  String[arguments.size()  ]))  {  continue;  }	  For(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
340	[BUG]  [BUGGY]  for(String  argument  :  expectedOpts.values())  {  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  expectedOpts.values())  {  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  expectedOpts.values())  {  }	  for(String    argument    :    expectedOpts)    {    }    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
341	[BUG]  [BUGGY]  handleMissingArgument(argument,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  blockAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  blockAtNonOption);	  handleMissingArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
342	[BUG]  [BUGGY]  handleMissingArgument(argument,  block);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  block);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  block);	  handleMissingArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
343	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.length()  *  2];  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.length()  *  2];  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.length()  *  2];	  String[]    expectedOpts    =    new    String[argument.length()    ];    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
344	[BUG]  [BUGGY]  handleToken(argument,  properties);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  properties);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  properties);	  handleToken(argument,    options);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
345	[BUG]  [BUGGY]  handleToken(argument,  options,  group);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  options,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  options,  group);	  handleToken(argument,    options);    	non-compiled	[CE]  illegal  start  of  type	72	None	replace
346	[BUG]  [BUGGY]  String[]  arguments  =  options.get(argument.toLowerCase());  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =  options.get(argument.toLowerCase());  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =  options.get(argument.toLowerCase());	  String[]    arguments    =    options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
347	[BUG]  [BUGGY]  handleMissingName(argument,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  blockAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  blockAtNonOption);	  handleMissingName(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
348	[BUG]  [BUGGY]  handleToken(argument,  blockAtNonOption,  group);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  blockAtNonOption,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  blockAtNonOption,  group);	  handleToken(argument,    blockAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	71	None	replace
349	[BUG]  [BUGGY]  for(Option  group  :  arguments)  {  expectedOpts.add(group.getValue(argument));  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(Option  group  :  arguments)  {  expectedOpts.add(group.getValue(argument));  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(Option  group  :  arguments)  {  expectedOpts.add(group.getValue(argument));  }	  if(argument.length()    ==    0)    {    for(Option    group    :    options.values())    {    expectedOpts.add(group.getValue(argument));    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
350	[BUG]  [BUGGY]  expectedOpts.add(group.getValue(argument));  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  expectedOpts.add(group.getValue(argument));  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	expectedOpts.add(group.getValue(argument));	  if(argument.length()    ==    0)    {    for(Option    group    :    options.values())    {    expectedOpts.add(group.getValue(argument));    }    	non-compiled	[CE]  illegal  start  of  type	89	None	replace
351	[BUG]  [BUGGY]  handleMissingName(argument,  true,  null);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  true,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  true,  null);	  handleMissingName(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
352	[BUG]  [BUGGY]  String[]  arguments  =(String[])this.options.get(argument  *  1);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =(String[])this.options.get(argument  *  1);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])this.options.get(argument  *  1);	  String[]    arguments    =(String[])this.options.get(argument    +    1);    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
353	[BUG]  [BUGGY]  handleToken(argument,  new  OptionGroup(currentOption,  expectedOpts));  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  new  OptionGroup(currentOption,  expectedOpts));  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  new  OptionGroup(currentOption,  expectedOpts));	  handleToken(argument,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
354	[BUG]  [BUGGY]  Argument[]  arguments  =  currentOption.getArgumentsToStringArray();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  currentOption.getArgumentsToStringArray();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  currentOption.getArgumentsToStringArray();	  Argument[]    arguments    =    currentOption.getArgumentsArray();    	non-compiled	[CE]  illegal  start  of  type	76	None	replace
355	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  2]);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  2]);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  2]);	  Argument[]    arguments    =    getArguments(argument).toArray(new    String[arguments.size()    -    1]);    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
356	[BUG]  [BUGGY]  handleToken(argument,  currentToken,  blockParsing);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentToken,  blockParsing);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  currentToken,  blockParsing);	  handleToken(argument,    blockParsing);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
357	[BUG]  [BUGGY]  handleToken(argument,  group,  blockParsing);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  group,  blockParsing);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  group,  blockParsing);	  handleToken(argument,    blockParsing);    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
358	[BUG]  [BUGGY]  For(String  argument  :  arguments.split( "n "))  {  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  arguments.split( "n "))  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  arguments.split( "n "))  {	  For(String    argument    :    arguments)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
359	[BUG]  [BUGGY]  For(String  argument  :  arguments.values())  {  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  arguments.values())  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  arguments.values())  {	  For(String    argument    :    arguments)    {    	non-compiled	[CE]  illegal  start  of  type	68	None	replace
360	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument,  this.currentOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument,  this.currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument,  this.currentOption);	  Argument[]    arguments    =    getArguments(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
361	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]))  {  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]))  {  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]))  {  }	  for(String    argument    :    arguments.length)    {    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
362	[BUG]  [BUGGY]  if(!stopAtNonOption)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(!stopAtNonOption)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(!stopAtNonOption)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }	  Option    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
363	[BUG]  [BUGGY]  expectedOpts.add(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  expectedOpts.add(argument,  currentOption);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	expectedOpts.add(argument,  currentOption);	  Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken,    argument);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
364	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  arguments);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  arguments);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  arguments);	  Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken,    argument);    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
365	[BUG]  [BUGGY]  for(String  argument  :  expectedOpts.values())  {  continue;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  expectedOpts.values())  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  expectedOpts.values())  {  continue;  }	  for(String    argument    :    expectedOpts)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
366	[BUG]  [BUGGY]  if(arguments!=  null)  {  for  (String  argument  :  arguments)  {  expectedOpts.add(argument);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(arguments!=  null)  {  for  (String  argument  :  arguments)  {  expectedOpts.add(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(arguments!=  null)  {  for  (String  argument  :  arguments)  {  expectedOpts.add(argument);  }	  if(currentToken!=    null)    {    Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    }    else    {    expectedOpts.add(argument);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
367	[BUG]  [BUGGY]  if(arguments!=  null)  {  for  (String  argument  :  arguments)  {  expectedOpts.add(argument);  }  else  {  expectedOpts.add(argument);  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(arguments!=  null)  {  for  (String  argument  :  arguments)  {  expectedOpts.add(argument);  }  else  {  expectedOpts.add(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(arguments!=  null)  {  for  (String  argument  :  arguments)  {  expectedOpts.add(argument);  }  else  {  expectedOpts.add(argument);  }	  if(currentToken!=    null)    {    Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    }    else    {    expectedOpts.add(argument);    }    	non-compiled	[CE]  illegal  start  of  type	92	None	replace
368	[BUG]  [BUGGY]  if(arguments!=  null)  {  for(String  argument  :  arguments.toString())  {  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(arguments!=  null)  {  for(String  argument  :  arguments.toString())  {  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(arguments!=  null)  {  for(String  argument  :  arguments.toString())  {  }	  if(arguments!=    null)    {    for(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
369	[BUG]  [BUGGY]  handleToken(argument,  group,  currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  group,  currentOption,  expectedOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  group,  currentOption,  expectedOpts);	  handleToken(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
370	[BUG]  [BUGGY]  handleToken(argument,  currentOption,  preferredOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentOption,  preferredOpts);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  currentOption,  preferredOpts);	  handleToken(argument,    currentOption,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
371	[BUG]  [BUGGY]  handleToken(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleToken(argument,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  currentToken);	  handleToken(argument,    group);    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
372	[BUG]  [BUGGY]  handleMissingArgument(argument,  null,  argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingArgument(argument,  null,  argument);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  null,  argument);	  handleMissingArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
373	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument)+  1;  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.getOption(argument)+  1;  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.getOption(argument)+  1;	  Option    cmd    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
374	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  *  2];  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  *  2];  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.size()  *  2];	  String[]    expectedOpts    =    new    String[argument.size()    ];    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
375	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  ]),  this);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  ]),  this);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  ]),  this);	  Argument[]    arguments    =    getArguments(argument).toArray(new    String[arguments.size()    ]));    	non-compiled	[CE]  illegal  start  of  type	79	None	replace
376	[BUG]  [BUGGY]  Options  cmd  =  options.parse(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Options  cmd  =  options.parse(argument,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Options  cmd  =  options.parse(argument,  currentToken);	  options.parse(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	73	None	replace
377	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken()  +  argument  +  1;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken()  +  argument  +  1;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken()  +  argument  +  1;	  Argument    currentToken    =    currentOption.getToken()    +    argument;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
378	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken()  +  arguments.length;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken()  +  arguments.length;  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken()  +  arguments.length;	  Argument    currentToken    =    currentOption.getToken()    +    argument;    	non-compiled	[CE]  illegal  start  of  type	82	None	replace
379	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument,  group);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.parse(argument,  group);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.parse(argument,  group);	  Option    cmd    =    options.parse(argument);    	non-compiled	[CE]  illegal  start  of  type	75	None	replace
380	[BUG]  [BUGGY]  handleArgument(argument,  block);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  block);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  block);	  handleArgument(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
381	[BUG]  [BUGGY]  For(String  argument  :  arguments.split( "n "))  {  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  arguments.split( "n "))  {  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  arguments.split( "n "))  {  }	  For(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
382	[BUG]  [BUGGY]  For(String  argument  :  arguments.toString())  {  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  For(String  argument  :  arguments.toString())  {  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  arguments.toString())  {  }	  For(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	67	None	replace
383	[BUG]  [BUGGY]  handleError(argument,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  blockAtNonOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  blockAtNonOption);	  handleError(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
384	[BUG]  [BUGGY]  handleError(argument,  currentToken,  currentOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  currentToken,  currentOption);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  currentToken,  currentOption);	  handleError(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
385	[BUG]  [BUGGY]  for(String  argument  :  arguments.split( "n "))  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.split( "n "))  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.split( "n "))  {	  for(String    argument    :    arguments)    {    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
386	[BUG]  [BUGGY]  handleMissingName(argument,  null,  currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleMissingName(argument,  null,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  null,  currentToken);	  handleMissingName(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
387	[BUG]  [BUGGY]  handleArgument(argument,  true,  null);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  true,  null);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  true,  null);	  handleArgument(argument,    true);    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
388	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments().split( "n ",  argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments().split( "n ",  argument);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments().split( "n ",  argument);	  Argument[]    arguments    =    getArguments().split(   "n   ");    	non-compiled	[CE]  illegal  start  of  type	84	None	replace
389	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]))  {  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]))  {  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]))  {	  for(String    argument    :    arguments.length)    {    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
390	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument.toLowerCase(),  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument[]  arguments  =  getArguments(argument.toLowerCase(),  expectedOpts);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument.toLowerCase(),  expectedOpts);	  Argument[]    arguments    =    getArguments(argument,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
391	[BUG]  [BUGGY]  for(String  argument  :  arguments.split( "n "))  {  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.split( "n "))  {  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.split( "n "))  {  }	  for(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
392	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  argument,  null);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  argument,  null);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(),  argument,  null);	  Argument    currentToken    =    currentOption.getToken(),    argument);    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
393	[BUG]  [BUGGY]  if(currentOption!=  null)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  if(currentOption!=  null)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(currentOption!=  null)  {  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  }	  Option    currentToken    =    currentOption.getToken();    expectedOpts.add(argument);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
394	[BUG]  [BUGGY]  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument,  null);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument,  null);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument,  null);	  Option    currentToken    =    currentOption.getToken();    expectedOpts.add(argument);    	non-compiled	[CE]  illegal  start  of  type	69	None	replace
395	[BUG]  [BUGGY]  handleArgument(argument,  null,  currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  null,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  null,  currentToken);	  handleArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
396	[BUG]  [BUGGY]  handleArgument(argument,  null,  argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleArgument(argument,  null,  argument);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  null,  argument);	  handleArgument(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
397	[BUG]  [BUGGY]  handleError(argument,  null,  currentToken);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  null,  currentToken);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  null,  currentToken);	  handleError(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
398	[BUG]  [BUGGY]  handleError(argument,  1);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  1);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  1);	  handleError(argument,    0);    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
399	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument);  if(cmd!=  null)  {  expectedOpts[i]  =  argument[i];  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Option  cmd  =  options.getOption(argument);  if(cmd!=  null)  {  expectedOpts[i]  =  argument[i];  }  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.getOption(argument);  if(cmd!=  null)  {  expectedOpts[i]  =  argument[i];  }	  Option    cmd    =    options.getOption(argument);    if(cmd!=    null)    {    expectedOpts[i]    =    arguments[i];    }    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
400	[BUG]  [BUGGY]  Argument  currentToken  =  arguments.getString();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  arguments.getString();  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  arguments.getString();	  Argument    currentToken    =    arguments.getToken();    	non-compiled	[CE]  illegal  start  of  type	44	None	replace
401	[BUG]  [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]))  {  continue;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]))  {  continue;  }  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.toArray(new  String[arguments.size()  ]))  {  continue;  }	  for(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
402	[BUG]  [BUGGY]  String[]  arguments  =(String[])this.options.get(argument,  this.group);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  String[]  arguments  =(String[])this.options.get(argument,  this.group);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])this.options.get(argument,  this.group);	  String[]    arguments    =(String[])this.options.get(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
403	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  true);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  true);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.tokenTo(argument,  true);	  Argument    currentToken    =    currentOption.tokenTo(argument);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
404	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  false);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument,  false);  [BUGGY]      handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.tokenTo(argument,  false);	  Argument    currentToken    =    currentOption.tokenTo(argument);    	non-compiled	[CE]  illegal  start  of  type	98	None	replace
405	[BUG]  [BUGGY]  handleError(argument,  option);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {      [BUGGY]  handleError(argument,  option);  [BUGGY]      }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  option);	  handleError(argument,    stopAtNonOption);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
