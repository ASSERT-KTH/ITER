bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(String  argument  :  arguments)  {  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  for(String  argument  :  arguments)  {  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments)  {	      if(argument.length()    ==    0)    {    for(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
2	[BUG]  [BUGGY]  for(String  argument  :  arguments)  {  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  for(String  argument  :  arguments)  {  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments)  {  }	      if(argument.length()    ==    0)    {    for(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
3	[BUG]  [BUGGY]  for(String  argument  :  arguments.length)  {  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  for(String  argument  :  arguments.length)  {  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.length)  {	      if(argument.length()    ==    0)    {    for(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
4	[BUG]  [BUGGY]  for(String  argument  :  arguments.length)  {  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  for(String  argument  :  arguments.length)  {  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments.length)  {  }	      if(argument.length()    ==    0)    {    for(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
5	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments().toArray(argument);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  arguments  =  getArguments().toArray(argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments().toArray(argument);	      Argument[]    arguments    =    getArguments();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
6	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments().split( ": ");  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  arguments  =  getArguments().split( ": ");  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments().split( ": ");	      Argument[]    arguments    =    getArguments();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
7	[BUG]  [BUGGY]  if(arguments!=  null)  {  for(String  argument  :  arguments)  {  }  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(arguments!=  null)  {  for(String  argument  :  arguments)  {  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(arguments!=  null)  {  for(String  argument  :  arguments)  {  }	      if(argument!=    null)    {    for(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
8	[BUG]  [BUGGY]  for(String  argument  :  expectedOpts)  {  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  for(String  argument  :  expectedOpts)  {  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  expectedOpts)  {  }	      if(argument!=    null)    {    for(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
9	[BUG]  [BUGGY]  for(String  argument  :  expectedOpts)  {  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  for(String  argument  :  expectedOpts)  {  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  expectedOpts)  {	      if(argument!=    null)    {    for(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
10	[BUG]  [BUGGY]  for(String  argument  :  arguments)  {  continue;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  for(String  argument  :  arguments)  {  continue;  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  arguments)  {  continue;  }	      if(argument.length()    ==    0)    {    for(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
11	[BUG]  [BUGGY]  For(String  argument  :  arguments)  {  continue;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  For(String  argument  :  arguments)  {  continue;  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  arguments)  {  continue;  }	      if(argument.length()    ==    0)    {    for(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
12	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  ];  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[arguments.size()  ];  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[arguments.size()  ];	      String[]    expectedOpts    =    new    String[expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
13	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  ];  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[argument.size()  ];  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.size()  ];	      String[]    expectedOpts    =    new    String[expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
14	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[args.size()  ];  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[args.size()  ];  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[args.size()  ];	      String[]    expectedOpts    =    new    String[expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
15	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[argument.length()  ];  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[argument.length()  ];  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[argument.length()  ];	      String[]    expectedOpts    =    new    String[expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
16	[BUG]  [BUGGY]  String  currentToken  =(String)this.options.get(argument);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String  currentToken  =(String)this.options.get(argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =(String)this.options.get(argument);	      String    currentToken    =(String)options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
17	[BUG]  [BUGGY]  String  currentToken  =(String)properties.get(argument);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String  currentToken  =(String)properties.get(argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =(String)properties.get(argument);	      String    currentToken    =(String)options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
18	[BUG]  [BUGGY]  String  currentToken  =(String)options.get(argument  -  1);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String  currentToken  =(String)options.get(argument  -  1);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =(String)options.get(argument  -  1);	      String    currentToken    =(String)options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
19	[BUG]  [BUGGY]  Option  cmd  =  options.parseOption(argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Option  cmd  =  options.parseOption(argument);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.parseOption(argument);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
20	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Option  cmd  =  options.getOption(argument);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.getOption(argument);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
21	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument);  if(cmd!=  null)  {  continue;  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Option  cmd  =  options.getOption(argument);  if(cmd!=  null)  {  continue;  }  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.getOption(argument);  if(cmd!=  null)  {  continue;  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
22	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(argument);  if(cmd!=  null)  {  expectedOpts[i]  =  arguments[i];  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Option  cmd  =  options.getOption(argument);  if(cmd!=  null)  {  expectedOpts[i]  =  arguments[i];  }  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.getOption(argument);  if(cmd!=  null)  {  expectedOpts[i]  =  arguments[i];  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
23	[BUG]  [BUGGY]  handleToken(argument,  currentOption,  expectedOpts);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleToken(argument,  currentOption,  expectedOpts);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  currentOption,  expectedOpts);	  handleToken(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
24	[BUG]  [BUGGY]  handleToken(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleToken(argument,  expectedOpts);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  expectedOpts);	  handleToken(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
25	[BUG]  [BUGGY]  handleToken(argument,  group);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleToken(argument,  group);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  group);	  handleToken(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
26	[BUG]  [BUGGY]  handleToken(argument,  blockParsing);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleToken(argument,  blockParsing);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  blockParsing);	  handleToken(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
27	[BUG]  [BUGGY]  handleMissingName(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingName(argument,  currentOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  currentOption);	  handleMissingName(argument);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
28	[BUG]  [BUGGY]  handleMissingName(argument,  null);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingName(argument,  null);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  null);	  handleMissingName(argument);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
29	[BUG]  [BUGGY]  handleMissingName(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingName(argument,  currentToken);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  currentToken);	  handleMissingName(argument);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
30	[BUG]  [BUGGY]  handleMissingName(argument,  true);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingName(argument,  true);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  true);	  handleMissingName(argument);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
31	[BUG]  [BUGGY]  if(arguments!=  null)  {  for(String  argument  :  arguments)  {  continue;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(arguments!=  null)  {  for(String  argument  :  arguments)  {  continue;  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(arguments!=  null)  {  for(String  argument  :  arguments)  {  continue;  }	      if(argument!=    null)    {    for(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
32	[BUG]  [BUGGY]  for(String  argument  :  expectedOpts)  {  continue;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  for(String  argument  :  expectedOpts)  {  continue;  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	for(String  argument  :  expectedOpts)  {  continue;  }	      if(argument!=    null)    {    for(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
33	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  arguments  =  getArguments(argument,  currentOption);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument,  currentOption);	      Argument[]    arguments    =    getArguments(argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
34	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  arguments  =  getArguments(argument,  currentToken);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument,  currentToken);	      Argument[]    arguments    =    getArguments(argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
35	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  arguments  =  getArguments(argument,  expectedOpts);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument,  expectedOpts);	      Argument[]    arguments    =    getArguments(argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
36	[BUG]  [BUGGY]  handleMissingArgument(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingArgument(argument,  currentOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  currentOption);	  handleMissingArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
37	[BUG]  [BUGGY]  handleMissingArgument(argument,  null);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingArgument(argument,  null);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  null);	  handleMissingArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
38	[BUG]  [BUGGY]  handleMissingArgument(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingArgument(argument,  currentToken);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  currentToken);	  handleMissingArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
39	[BUG]  [BUGGY]  handleMissingArgument(argument,  true);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingArgument(argument,  true);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  true);	  handleMissingArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
40	[BUG]  [BUGGY]  Argument[]  arguments  =  currentOption.getArguments(argument);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  arguments  =  currentOption.getArguments(argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  currentOption.getArguments(argument);	      Argument[]    arguments    =    currentOption.getArguments();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
41	[BUG]  [BUGGY]  Argument[]  arguments  =  this.currentOption.getArguments();  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  arguments  =  this.currentOption.getArguments();  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  this.currentOption.getArguments();	      Argument[]    arguments    =    currentOption.getArguments();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
42	[BUG]  [BUGGY]  Argument[]  arguments  =  options.getArguments();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  arguments  =  options.getArguments();  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  options.getArguments();	      Argument[]    arguments    =    currentOption.getArguments();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
43	[BUG]  [BUGGY]  Argument  currentToken  =  argument.getToken();  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument  currentToken  =  argument.getToken();  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  argument.getToken();	      Argument    currentToken    =    currentOption.getToken();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
44	[BUG]  [BUGGY]  Argument  currentToken  =  arguments.getToken();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument  currentToken  =  arguments.getToken();  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  arguments.getToken();	      Argument    currentToken    =    currentOption.getToken();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
45	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  argument);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument  currentToken  =  currentOption.getToken(),  argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(),  argument);	      Argument    currentToken    =    currentOption.getToken();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
46	[BUG]  [BUGGY]  String[]  arguments  =(String[])properties.get(argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  arguments  =(String[])properties.get(argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])properties.get(argument);	      String[]    arguments    =(String[])options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
47	[BUG]  [BUGGY]  String[]  arguments  =  options.get(argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  arguments  =  options.get(argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =  options.get(argument);	      String[]    arguments    =(String[])options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
48	[BUG]  [BUGGY]  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);	      Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
49	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken,  argument);	      Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
50	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);	      Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
51	[BUG]  [BUGGY]  handleArgument(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleArgument(argument,  currentOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  currentOption);	  handleArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
52	[BUG]  [BUGGY]  handleArgument(argument,  null);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleArgument(argument,  null);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  null);	  handleArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
53	[BUG]  [BUGGY]  handleArgument(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleArgument(argument,  expectedOpts);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  expectedOpts);	  handleArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
54	[BUG]  [BUGGY]  handleArgument(argument,  true);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleArgument(argument,  true);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  true);	  handleArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
55	[BUG]  [BUGGY]  String[]  arguments  =(String[])this.options.get(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  arguments  =(String[])this.options.get(argument,  currentOption);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])this.options.get(argument,  currentOption);	      String[]    arguments    =(String[])this.options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
56	[BUG]  [BUGGY]  String[]  arguments  =(String[])this.options.get(argument  +  1);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  arguments  =(String[])this.options.get(argument  +  1);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])this.options.get(argument  +  1);	      String[]    arguments    =(String[])this.options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
57	[BUG]  [BUGGY]  handleError(argument,  currentOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleError(argument,  currentOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  currentOption);	  handleError(argument);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
58	[BUG]  [BUGGY]  handleError(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleError(argument,  stopAtNonOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  stopAtNonOption);	  handleError(argument);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
59	[BUG]  [BUGGY]  handleError(argument,  null);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleError(argument,  null);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  null);	  handleError(argument);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
60	[BUG]  [BUGGY]  handleError(argument,  0);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleError(argument,  0);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleError(argument,  0);	  handleError(argument);    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
61	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  -  1]);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  -  1]);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  -  1]);	      Argument[]    arguments    =    getArguments(argument).toArray(new    String[arguments.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
62	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  +  1]);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  +  1]);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  +  1]);	      Argument[]    arguments    =    getArguments(argument).toArray(new    String[arguments.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
63	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments().toArray(new  String[arguments.size()  ]);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  arguments  =  getArguments().toArray(new  String[arguments.size()  ]);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments().toArray(new  String[arguments.size()  ]);	      Argument[]    arguments    =    getArguments(argument).toArray(new    String[arguments.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
64	[BUG]  [BUGGY]  handleMissingArgument(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingArgument(argument,  stopAtNonOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingArgument(argument,  stopAtNonOption);	  handleMissingArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
65	[BUG]  [BUGGY]  handleArgument(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleArgument(argument,  stopAtNonOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArgument(argument,  stopAtNonOption);	  handleMissingArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
66	[BUG]  [BUGGY]  handleArg(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleArg(argument,  stopAtNonOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleArg(argument,  stopAtNonOption);	  handleArgument(argument);    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
67	[BUG]  [BUGGY]  For(String  argument  :  arguments)  {  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  For(String  argument  :  arguments)  {  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  arguments)  {  }	      if(argument.length()    ==    0)    {    for(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
68	[BUG]  [BUGGY]  For(String  argument  :  arguments)  {  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  For(String  argument  :  arguments)  {  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	For(String  argument  :  arguments)  {	      if(argument.length()    ==    0)    {    for(String    argument    :    arguments)    {    }    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
69	[BUG]  [BUGGY]  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  currentToken  =  currentOption.getToken();  expectedOpts.add(argument);	      Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
70	[BUG]  [BUGGY]  String[]  arguments  =(String[])options.get(argument  -  1);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  arguments  =(String[])options.get(argument  -  1);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])options.get(argument  -  1);	      String[]    arguments    =(String[])options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
71	[BUG]  [BUGGY]  handleToken(argument,  blockAtNonOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleToken(argument,  blockAtNonOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  blockAtNonOption);	  handleToken(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
72	[BUG]  [BUGGY]  handleToken(argument,  options);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleToken(argument,  options);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleToken(argument,  options);	  handleToken(argument,    currentOption);    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
73	[BUG]  [BUGGY]  options.parse(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  options.parse(argument,  stopAtNonOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	options.parse(argument,  stopAtNonOption);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
74	[BUG]  [BUGGY]  options.parse(argument,  stopAtNonOption));  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  options.parse(argument,  stopAtNonOption));  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	options.parse(argument,  stopAtNonOption));	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
75	[BUG]  [BUGGY]  Option  cmd  =  options.parse(argument);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Option  cmd  =  options.parse(argument);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Option  cmd  =  options.parse(argument);	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
76	[BUG]  [BUGGY]  Argument[]  arguments  =  currentOption.getArgumentsArray();  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  arguments  =  currentOption.getArgumentsArray();  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  currentOption.getArgumentsArray();	      Argument[]    arguments    =    currentOption.getArguments();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
77	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  arguments  =  getArguments(argument,  stopAtNonOption);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument,  stopAtNonOption);	      Argument[]    arguments    =    getArguments(argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
78	[BUG]  [BUGGY]  handleMissingName(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  handleMissingName(argument,  stopAtNonOption);  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	handleMissingName(argument,  stopAtNonOption);	  handleMissingName(argument);    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
79	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  ]));  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  ]));  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument).toArray(new  String[arguments.size()  ]));	      Argument[]    arguments    =    getArguments(argument).toArray(new    String[arguments.size()    ]);    	non-compiled	[CE]  illegal  start  of  type	11	None	replace
80	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[parameter.size()  ];  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[parameter.size()  ];  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[parameter.size()  ];	      String[]    expectedOpts    =    new    String[expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
81	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument  currentToken  =  currentOption.getToken(argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken(argument);	      Argument    currentToken    =    currentOption.getToken();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
82	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.getToken()  +  argument;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument  currentToken  =  currentOption.getToken()  +  argument;  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.getToken()  +  argument;	      Argument    currentToken    =    currentOption.getToken();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
83	[BUG]  [BUGGY]  String  currentToken  =(String)options.get(argument  +  1);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String  currentToken  =(String)options.get(argument  +  1);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String  currentToken  =(String)options.get(argument  +  1);	      String    currentToken    =(String)options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
84	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments().split( "n ");  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  arguments  =  getArguments().split( "n ");  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments().split( "n ");	      Argument[]    arguments    =    getArguments();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
85	[BUG]  [BUGGY]  String[]  arguments  =(String[])this.options.get(argument  -  1);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  arguments  =(String[])this.options.get(argument  -  1);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  arguments  =(String[])this.options.get(argument  -  1);	      String[]    arguments    =(String[])this.options.get(argument);    	non-compiled	[CE]  illegal  start  of  type	9	None	replace
86	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(argument.length()  ==  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group);  }  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(argument.length()  ==  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
87	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  for(Option  group  :  options.getOptionGroups())  {  expectedOpts.add(group);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(argument.length()  ==  0)  {  for(Option  group  :  options.getOptionGroups())  {  expectedOpts.add(group);  }  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(argument.length()  ==  0)  {  for(Option  group  :  options.getOptionGroups())  {  expectedOpts.add(group);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
88	[BUG]  [BUGGY]  if(argument!=  null)  {  for(String  argument  :  arguments.split( "n "))  {  expectedOpts.add(argument);  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(argument!=  null)  {  for(String  argument  :  arguments.split( "n "))  {  expectedOpts.add(argument);  }  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(argument!=  null)  {  for(String  argument  :  arguments.split( "n "))  {  expectedOpts.add(argument);  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
89	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group.getValue(argument));  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(argument.length()  ==  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group.getValue(argument));  }  [BUGGY]    }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(argument.length()  ==  0)  {  for(Option  group  :  options.values())  {  expectedOpts.add(group.getValue(argument));  }	      	non-compiled	[CE]  illegal  start  of  type	5	None	replace
90	[BUG]  [BUGGY]  if(argument!=  null)  {  for(String  argument  :  arguments.length)  {  continue;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(argument!=  null)  {  for(String  argument  :  arguments.length)  {  continue;  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(argument!=  null)  {  for(String  argument  :  arguments.length)  {  continue;  }	      if(argument!=    null)    {    for(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
91	[BUG]  [BUGGY]  if(currentToken!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(currentToken!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(currentToken!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }	      Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
92	[BUG]  [BUGGY]  if(currentToken!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(currentToken!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(currentToken!=  null)  {  Argument  currentToken  =  currentOption.getToken();  expectedOpts.add(currentToken);  }  else  {  expectedOpts.add(argument);  }	      Argument    currentToken    =    currentOption.getToken();    expectedOpts.add(currentToken);    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
93	[BUG]  [BUGGY]  Argument[]  arguments  =  getArguments(argument.toLowerCase());  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  arguments  =  getArguments(argument.toLowerCase());  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  getArguments(argument.toLowerCase());	      Argument[]    arguments    =    getArguments(argument);    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
94	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  for(String  argument  :  arguments.trim())  {  continue;  }  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(argument.length()  ==  0)  {  for(String  argument  :  arguments.trim())  {  continue;  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(argument.length()  ==  0)  {  for(String  argument  :  arguments.trim())  {  continue;  }	      if(argument.length()    ==    0)    {    for(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
95	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  for(String  argument  :  arguments.length)  {  continue;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(argument.length()  ==  0)  {  for(String  argument  :  arguments.length)  {  continue;  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(argument.length()  ==  0)  {  for(String  argument  :  arguments.length)  {  continue;  }	      if(argument.length()    ==    0)    {    for(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
96	[BUG]  [BUGGY]  if(argument.length()  ==  0)  {  for(String  argument  :  arguments.toString())  {  continue;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  if(argument.length()  ==  0)  {  for(String  argument  :  arguments.toString())  {  continue;  }  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	if(argument.length()  ==  0)  {  for(String  argument  :  arguments.toString())  {  continue;  }	      if(argument.length()    ==    0)    {    for(String    argument    :    arguments)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
97	[BUG]  [BUGGY]  Argument[]  arguments  =  option.getArguments();  [CE]  illegal  start  of  type  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument[]  arguments  =  option.getArguments();  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument[]  arguments  =  option.getArguments();	      Argument[]    arguments    =    currentOption.getArguments();    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
98	[BUG]  [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument);  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  Argument  currentToken  =  currentOption.tokenTo(argument);  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	Argument  currentToken  =  currentOption.tokenTo(argument);	      Argument    currentToken    =    currentOption.getToken();    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
99	[BUG]  [BUGGY]  String[]  expectedOpts  =  new  String[allOpts.size()  ];  [CE]  illegal  start  of  type  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    if  (arguments  !=  null)  {  for  (String  argument  :  arguments)  {    [BUGGY]  String[]  expectedOpts  =  new  String[allOpts.size()  ];  [BUGGY]    handleToken(argument);  }  }  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	120	120	1	replace	String[]  expectedOpts  =  new  String[allOpts.size()  ];	      String[]    expectedOpts    =    new    String[expectedOpts.size()    ];    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
