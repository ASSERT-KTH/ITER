projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()==null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()==null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()==null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=cmd;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=option;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionscurrentOption=options.getRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroups();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getRequiredOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getSelectedOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options!=null){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105java.lang.AssertionError:expectednull;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this.options;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getOptions()==null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getOptions()!=null){expectedOpts=newArrayList(options.getOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getRequiredOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getSelectedOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getImplicitRequiredOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.clone();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.nextToken();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments[0]);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments[0],arguments[1]);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options!=null){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105java.lang.OptionexpectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Option[]expectedOpts=options.getOptions();for(OptioncurrentOption:options.getOptionGroups()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroups(),skipParsing;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(false);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=cmd.options;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=cmd.cloneTree();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optiongroup=options.getGroups();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optionoption=options.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=newOption(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=getOption(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(!skipParsing){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()==null){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options==null){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()==null){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getOptionGroups()==null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getOptionGroups()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getOptionGroups();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(options.getOptionGroups());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105java.lang.OptioncurrentOption=null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105expectedOpts=newArrayList(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupcurrentOption=options.getOptionGroups();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getOptionGroup(options.getGroups());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupcurrentOption=options.getRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(skipParsing){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argumentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(skipParsing){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(!skipParsing){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getToken();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=newOptionGroup(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this.cmd;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this.defaultParser;
