projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()==null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()==null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()==null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=cmd;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=option;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionscurrentOption=options.getRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroups();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getRequiredOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getSelectedOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options!=null){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105java.lang.AssertionError:expectednull;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this.options;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getOptions()==null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getOptions()!=null){expectedOpts=newArrayList(options.getOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getRequiredOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getSelectedOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getImplicitRequiredOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.clone();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.nextToken();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments[0]);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments[0],arguments[1]);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options!=null){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105java.lang.OptionexpectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Option[]expectedOpts=options.getOptions();for(OptioncurrentOption:options.getOptionGroups()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroups(),skipParsing;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(false);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=cmd.options;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=cmd.cloneTree();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optiongroup=options.getGroups();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optionoption=options.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=newOption(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=getOption(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(!skipParsing){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()==null){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options==null){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()==null){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getOptionGroups()==null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getOptionGroups()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getOptionGroups();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(options.getOptionGroups());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105java.lang.OptioncurrentOption=null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105expectedOpts=newArrayList(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupcurrentOption=options.getOptionGroups();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getOptionGroup(options.getGroups());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupcurrentOption=options.getRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(skipParsing){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argumentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(skipParsing){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(!skipParsing){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getToken();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=newOptionGroup(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this.cmd;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this.defaultParser;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options==null){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105expectedOpts=newArrayList(options.getOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments[0],expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments[0],skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105||options.getOptions()!=null){expectedOpts=newArrayList(options.getOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getSelectedOption(true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getSelectedOption(null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optionoption=options.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optionoption=options.getOption(arguments);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optionoption=options.getOption(defaultToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){if(skipParsing){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption();expectedOpts=newArrayList(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105||options.getOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105||options.getOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getOption(),skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getOption(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){OptionexpectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()==null){OptionexpectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionexpectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(!skipParsing){OptionexpectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupcurrentOption=options.getRequiredOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupcurrentOption=options.getRequiredOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupcurrentOption=options.getRequiredOption(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){currentOption=newOptionGroup(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){currentOption=newOptionGroup(options.getRequiredOptions());}else{expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=newOptionGroup(options.getRequiredOptions(),options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this.defaultToken;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this.defaultParser.options;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=getOption(options.getRequiredOptions(),options.getTokens());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=getOption(options.getRequiredOptions(),options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=getOption(options.getSelectedOption());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getOption(argument,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getOption(argument,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getOption(argument,this.skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argumentOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getPreparedOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=true;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optiongroup=options.getGroup(true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(defaultToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argumentToken,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argumentToken,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments,this.stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments,this.skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getRequiredOption(argument,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getRequiredOption(argument,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getRequiredOption(argument,this.skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(options.getRequiredOptions(),options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(options.getSelectedOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(options.getRequiredOptions(),true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Option[]expectedOpts=options.getRequiredOptions();for(OptioncurrentOption:options.getOptionGroups()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getOption(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getOption(),this.skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this.options.clone();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,this.stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,this.skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,skipParsing,expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(this.options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getOptionGroup(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getOptionGroup(options.getGroups(),options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getOptionGroup(options.getGroups(),options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroups(),this.stopAtNonOption;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroups(),this.skipParsing;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroups(),stopAtNonOption;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroups(),currentToken;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(!skipParsing){AssertionError:expectednull;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105java.lang.AssertionError:expected;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){AssertionError:expectednull;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getImplicitParsingOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getImplicitRequiredOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getImplicitRequiredOption(),expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,this);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,null,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=option.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getOptionGroup(),skipParsing;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=option.getToken();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getToken()+1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getToken(),arguments;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Option[]expectedOpts=options.getOptions();for(OptioncurrentOption:options.getRequiredOptions()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){Option[]expectedOpts=options.getOptions();for(OptioncurrentOption:options.getOptionGroups()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()==null){Option[]expectedOpts=options.getOptions();for(OptioncurrentOption:options.getOptionGroups()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments[0],arguments[1],skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments[0],arguments[1],expectedOpts);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments[0],arguments[1]+1);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){if(!skipParsing){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=option.getSelectedOption();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getSelectedOption()+1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,expectedOpts,skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,expectedOpts,0);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,expectedOpts,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,expectedOpts,true);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getSelectedOptionGroups();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOptions();expectedOpts=newArrayList(options.getRequiredOptions());for(Optiongroup:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105java.lang.OptionexpectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){cmd.setSelected(n
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){cmd.setSelected(
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=newOption(options.getRequiredOptions(),options.getTokens());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=newOption(options.getRequiredOptions(),options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=newOption(options.getRequiredOptions(),options.getOpts());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.clone():null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=cmd.options();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(!skipParsing){OptioncurrentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){OptioncurrentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()==null){OptioncurrentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(currentOption!=null){OptioncurrentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(options.getOptionGroups(),options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(options.getSelectedOptionGroups());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this.cmd.options;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optiongroup=options.getGroups(),skipParsing;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optiongroup=options.getGroups(),skipParsing);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optiongroup=options.getOptionGroups();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupcurrentOption=options.getOptionGroup(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupcurrentOption=options.getOptionGroup(this.options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this.options.nextToken();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.nextToken()+1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getOption(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=cmd.clone();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=cmd.clonePath();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=cmd.cloneParser();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){if(!skipParsing){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=cmd.options||(cmd.options!=null&&cmd.options.getOptions().length>0);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=cmd.options||(cmd.options!=null&&cmd.options.getRequiredOptions().length>0);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optiongroup=options.getGroup(options.getRequiredOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optiongroup=options.getGroup(options.getOptionGroups());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105options=options.getRequiredOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getRequiredOption(argument,0);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this.defaultParser+1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=getOption(options.getOptionGroups());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=getOption(options.getOptionGroup());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=getOption(options.getOptionToken());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments[1]);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){expectOpts=newArrayList(options.getOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments[0],arguments[1],stopAtNonOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments[0],arguments[1])+1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getImplicitParsing();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(expectedToken!=null){AssertionError:expectednull;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getOptions()!=null){expectedOpts=newArrayList(options.getOptions());for(OptioncurrentOption:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){cmd.setSelected(null);}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroups(),cmd;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(defaultOption);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(this);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getOptionGroups();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getOption(this.defaultToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(!skipParsing){OptioncurrentOption=null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105java.lang.OptioncurrentOption=options;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=cmd.getOption(null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getOption(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.nextToken()-1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getOptionOpt();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){this.options=options;this.stopAtNonOption=stopAtNonOption;skippeParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=newOption(options.getOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=newOption(options.getOptionGroups());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=newOption(options.getRequiredOptions(),options.getOptionGroups());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this.cmd?null:this.cmd;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this.cmd&&this.options.getRequiredOptions().length>0;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optionoption=options.getOption(argument).getOption(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optionoption=options.getOption(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optionoption=options.getOptionGroup(currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getToken()-1;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupcurrentOption=options.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getOptionToken();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getOptionGroups();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=newOptionGroup(options.getOptions());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=newOptionGroup(options.getOptionGroups());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=newOptionGroup(options.getRequiredOptions(),options.getOptionGroups());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=newOptionGroup(options.getOptionToken());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getSelectedOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getSelected(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optionoption=options.getOptionGroup(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getOptionGroups()!=null||options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments[0],arguments[1],null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getSelectedOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null){expectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){cmd.setSelected(null
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,expectedOpts,false);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this.defaultParser.nextToken();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this.defaultParser.parse();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(skipParsing){OptionexpectedOpts=newArrayList(options.getRequiredOptions());for(OptioncurrentOption:options.getOptionGroups()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=cmd.options||!skipParsing;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getOptionGroups()!=null){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(false,cmd);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(expected<null){AssertionError:expectednull;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getOption(this);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getOptionGroups()==null){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=true;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Option[]expectedOpts=options.getOptions();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Option[]expectedOpts=options.getAllOptions();for(OptioncurrentOption:options.getOptionGroups()){currentOption=null;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroups(),this.options;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getRequiredOption(argument,null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getOptionGroup(null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=options.getCmd();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(options.getOptionGroup());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getRequiredOptions()!=null||options.getRequiredOptions().length==0){this.options=options;this.stopAtNonOption=stopAtNonOption;skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getOption(argument,this.options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=null;
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105expectedOpts=newArrayList(options.getOptionGroups());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options.getOptionGroups()!=null){expectOpts=newArrayList(options.getRequiredOptions());}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments,arguments);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(arguments,this.skipped);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupcurrentOption=options.getOptionGroup(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupcurrentOption=options.getOptionGroup(options);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,currentToken);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getImplicitRequiredOption(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105if(options!=null){this.options=newOptionGroup();this.stopAtNonOption=stopAtNonOption;skipParsing=false;}
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optiongroup=options.getOptionGroup(options.getGroups());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105Optiongroup=options.getOptionGroup(null);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=getOption(options.getRequiredOptions(),options.getOpts());
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentToken=options.getOptionGroup();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=this.cmd.cloneTree();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105currentOption=cmd.getTree();
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptionGroupgroup=options.getGroup(argument);
projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java105OptioncurrentOption=options.getRequiredOption(argument,null,expectedOpts);
