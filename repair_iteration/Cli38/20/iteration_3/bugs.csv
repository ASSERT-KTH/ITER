bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(options  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  true;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  true;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  true;  }	  if(options!=    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    skipParsing    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	25	None	replace
2	[BUG]  [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptions());  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptions());  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	expectedOpts  =  new  ArrayList(options.getOptions());	  expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
3	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  expectedOpts);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments[0],  expectedOpts);	  Option    currentOption    =    options.getRequiredOption(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
4	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  skipParsing);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  skipParsing);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments[0],  skipParsing);	  Option    currentOption    =    options.getRequiredOption(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
5	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }	  if(options.getOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getOptions());    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
6	[BUG]  [BUGGY]  ||  options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  ||  options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	||  options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  }	  if(options.getOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getOptions());    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
7	[BUG]  [BUGGY]  Option  currentOption  =  options.getSelectedOption(true);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getSelectedOption(true);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getSelectedOption(true);	  Option    currentOption    =    options.getSelectedOption();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
8	[BUG]  [BUGGY]  Option  currentOption  =  options.getSelectedOption(null);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getSelectedOption(null);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getSelectedOption(null);	  Option    currentOption    =    options.getSelectedOption();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
9	[BUG]  [BUGGY]  currentOption  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  options.getOptions();  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  options.getOptions();	  currentOption    =    options.null;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
10	[BUG]  [BUGGY]  Option  option  =  options.getOption(argument);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  option  =  options.getOption(argument);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  option  =  options.getOption(argument);	  Option    option    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
11	[BUG]  [BUGGY]  Option  option  =  options.getOption(arguments);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  option  =  options.getOption(arguments);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  option  =  options.getOption(arguments);	  Option    option    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
12	[BUG]  [BUGGY]  Option  option  =  options.getOption(defaultToken);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  option  =  options.getOption(defaultToken);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  option  =  options.getOption(defaultToken);	  Option    option    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
13	[BUG]  [BUGGY]  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;	  if(skipParsing)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
14	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()!=  null)  {  if(skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  }	  if(skipParsing)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	60	None	replace
15	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());	  if(options.getOptionGroups()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
16	[BUG]  [BUGGY]  ||  options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  ||  options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	||  options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  if(options.getOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
17	[BUG]  [BUGGY]  ||  options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  ||  options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	||  options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());	  if(options.getOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
18	[BUG]  [BUGGY]  currentOption  =  options.getOption(),  skipParsing);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  options.getOption(),  skipParsing);  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  options.getOption(),  skipParsing);	  currentOption    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
19	[BUG]  [BUGGY]  currentOption  =  options.getOption(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  options.getOption(options.getRequiredOptions());  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  options.getOption(options.getRequiredOptions());	  currentOption    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
20	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()!=  null)  {  Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }	  java.lang.Option    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    currentOption    :    options.getOptionGroups())    {    currentOption    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
21	[BUG]  [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()  ==  null)  {  Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }	  java.lang.Option    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    currentOption    :    options.getOptionGroups())    {    currentOption    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
22	[BUG]  [BUGGY]  Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }	  java.lang.Option    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    currentOption    :    options.getOptionGroups())    {    currentOption    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
23	[BUG]  [BUGGY]  if(!skipParsing)  {  Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(!skipParsing)  {  Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(!skipParsing)  {  Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }	  java.lang.Option    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    currentOption    :    options.getOptionGroups())    {    currentOption    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
24	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getRequiredOption();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  currentOption  =  options.getRequiredOption();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  currentOption  =  options.getRequiredOption();	  OptionGroup    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
25	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getRequiredOption(argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  currentOption  =  options.getRequiredOption(argument);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  currentOption  =  options.getRequiredOption(argument);	  OptionGroup    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
26	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getRequiredOption(options);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  currentOption  =  options.getRequiredOption(options);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  currentOption  =  options.getRequiredOption(options);	  OptionGroup    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
27	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  currentOption  =  new  OptionGroup(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  currentOption  =  new  OptionGroup(options.getRequiredOptions());  }  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()!=  null)  {  currentOption  =  new  OptionGroup(options.getRequiredOptions());  }	  currentOption    =    new    OptionGroup(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
28	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  currentOption  =  new  OptionGroup(options.getRequiredOptions());  }  else  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  currentOption  =  new  OptionGroup(options.getRequiredOptions());  }  else  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()!=  null)  {  currentOption  =  new  OptionGroup(options.getRequiredOptions());  }  else  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  currentOption    =    new    OptionGroup(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
29	[BUG]  [BUGGY]  currentOption  =  new  OptionGroup(options.getRequiredOptions(),  options);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  new  OptionGroup(options.getRequiredOptions(),  options);  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  new  OptionGroup(options.getRequiredOptions(),  options);	  currentOption    =    new    OptionGroup(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
30	[BUG]  [BUGGY]  currentOption  =  this.defaultToken;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  this.defaultToken;  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  this.defaultToken;	  currentOption    =    this.defaultParser;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
31	[BUG]  [BUGGY]  currentOption  =  this.defaultParser.options;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  this.defaultParser.options;  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  this.defaultParser.options;	  currentOption    =    this.defaultParser;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
32	[BUG]  [BUGGY]  currentOption  =  getOption(options.getRequiredOptions(),  options.getTokens());  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  getOption(options.getRequiredOptions(),  options.getTokens());  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  getOption(options.getRequiredOptions(),  options.getTokens());	  currentOption    =    getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
33	[BUG]  [BUGGY]  currentOption  =  getOption(options.getRequiredOptions(),  options);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  getOption(options.getRequiredOptions(),  options);  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  getOption(options.getRequiredOptions(),  options);	  currentOption    =    getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
34	[BUG]  [BUGGY]  currentOption  =  getOption(options.getSelectedOption());  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  getOption(options.getSelectedOption());  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  getOption(options.getSelectedOption());	  currentOption    =    getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
35	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(argument,  skipParsing);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getOption(argument,  skipParsing);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getOption(argument,  skipParsing);	  Option    currentToken    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
36	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getOption(argument,  expectedOpts);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getOption(argument,  expectedOpts);	  Option    currentToken    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
37	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(argument,  this.skipParsing);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getOption(argument,  this.skipParsing);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getOption(argument,  this.skipParsing);	  Option    currentToken    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
38	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentOpts);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argumentOpts);	  Option    currentOption    =    options.getRequiredOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
39	[BUG]  [BUGGY]  Option  currentOption  =  options.getPreparedOption(argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getPreparedOption(argument);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getPreparedOption(argument);	  Option    currentOption    =    options.getRequiredOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
40	[BUG]  [BUGGY]  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  true;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  true;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  true;	  if(skipParsing)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    skipParsing    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	57	None	replace
41	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(true);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroup(true);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroup(true);	  OptionGroup    group    =    options.getGroup(false);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
42	[BUG]  [BUGGY]  Option  group  =  options.getGroup(true);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  group  =  options.getGroup(true);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  group  =  options.getGroup(true);	  OptionGroup    group    =    options.getGroup(false);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
43	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(currentToken);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroup(currentToken);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroup(currentToken);	  OptionGroup    group    =    options.getGroup(null);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
44	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(defaultToken);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroup(defaultToken);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroup(defaultToken);	  OptionGroup    group    =    options.getGroup(null);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
45	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroup(options);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroup(options);	  OptionGroup    group    =    options.getGroup(null);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
46	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  skipParsing);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  skipParsing);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argumentToken,  skipParsing);	  Option    currentOption    =    options.getRequiredOption(argumentToken);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
47	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argumentToken,  expectedOpts);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argumentToken,  expectedOpts);	  Option    currentOption    =    options.getRequiredOption(argumentToken);    	non-compiled	[CE]  illegal  start  of  type	58	None	replace
48	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  stopAtNonOption);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  stopAtNonOption);	  Option    currentOption    =    options.getRequiredOption(arguments,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
49	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  this.stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  this.stopAtNonOption);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  this.stopAtNonOption);	  Option    currentOption    =    options.getRequiredOption(arguments,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
50	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  this.skipParsing);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  this.skipParsing);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  this.skipParsing);	  Option    currentOption    =    options.getRequiredOption(arguments,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
51	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  null);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  null);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  null);	  Option    currentOption    =    options.getRequiredOption(arguments,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
52	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument,  skipParsing);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument,  skipParsing);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getRequiredOption(argument,  skipParsing);	  Option    currentToken    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
53	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument,  expectedOpts);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getRequiredOption(argument,  expectedOpts);	  Option    currentToken    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
54	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument,  this.skipParsing);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument,  this.skipParsing);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getRequiredOption(argument,  this.skipParsing);	  Option    currentToken    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
55	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options.getRequiredOptions(),  options);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroup(options.getRequiredOptions(),  options);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroup(options.getRequiredOptions(),  options);	  OptionGroup    group    =    options.getGroup(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
56	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options.getSelectedOptions());  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroup(options.getSelectedOptions());  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroup(options.getSelectedOptions());	  OptionGroup    group    =    options.getGroup(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
57	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options.getRequiredOptions(),  true);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroup(options.getRequiredOptions(),  true);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroup(options.getRequiredOptions(),  true);	  OptionGroup    group    =    options.getGroup(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
58	[BUG]  [BUGGY]  Option[]  expectedOpts  =  options.getRequiredOptions();  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option[]  expectedOpts  =  options.getRequiredOptions();  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option[]  expectedOpts  =  options.getRequiredOptions();  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }	  if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    currentOption    :    options.getOptionGroups())    {    currentOption    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	27	None	replace
59	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getOption(options.getRequiredOptions());  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getOption(options.getRequiredOptions());	  Option    currentToken    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
60	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(),  this.skipParsing);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getOption(),  this.skipParsing);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getOption(),  this.skipParsing);	  Option    currentToken    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
61	[BUG]  [BUGGY]  Option  currentToken  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getOptions();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getOptions();	  Option    currentToken    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
62	[BUG]  [BUGGY]  currentOption  =  this.options.clone();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  this.options.clone();  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  this.options.clone();	  currentOption    =    this.options;    	non-compiled	[CE]  illegal  start  of  type	7	None	replace
63	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  this.stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  this.stopAtNonOption);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  this.stopAtNonOption);	  Option    currentOption    =    options.getRequiredOption(argument,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
64	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  this.skipParsing);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  this.skipParsing);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  this.skipParsing);	  Option    currentOption    =    options.getRequiredOption(argument,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
65	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  stopAtNonOption);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  stopAtNonOption);	  Option    currentOption    =    options.getRequiredOption(argument,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
66	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  skipParsing,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  skipParsing,  expectedOpts);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  skipParsing,  expectedOpts);	  Option    currentOption    =    options.getRequiredOption(argument,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	22	None	replace
67	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(this.options);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(this.options);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(this.options);	  Option    currentOption    =    options.getRequiredOption(options);    	non-compiled	[CE]  illegal  start  of  type	24	None	replace
68	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options.getRequiredOptions());  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getOptionGroup(options.getRequiredOptions());	  OptionGroup    group    =    options.getOptionGroup(options.getGroups());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
69	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options.getGroups(),  options);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options.getGroups(),  options);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getOptionGroup(options.getGroups(),  options);	  OptionGroup    group    =    options.getOptionGroup(options.getGroups());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
70	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options.getGroups(),  options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(options.getGroups(),  options.getRequiredOptions());  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getOptionGroup(options.getGroups(),  options.getRequiredOptions());	  OptionGroup    group    =    options.getOptionGroup(options.getGroups());    	non-compiled	[CE]  illegal  start  of  type	55	None	replace
71	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroups(),  this.stopAtNonOption;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroups(),  this.stopAtNonOption;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroups(),  this.stopAtNonOption;	  OptionGroup    group    =    options.getGroups(),    skipParsing;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
72	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroups(),  this.skipParsing;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroups(),  this.skipParsing;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroups(),  this.skipParsing;	  OptionGroup    group    =    options.getGroups(),    skipParsing;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
73	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroups(),  stopAtNonOption;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroups(),  stopAtNonOption;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroups(),  stopAtNonOption;	  OptionGroup    group    =    options.getGroups(),    skipParsing;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
74	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroups(),  currentToken;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroups(),  currentToken;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroups(),  currentToken;	  OptionGroup    group    =    options.getGroups(),    skipParsing;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
75	[BUG]  [BUGGY]  if(!skipParsing)  {  AssertionError:  expected  null;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(!skipParsing)  {  AssertionError:  expected  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(!skipParsing)  {  AssertionError:  expected  null;  }	  java.lang.AssertionError:    expected    null;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
76	[BUG]  [BUGGY]  java.lang.AssertionError:  expected;  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  java.lang.AssertionError:  expected;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	java.lang.AssertionError:  expected;	  java.lang.AssertionError:    expected    null;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
77	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  AssertionError:  expected  null;  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  AssertionError:  expected  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()!=  null)  {  AssertionError:  expected  null;  }	  java.lang.AssertionError:    expected    null;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
78	[BUG]  [BUGGY]  Option  currentToken  =  options.getImplicitParsingOption();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getImplicitParsingOption();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getImplicitParsingOption();	  Option    currentToken    =    options.getImplicitRequiredOption();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
79	[BUG]  [BUGGY]  Option  currentToken  =  options.getImplicitRequiredOption(argument);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getImplicitRequiredOption(argument);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getImplicitRequiredOption(argument);	  Option    currentToken    =    options.getImplicitRequiredOption();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
80	[BUG]  [BUGGY]  Option  currentToken  =  options.getImplicitRequiredOption(),  expectedOpts);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getImplicitRequiredOption(),  expectedOpts);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getImplicitRequiredOption(),  expectedOpts);	  Option    currentToken    =    options.getImplicitRequiredOption();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
81	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  this);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  this);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  this);	  Option    currentOption    =    options.getRequiredOption(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
82	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  null,  skipParsing);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  null,  skipParsing);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  null,  skipParsing);	  Option    currentOption    =    options.getRequiredOption(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
83	[BUG]  [BUGGY]  currentOption  =  option.getOptionGroup();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  option.getOptionGroup();  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  option.getOptionGroup();	  currentOption    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
84	[BUG]  [BUGGY]  currentOption  =  options.getOptionGroup(),  skipParsing;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  options.getOptionGroup(),  skipParsing;  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  options.getOptionGroup(),  skipParsing;	  currentOption    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
85	[BUG]  [BUGGY]  currentOption  =  option.getToken();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  option.getToken();  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  option.getToken();	  currentOption    =    options.getToken();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
86	[BUG]  [BUGGY]  currentOption  =  options.getToken()  +  1;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  options.getToken()  +  1;  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  options.getToken()  +  1;	  currentOption    =    options.getToken();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
87	[BUG]  [BUGGY]  currentOption  =  options.getToken(),  arguments;  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  options.getToken(),  arguments;  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  options.getToken(),  arguments;	  currentOption    =    options.getToken();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
88	[BUG]  [BUGGY]  Option[]  expectedOpts  =  options.getOptions();  for(Option  currentOption  :  options.getRequiredOptions())  {  currentOption  =  null;  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option[]  expectedOpts  =  options.getOptions();  for(Option  currentOption  :  options.getRequiredOptions())  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option[]  expectedOpts  =  options.getOptions();  for(Option  currentOption  :  options.getRequiredOptions())  {  currentOption  =  null;  }	  Option[]    expectedOpts    =    options.getOptions();    for(Option    currentOption    :    options.getOptionGroups())    {    currentOption    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
89	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  Option[]  expectedOpts  =  options.getOptions();  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  Option[]  expectedOpts  =  options.getOptions();  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()!=  null)  {  Option[]  expectedOpts  =  options.getOptions();  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }	  Option[]    expectedOpts    =    options.getOptions();    for(Option    currentOption    :    options.getOptionGroups())    {    currentOption    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
90	[BUG]  [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  Option[]  expectedOpts  =  options.getOptions();  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  Option[]  expectedOpts  =  options.getOptions();  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()  ==  null)  {  Option[]  expectedOpts  =  options.getOptions();  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }	  Option[]    expectedOpts    =    options.getOptions();    for(Option    currentOption    :    options.getOptionGroups())    {    currentOption    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
91	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1],  skipParsing);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1],  skipParsing);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1],  skipParsing);	  Option    currentOption    =    options.getRequiredOption(arguments[0],    arguments[1]);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
92	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1],  expectedOpts);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1],  expectedOpts);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1],  expectedOpts);	  Option    currentOption    =    options.getRequiredOption(arguments[0],    arguments[1]);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
93	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1]  +  1);  [CE]  illegal  start  of  type  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1]  +  1);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1]  +  1);	  Option    currentOption    =    options.getRequiredOption(arguments[0],    arguments[1]);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
94	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  true;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  true;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  true;  }	  if(!skipParsing)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    skipParsing    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	40	None	replace
95	[BUG]  [BUGGY]  Option  currentToken  =  option.getSelectedOption();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  option.getSelectedOption();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  option.getSelectedOption();	  Option    currentToken    =    options.getSelectedOption();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
96	[BUG]  [BUGGY]  Option  currentToken  =  options.getSelectedOption()  +  1;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getSelectedOption()  +  1;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getSelectedOption()  +  1;	  Option    currentToken    =    options.getSelectedOption();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
97	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts,  skipParsing);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts,  skipParsing);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts,  skipParsing);	  Option    currentOption    =    options.getRequiredOption(argument,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
98	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts,  0);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts,  0);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts,  0);	  Option    currentOption    =    options.getRequiredOption(argument,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
99	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts,  null);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts,  null);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts,  null);	  Option    currentOption    =    options.getRequiredOption(argument,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
100	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts,  true);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts,  true);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts,  true);	  Option    currentOption    =    options.getRequiredOption(argument,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
101	[BUG]  [BUGGY]  OptionGroup  group  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getRequiredOptions();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getRequiredOptions();	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
102	[BUG]  [BUGGY]  OptionGroup  group  =  options.getSelectedOptionGroups();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getSelectedOptionGroups();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getSelectedOptionGroups();	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
103	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOptions();  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  group  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    group    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	4	None	replace
104	[BUG]  [BUGGY]  java.lang.Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  java.lang.Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	java.lang.Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    currentOption    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
105	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(n  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(n  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(n	  if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    currentOption    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
106	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(	  if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    currentOption    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
107	[BUG]  [BUGGY]  currentOption  =  new  Option(options.getRequiredOptions(),  options.getTokens());  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  new  Option(options.getRequiredOptions(),  options.getTokens());  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  new  Option(options.getRequiredOptions(),  options.getTokens());	  currentOption    =    new    Option(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
108	[BUG]  [BUGGY]  currentOption  =  new  Option(options.getRequiredOptions(),  options);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  new  Option(options.getRequiredOptions(),  options);  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  new  Option(options.getRequiredOptions(),  options);	  currentOption    =    new    Option(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
109	[BUG]  [BUGGY]  currentOption  =  new  Option(options.getRequiredOptions(),  options.getOpts());  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  new  Option(options.getRequiredOptions(),  options.getOpts());  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  new  Option(options.getRequiredOptions(),  options.getOpts());	  currentOption    =    new    Option(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
110	[BUG]  [BUGGY]  currentOption  =  options.clone()  :  null;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  options.clone()  :  null;  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  options.clone()  :  null;	  currentOption    =    options.clone();    	non-compiled	[CE]  illegal  start  of  type	16	None	replace
111	[BUG]  [BUGGY]  currentOption  =  cmd.options();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  cmd.options();  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  cmd.options();	  currentOption    =    cmd.options;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
112	[BUG]  [BUGGY]  if(!skipParsing)  {  Option  currentOption  =  null;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(!skipParsing)  {  Option  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(!skipParsing)  {  Option  currentOption  =  null;  }	  java.lang.Option    currentOption    =    null;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
113	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  Option  currentOption  =  null;  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  Option  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()!=  null)  {  Option  currentOption  =  null;  }	  java.lang.Option    currentOption    =    null;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
114	[BUG]  [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  Option  currentOption  =  null;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()  ==  null)  {  Option  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()  ==  null)  {  Option  currentOption  =  null;  }	  java.lang.Option    currentOption    =    null;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
115	[BUG]  [BUGGY]  if(currentOption!=  null)  {  Option  currentOption  =  null;  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(currentOption!=  null)  {  Option  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(currentOption!=  null)  {  Option  currentOption  =  null;  }	  java.lang.Option    currentOption    =    null;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
116	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options.getOptionGroups(),  options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroup(options.getOptionGroups(),  options.getRequiredOptions());  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroup(options.getOptionGroups(),  options.getRequiredOptions());	  OptionGroup    group    =    options.getGroup(options.getOptionGroups());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
117	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options.getSelectedOptionGroups());  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroup(options.getSelectedOptionGroups());  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroup(options.getSelectedOptionGroups());	  OptionGroup    group    =    options.getGroup(options.getOptionGroups());    	non-compiled	[CE]  illegal  start  of  type	49	None	replace
118	[BUG]  [BUGGY]  currentOption  =  this.cmd.options;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  this.cmd.options;  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  this.cmd.options;	  currentOption    =    this.cmd;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
119	[BUG]  [BUGGY]  Option  group  =  options.getGroups(),  skipParsing;  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  group  =  options.getGroups(),  skipParsing;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  group  =  options.getGroups(),  skipParsing;	  Option    group    =    options.getGroups();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
120	[BUG]  [BUGGY]  Option  group  =  options.getGroups(),  skipParsing);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  group  =  options.getGroups(),  skipParsing);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  group  =  options.getGroups(),  skipParsing);	  Option    group    =    options.getGroups();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
121	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  group  =  options.getOptionGroups();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  group  =  options.getOptionGroups();	  Option    group    =    options.getGroups();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
122	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(options.getRequiredOptions());  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  currentOption  =  options.getOptionGroup(options.getRequiredOptions());	  OptionGroup    currentOption    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
123	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(this.options);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(this.options);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  currentOption  =  options.getOptionGroup(this.options);	  OptionGroup    currentOption    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
124	[BUG]  [BUGGY]  currentOption  =  this.options.nextToken();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  this.options.nextToken();  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  this.options.nextToken();	  currentOption    =    options.nextToken();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
125	[BUG]  [BUGGY]  currentOption  =  options.nextToken()  +  1;  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  options.nextToken()  +  1;  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  options.nextToken()  +  1;	  currentOption    =    options.nextToken();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
126	[BUG]  [BUGGY]  Option  currentOption  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getOptionGroup();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getOptionGroup();	  Option    currentOption    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
127	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getOption(options.getRequiredOptions());  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getOption(options.getRequiredOptions());	  Option    currentOption    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
128	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getOption(currentToken);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getOption(currentToken);	  Option    currentOption    =    options.getOptions();    	non-compiled	[CE]  illegal  start  of  type	37	None	replace
129	[BUG]  [BUGGY]  currentOption  =  cmd.clone();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  cmd.clone();  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  cmd.clone();	  currentOption    =    cmd.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
130	[BUG]  [BUGGY]  currentOption  =  cmd.clonePath();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  cmd.clonePath();  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  cmd.clonePath();	  currentOption    =    cmd.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
131	[BUG]  [BUGGY]  currentOption  =  cmd.cloneParser();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  cmd.cloneParser();  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  cmd.cloneParser();	  currentOption    =    cmd.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
132	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()!=  null)  {  if(!skipParsing)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  }	  if(!skipParsing)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	61	None	replace
133	[BUG]  [BUGGY]  currentOption  =  cmd.options  ||(cmd.options!=  null  &&  cmd.options.getOptions().length  >  0);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  cmd.options  ||(cmd.options!=  null  &&  cmd.options.getOptions().length  >  0);  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  cmd.options  ||(cmd.options!=  null  &&  cmd.options.getOptions().length  >  0);	  currentOption    =    cmd.options;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
134	[BUG]  [BUGGY]  currentOption  =  cmd.options  ||(cmd.options!=  null  &&  cmd.options.getRequiredOptions().length  >  0);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  cmd.options  ||(cmd.options!=  null  &&  cmd.options.getRequiredOptions().length  >  0);  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  cmd.options  ||(cmd.options!=  null  &&  cmd.options.getRequiredOptions().length  >  0);	  currentOption    =    cmd.options;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
135	[BUG]  [BUGGY]  Option  group  =  options.getGroup(options.getRequiredOptions());  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  group  =  options.getGroup(options.getRequiredOptions());  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  group  =  options.getGroup(options.getRequiredOptions());	  Option    group    =    options.getGroups();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
136	[BUG]  [BUGGY]  Option  group  =  options.getGroup(options.getOptionGroups());  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  group  =  options.getGroup(options.getOptionGroups());  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  group  =  options.getGroup(options.getOptionGroups());	  Option    group    =    options.getGroups();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
137	[BUG]  [BUGGY]  options  =  options.getRequiredOptions();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  options  =  options.getRequiredOptions();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	options  =  options.getRequiredOptions();	  if(options.getOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
138	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument,  0);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument,  0);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getRequiredOption(argument,  0);	  Option    currentToken    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
139	[BUG]  [BUGGY]  Option  currentOption  =  options.getOption(argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getOption(argument);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getOption(argument);	  Option    currentOption    =    options.getRequiredOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
140	[BUG]  [BUGGY]  currentOption  =  this.defaultParser  +  1;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  this.defaultParser  +  1;  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  this.defaultParser  +  1;	  currentOption    =    this.defaultParser;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
141	[BUG]  [BUGGY]  currentOption  =  getOption(options.getOptionGroups());  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  getOption(options.getOptionGroups());  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  getOption(options.getOptionGroups());	  currentOption    =    getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
142	[BUG]  [BUGGY]  currentOption  =  getOption(options.getOptionGroup());  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  getOption(options.getOptionGroup());  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  getOption(options.getOptionGroup());	  currentOption    =    getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
143	[BUG]  [BUGGY]  currentOption  =  getOption(options.getOptionToken());  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  getOption(options.getOptionToken());  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  getOption(options.getOptionToken());	  currentOption    =    getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
144	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[1]);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[1]);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments[1]);	  Option    currentOption    =    options.getRequiredOption(arguments[0]);    	non-compiled	[CE]  illegal  start  of  type	19	None	replace
145	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  expectOpts  =  new  ArrayList(options.getOptions());  }  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  expectOpts  =  new  ArrayList(options.getOptions());  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()!=  null)  {  expectOpts  =  new  ArrayList(options.getOptions());  }	  if(options.getOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getOptions());    }    	non-compiled	[CE]  illegal  start  of  type	12	None	replace
146	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1],  stopAtNonOption);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1],  stopAtNonOption);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1],  stopAtNonOption);	  Option    currentOption    =    options.getRequiredOption(arguments[0],    arguments[1]);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
147	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1])+  1;  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1])+  1;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1])+  1;	  Option    currentOption    =    options.getRequiredOption(arguments[0],    arguments[1]);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
148	[BUG]  [BUGGY]  Option  currentToken  =  options.getImplicitParsing();  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getImplicitParsing();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getImplicitParsing();	  Option    currentToken    =    options.getImplicitRequiredOption();    	non-compiled	[CE]  illegal  start  of  type	15	None	replace
149	[BUG]  [BUGGY]  if(expectedToken!=  null)  {  AssertionError:  expected  null;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(expectedToken!=  null)  {  AssertionError:  expected  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(expectedToken!=  null)  {  AssertionError:  expected  null;  }	  java.lang.AssertionError:    expected    null;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
150	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    currentOption    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
151	[BUG]  [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(null);  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(null);  }	  if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    currentOption    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
152	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroups(),  cmd;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroups(),  cmd;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroups(),  cmd;	  OptionGroup    group    =    options.getGroups(),    skipParsing;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
153	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(defaultOption);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroup(defaultOption);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroup(defaultOption);	  OptionGroup    group    =    options.getGroup(null);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
154	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(this);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroup(this);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroup(this);	  OptionGroup    group    =    options.getGroup(null);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
155	[BUG]  [BUGGY]  Option  currentOption  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getOptionGroups();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getOptionGroups();	  OptionGroup    currentOption    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
156	[BUG]  [BUGGY]  currentOption  =  options.getOption(this.defaultToken);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  options.getOption(this.defaultToken);  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  options.getOption(this.defaultToken);	  currentOption    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
157	[BUG]  [BUGGY]  if(!skipParsing)  {  Option  currentOption  =  null;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(!skipParsing)  {  Option  currentOption  =  null;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(!skipParsing)  {  Option  currentOption  =  null;	  java.lang.Option    currentOption    =    null;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
158	[BUG]  [BUGGY]  java.lang.Option  currentOption  =  options;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  java.lang.Option  currentOption  =  options;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	java.lang.Option  currentOption  =  options;	  java.lang.Option    currentOption    =    null;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
159	[BUG]  [BUGGY]  currentOption  =  cmd.getOption(null);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  cmd.getOption(null);  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  cmd.getOption(null);	  currentOption    =    cmd.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
160	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(argument,  null);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getOption(argument,  null);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getOption(argument,  null);	  Option    currentToken    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
161	[BUG]  [BUGGY]  currentOption  =  options.nextToken()  -  1;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  options.nextToken()  -  1;  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  options.nextToken()  -  1;	  currentOption    =    options.nextToken();    	non-compiled	[CE]  illegal  start  of  type	17	None	replace
162	[BUG]  [BUGGY]  Option  currentToken  =  options.getOptionOpt();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getOptionOpt();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getOptionOpt();	  Option    currentToken    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
163	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skippeParsing  =  false;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skippeParsing  =  false;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skippeParsing  =  false;  }	  if(options.getRequiredOptions()!=    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
164	[BUG]  [BUGGY]  currentOption  =  new  Option(options.getOptions());  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  new  Option(options.getOptions());  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  new  Option(options.getOptions());	  currentOption    =    new    Option(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
165	[BUG]  [BUGGY]  currentOption  =  new  Option(options.getOptionGroups());  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  new  Option(options.getOptionGroups());  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  new  Option(options.getOptionGroups());	  currentOption    =    new    Option(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
166	[BUG]  [BUGGY]  currentOption  =  new  Option(options.getRequiredOptions(),  options.getOptionGroups());  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  new  Option(options.getRequiredOptions(),  options.getOptionGroups());  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  new  Option(options.getRequiredOptions(),  options.getOptionGroups());	  currentOption    =    new    Option(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	38	None	replace
167	[BUG]  [BUGGY]  currentOption  =  this.cmd?  null  :  this.cmd;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  this.cmd?  null  :  this.cmd;  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  this.cmd?  null  :  this.cmd;	  currentOption    =    this.cmd;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
168	[BUG]  [BUGGY]  currentOption  =  this.cmd  &&  this.options.getRequiredOptions().length  >  0;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  this.cmd  &&  this.options.getRequiredOptions().length  >  0;  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  this.cmd  &&  this.options.getRequiredOptions().length  >  0;	  currentOption    =    this.cmd;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
169	[BUG]  [BUGGY]  Option  option  =  options.getOption(argument).getOption(currentToken);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  option  =  options.getOption(argument).getOption(currentToken);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  option  =  options.getOption(argument).getOption(currentToken);	  Option    option    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
170	[BUG]  [BUGGY]  Option  option  =  options.getOption(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  option  =  options.getOption(argument,  currentToken);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  option  =  options.getOption(argument,  currentToken);	  Option    option    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
171	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(currentToken);  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  option  =  options.getOptionGroup(currentToken);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  option  =  options.getOptionGroup(currentToken);	  Option    option    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
172	[BUG]  [BUGGY]  currentOption  =  options.getToken()  -  1;  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  options.getToken()  -  1;  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  options.getToken()  -  1;	  currentOption    =    options.getToken();    	non-compiled	[CE]  illegal  start  of  type	63	None	replace
173	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  currentOption  =  options.getOptionGroup();	  OptionGroup    currentOption    =    options.getRequiredOptions();    	non-compiled	[CE]  illegal  start  of  type	56	None	replace
174	[BUG]  [BUGGY]  currentOption  =  options.getOptionToken();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  options.getOptionToken();  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  options.getOptionToken();	  currentOption    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
175	[BUG]  [BUGGY]  currentOption  =  options.getOptionGroups();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  options.getOptionGroups();  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  options.getOptionGroups();	  currentOption    =    options.getOptionGroup();    	non-compiled	[CE]  illegal  start  of  type	62	None	replace
176	[BUG]  [BUGGY]  currentOption  =  new  OptionGroup(options.getOptions());  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  new  OptionGroup(options.getOptions());  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  new  OptionGroup(options.getOptions());	  currentOption    =    new    OptionGroup(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
177	[BUG]  [BUGGY]  currentOption  =  new  OptionGroup(options.getOptionGroups());  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  new  OptionGroup(options.getOptionGroups());  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  new  OptionGroup(options.getOptionGroups());	  currentOption    =    new    OptionGroup(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
178	[BUG]  [BUGGY]  currentOption  =  new  OptionGroup(options.getRequiredOptions(),  options.getOptionGroups());  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  new  OptionGroup(options.getRequiredOptions(),  options.getOptionGroups());  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  new  OptionGroup(options.getRequiredOptions(),  options.getOptionGroups());	  currentOption    =    new    OptionGroup(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
179	[BUG]  [BUGGY]  currentOption  =  new  OptionGroup(options.getOptionToken());  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  new  OptionGroup(options.getOptionToken());  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  new  OptionGroup(options.getOptionToken());	  currentOption    =    new    OptionGroup(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	64	None	replace
180	[BUG]  [BUGGY]  Option  currentToken  =  options.getSelectedOption(argument);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getSelectedOption(argument);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getSelectedOption(argument);	  Option    currentToken    =    options.getSelectedOption();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
181	[BUG]  [BUGGY]  Option  currentToken  =  options.getSelected(argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getSelected(argument);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getSelected(argument);	  Option    currentToken    =    options.getSelectedOption();    	non-compiled	[CE]  illegal  start  of  type	14	None	replace
182	[BUG]  [BUGGY]  Option  option  =  options.getOptionGroup(argument);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  option  =  options.getOptionGroup(argument);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  option  =  options.getOptionGroup(argument);	  Option    option    =    options.getOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	36	None	replace
183	[BUG]  [BUGGY]  if(options.getOptionGroups()!=  null  ||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getOptionGroups()!=  null  ||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getOptionGroups()!=  null  ||  options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  }	  if(options.getOptionGroups()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	45	None	replace
184	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1],  null);  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1],  null);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments[0],  arguments[1],  null);	  Option    currentOption    =    options.getRequiredOption(arguments[0],    arguments[1]);    	non-compiled	[CE]  illegal  start  of  type	20	None	replace
185	[BUG]  [BUGGY]  Option  currentOption  =  options.getSelectedOption(argument);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getSelectedOption(argument);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getSelectedOption(argument);	  Option    currentOption    =    options.getSelectedOption();    	non-compiled	[CE]  illegal  start  of  type	1	None	replace
186	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(null  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(null  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()!=  null)  {  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  cmd.setSelected(null	  if(options.getRequiredOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    currentOption    :    options.getOptionGroups())    {    cmd.setSelected(null);    }    	non-compiled	[CE]  illegal  start  of  type	5	None	replace
187	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts,  false);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts,  false);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  expectedOpts,  false);	  Option    currentOption    =    options.getRequiredOption(argument,    expectedOpts);    	non-compiled	[CE]  illegal  start  of  type	23	None	replace
188	[BUG]  [BUGGY]  currentOption  =  options.getOption(argument);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  options.getOption(argument);  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  options.getOption(argument);	  currentOption    =    options.null;    	non-compiled	[CE]  illegal  start  of  type	46	None	replace
189	[BUG]  [BUGGY]  currentOption  =  this.defaultParser.nextToken();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  this.defaultParser.nextToken();  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  this.defaultParser.nextToken();	  currentOption    =    this.defaultParser;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
190	[BUG]  [BUGGY]  currentOption  =  this.defaultParser.parse();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  this.defaultParser.parse();  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  this.defaultParser.parse();	  currentOption    =    this.defaultParser;    	non-compiled	[CE]  illegal  start  of  type	66	None	replace
191	[BUG]  [BUGGY]  if(skipParsing)  {  Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(skipParsing)  {  Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(skipParsing)  {  Option  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }	  java.lang.Option    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    for(Option    currentOption    :    options.getOptionGroups())    {    currentOption    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	28	None	replace
192	[BUG]  [BUGGY]  currentOption  =  cmd.options  ||!skipParsing;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  cmd.options  ||!skipParsing;  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  cmd.options  ||!skipParsing;	  currentOption    =    cmd.options;    	non-compiled	[CE]  illegal  start  of  type	33	None	replace
193	[BUG]  [BUGGY]  if(options.getOptionGroups()!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  true;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getOptionGroups()!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  true;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getOptionGroups()!=  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  true;  }	  if(options.getRequiredOptions()!=    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    skipParsing    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	26	None	replace
194	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(false,  cmd);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroup(false,  cmd);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroup(false,  cmd);	  OptionGroup    group    =    options.getGroup(false);    	non-compiled	[CE]  illegal  start  of  type	32	None	replace
195	[BUG]  [BUGGY]  if(expected  <  null)  {  AssertionError:  expected  null;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(expected  <  null)  {  AssertionError:  expected  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(expected  <  null)  {  AssertionError:  expected  null;  }	  java.lang.AssertionError:    expected    null;    	non-compiled	[CE]  illegal  start  of  type	6	None	replace
196	[BUG]  [BUGGY]  currentOption  =  options.getOption(this);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  options.getOption(this);  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  options.getOption(this);	  currentOption    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  type	8	None	replace
197	[BUG]  [BUGGY]  if(options.getOptionGroups()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  true;  }  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getOptionGroups()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  true;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getOptionGroups()  ==  null)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  true;  }	  if(options.getRequiredOptions()    ==    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    skipParsing    =    true;    }    	non-compiled	[CE]  illegal  start  of  type	41	None	replace
198	[BUG]  [BUGGY]  Option[]  expectedOpts  =  options.getOptions();  [CE]  illegal  start  of  type  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option[]  expectedOpts  =  options.getOptions();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option[]  expectedOpts  =  options.getOptions();	  Option[]    expectedOpts    =    options.getOptions();    for(Option    currentOption    :    options.getOptionGroups())    {    currentOption    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
199	[BUG]  [BUGGY]  Option[]  expectedOpts  =  options.getAllOptions();  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [CE]  illegal  start  of  type  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option[]  expectedOpts  =  options.getAllOptions();  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option[]  expectedOpts  =  options.getAllOptions();  for(Option  currentOption  :  options.getOptionGroups())  {  currentOption  =  null;  }	  Option[]    expectedOpts    =    options.getOptions();    for(Option    currentOption    :    options.getOptionGroups())    {    currentOption    =    null;    }    	non-compiled	[CE]  illegal  start  of  type	29	None	replace
200	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroups(),  this.options;  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroups(),  this.options;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroups(),  this.options;	  OptionGroup    group    =    options.getGroups(),    skipParsing;    	non-compiled	[CE]  illegal  start  of  type	30	None	replace
201	[BUG]  [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument,  null);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getRequiredOption(argument,  null);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getRequiredOption(argument,  null);	  Option    currentToken    =    options.getRequiredOption(argument);    	non-compiled	[CE]  illegal  start  of  type	13	None	replace
202	[BUG]  [BUGGY]  OptionGroup  group  =  options.getOptionGroup(null);  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getOptionGroup(null);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getOptionGroup(null);	  OptionGroup    group    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	47	None	replace
203	[BUG]  [BUGGY]  currentOption  =  options.getCmd();  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  options.getCmd();  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  options.getCmd();	  currentOption    =    this.cmd;    	non-compiled	[CE]  illegal  start  of  type	65	None	replace
204	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(options.getOptionGroup());  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroup(options.getOptionGroup());  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroup(options.getOptionGroup());	  OptionGroup    group    =    options.getGroup(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	48	None	replace
205	[BUG]  [BUGGY]  if(options.getRequiredOptions()!=  null  ||  options.getRequiredOptions().length  ==  0)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  }  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getRequiredOptions()!=  null  ||  options.getRequiredOptions().length  ==  0)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getRequiredOptions()!=  null  ||  options.getRequiredOptions().length  ==  0)  {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  }	  if(options.getRequiredOptions()!=    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	3	None	replace
206	[BUG]  [BUGGY]  Option  currentToken  =  options.getOption(argument,  this.options);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getOption(argument,  this.options);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getOption(argument,  this.options);	  Option    currentToken    =    options.getOption(argument);    	non-compiled	[CE]  illegal  start  of  type	52	None	replace
207	[BUG]  [BUGGY]  Option  currentOption  =  null;  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  null;  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  null;	  java.lang.Option    currentOption    =    null;    	non-compiled	[CE]  illegal  start  of  type	50	None	replace
208	[BUG]  [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptionGroups());  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  expectedOpts  =  new  ArrayList(options.getOptionGroups());  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	expectedOpts  =  new  ArrayList(options.getOptionGroups());	  expectedOpts    =    new    ArrayList(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	53	None	replace
209	[BUG]  [BUGGY]  if(options.getOptionGroups()!=  null)  {  expectOpts  =  new  ArrayList(options.getRequiredOptions());  }  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options.getOptionGroups()!=  null)  {  expectOpts  =  new  ArrayList(options.getRequiredOptions());  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options.getOptionGroups()!=  null)  {  expectOpts  =  new  ArrayList(options.getRequiredOptions());  }	  if(options.getOptions()!=    null)    {    expectedOpts    =    new    ArrayList(options.getRequiredOptions());    }    	non-compiled	[CE]  illegal  start  of  type	10	None	replace
210	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  arguments);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  arguments);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  arguments);	  Option    currentOption    =    options.getRequiredOption(arguments,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
211	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  this.skipped);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(arguments,  this.skipped);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(arguments,  this.skipped);	  Option    currentOption    =    options.getRequiredOption(arguments,    skipParsing);    	non-compiled	[CE]  illegal  start  of  type	18	None	replace
212	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(argument);  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(argument);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  currentOption  =  options.getOptionGroup(argument);	  OptionGroup    currentOption    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
213	[BUG]  [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(options);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  currentOption  =  options.getOptionGroup(options);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  currentOption  =  options.getOptionGroup(options);	  OptionGroup    currentOption    =    options.getOptionGroups();    	non-compiled	[CE]  illegal  start  of  type	54	None	replace
214	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  currentToken);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  currentToken);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  currentToken);	  Option    currentOption    =    options.getRequiredOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
215	[BUG]  [BUGGY]  Option  currentOption  =  options.getImplicitRequiredOption(argument);  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getImplicitRequiredOption(argument);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getImplicitRequiredOption(argument);	  Option    currentOption    =    options.getRequiredOption(currentToken);    	non-compiled	[CE]  illegal  start  of  type	21	None	replace
216	[BUG]  [BUGGY]  if(options!=  null)  {  this.options  =  new  OptionGroup();  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  }  [CE]  illegal  start  of  type  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  if(options!=  null)  {  this.options  =  new  OptionGroup();  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  }  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	if(options!=  null)  {  this.options  =  new  OptionGroup();  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;  }	  if(options!=    null)    {    this.options    =    options;    this.stopAtNonOption    =    stopAtNonOption;    skipParsing    =    false;    }    	non-compiled	[CE]  illegal  start  of  type	2	None	replace
217	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(options.getGroups());  [CE]  illegal  start  of  type  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  group  =  options.getOptionGroup(options.getGroups());  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  group  =  options.getOptionGroup(options.getGroups());	  Option    group    =    options.getGroups();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
218	[BUG]  [BUGGY]  Option  group  =  options.getOptionGroup(null);  [CE]  illegal  start  of  type  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  group  =  options.getOptionGroup(null);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  group  =  options.getOptionGroup(null);	  Option    group    =    options.getGroups();    	non-compiled	[CE]  illegal  start  of  type	35	None	replace
219	[BUG]  [BUGGY]  currentOption  =  getOption(options.getRequiredOptions(),  options.getOpts());  [CE]  illegal  start  of  type  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  getOption(options.getRequiredOptions(),  options.getOpts());  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  getOption(options.getRequiredOptions(),  options.getOpts());	  currentOption    =    getOption(options.getRequiredOptions());    	non-compiled	[CE]  illegal  start  of  type	39	None	replace
220	[BUG]  [BUGGY]  Option  currentToken  =  options.getOptionGroup();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentToken  =  options.getOptionGroup();  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentToken  =  options.getOptionGroup();	  Option    currentToken    =    options.getOption();    	non-compiled	[CE]  illegal  start  of  type	51	None	replace
221	[BUG]  [BUGGY]  currentOption  =  this.cmd.cloneTree();  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  this.cmd.cloneTree();  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  this.cmd.cloneTree();	  currentOption    =    cmd.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
222	[BUG]  [BUGGY]  currentOption  =  cmd.getTree();  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  currentOption  =  cmd.getTree();  [BUGGY]      expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	currentOption  =  cmd.getTree();	  currentOption    =    cmd.cloneTree();    	non-compiled	[CE]  illegal  start  of  type	34	None	replace
223	[BUG]  [BUGGY]  OptionGroup  group  =  options.getGroup(argument);  [CE]  illegal  start  of  type  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  OptionGroup  group  =  options.getGroup(argument);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	OptionGroup  group  =  options.getGroup(argument);	  OptionGroup    group    =    options.getGroup(null);    	non-compiled	[CE]  illegal  start  of  type	31	None	replace
224	[BUG]  [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  null,  expectedOpts);  [CE]  illegal  start  of  type  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      {  this.options  =  options;  this.stopAtNonOption  =  stopAtNonOption;  skipParsing  =  false;      [BUGGY]  Option  currentOption  =  options.getRequiredOption(argument,  null,  expectedOpts);  [BUGGY]      currentOption  =  null;  expectedOpts  =  new  ArrayList(options.getRequiredOptions());  for  (OptionGroup  group  :  options.getOptionGroups())  {  group.setSelected(null);  }  cmd  =  new  CommandLine();  [CLASS]  DefaultParser  [METHOD]  parse  [RETURN_TYPE]  CommandLine  Options  options  String[]  arguments  Properties  properties  boolean  stopAtNonOption  [VARIABLES]  Options  options  CommandLine  cmd  boolean  skipParsing  stopAtNonOption  OptionGroup  group  Option  currentOption  List  expectedOpts  String  argument  currentToken  String[]  arguments  Properties  properties  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.5773502691896258	105	105	1	replace	Option  currentOption  =  options.getRequiredOption(argument,  null,  expectedOpts);	  Option    currentOption    =    options.getRequiredOption(argument,    null);    	non-compiled	[CE]  illegal  start  of  type	59	None	replace
