bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  i  =  0;  i  <  expectedOpts.size();  i++)  {  String  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [CE]  >  expected  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  int  i  =  0;  i  <  expectedOpts.size();  i++)  {  String  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	int  i  =  0;  i  <  expectedOpts.size();  i++)  {  String  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    String    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    	non-compiled	[CE]  >  expected	71	None	replace
2	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  String  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  String  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  String  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    String    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
3	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  expectedOpts.size();  i++)  {  String  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  1;  i  <  expectedOpts.size();  i++)  {  String  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  1;  i  <  expectedOpts.size();  i++)  {  String  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    String    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
4	[BUG]  [BUGGY]  return  opt.toString();  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  opt.toString();	  return    preferredOpts.toString();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
5	[BUG]  [BUGGY]  return  preferredOpts.toString(),  token;  [CE]  ';'  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  preferredOpts.toString(),  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  preferredOpts.toString(),  token;	  return    preferredOpts.toString();    	non-compiled	[CE]  ';'  expected	62	None	replace
6	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(prefix,  token);  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  cmd  =  options.getOption(prefix,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  cmd  =  options.getOption(prefix,  token);	  Option    cmd    =    options.getOption(prefix);    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
7	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(optName);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(optName);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(optName);	  Option    opt    =    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
8	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(prefix);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(prefix);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(prefix);	  Option    opt    =    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
9	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(token);  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(token);	  Option    opt    =    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
10	[BUG]  [BUGGY]  int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [CE]  >  expected  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    	non-compiled	[CE]  >  expected	69	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  1;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  1;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
13	[BUG]  [BUGGY]  return  expectedOpts.size()  >  1?  option  :  null;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  expectedOpts.size()  >  1?  option  :  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.size()  >  1?  option  :  null;	  return    expectedOpts.size()    >    1?    optName    :    null;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
14	[BUG]  [BUGGY]  return  expectedOpts.size()  >  1?  opt  :  expectedOpts;  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  expectedOpts.size()  >  1?  opt  :  expectedOpts;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.size()  >  1?  opt  :  expectedOpts;	  return    expectedOpts.size()    >    1?    expectedOpts    :    opt;    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
15	[BUG]  [BUGGY]  return  expectedOpts.size()  >  1?  optName  :  expectedOpts;  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  expectedOpts.size()  >  1?  optName  :  expectedOpts;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.size()  >  1?  optName  :  expectedOpts;	  return    expectedOpts.size()    >    1?    expectedOpts    :    opt;    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  opt.substring(i  +  1);  }  [CE]  cannot  find  symbol  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  opt.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  opt.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    opt.substring(i    +    1);    }    	non-compiled	[CE]  cannot  find  symbol	37	None	replace
17	[BUG]  [BUGGY]  if(expectedOpts!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  opt.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(expectedOpts!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  opt.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(expectedOpts!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  opt.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    opt.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
18	[BUG]  [BUGGY]  if(expectedOpts!=  null)  {  for(int  i  =  0;  i  <  opt.size();  i++)  {  opt  =  opt.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(expectedOpts!=  null)  {  for(int  i  =  0;  i  <  opt.size();  i++)  {  opt  =  opt.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(expectedOpts!=  null)  {  for(int  i  =  0;  i  <  opt.size();  i++)  {  opt  =  opt.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    opt.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
19	[BUG]  [BUGGY]  if(expectedOpts!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(expectedOpts!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(expectedOpts!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    opt.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
20	[BUG]  [BUGGY]  opt  =  options.hasOption(optName)?  option.toString()  :  null;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.hasOption(optName)?  option.toString()  :  null;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasOption(optName)?  option.toString()  :  null;	  if(option.hasOption(optName))    {    opt    =    option.toString();    }    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
21	[BUG]  [BUGGY]  if(options.hasOption(optName))  {  opt  =  option.toString();  }  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(optName))  {  opt  =  option.toString();  }  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(optName))  {  opt  =  option.toString();  }	  if(option.hasOption(optName))    {    opt    =    option.toString();    }    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
22	[BUG]  [BUGGY]  options.hasOption(optName))  {  opt  =  option.toString();  }  [CE]  ';'  expected  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.hasOption(optName))  {  opt  =  option.toString();  }  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.hasOption(optName))  {  opt  =  option.toString();  }	  if(option.hasOption(optName))    {    opt    =    option.toString();    }    	non-compiled	[CE]  ';'  expected	104	None	replace
23	[BUG]  [BUGGY]  Option  option  =  options.hasLongOption(prefix);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasLongOption(prefix);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasLongOption(prefix);	  Option    option    =    options.hasLongOption(optName);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
24	[BUG]  [BUGGY]  Option  option  =  options.hasLongOption(optionName);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasLongOption(optionName);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasLongOption(optionName);	  Option    option    =    options.hasLongOption(optName);    	non-compiled	[CE]  cannot  find  symbol	57	None	replace
25	[BUG]  [BUGGY]  return(token!=  null)?  token  :  toString();  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(token!=  null)?  token  :  toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(token!=  null)?  token  :  toString();	  return(opt!=    null)?    token    :    toString();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
26	[BUG]  [BUGGY]  return(token!=  null)?  opt  :  toString();  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(token!=  null)?  opt  :  toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(token!=  null)?  opt  :  toString();	  return(opt!=    null)?    token    :    toString();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
27	[BUG]  [BUGGY]  return(token!=  null)?  t  :  toString();  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(token!=  null)?  t  :  toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(token!=  null)?  t  :  toString();	  return(opt!=    null)?    token    :    toString();    	non-compiled	[CE]  cannot  find  symbol	82	None	replace
28	[BUG]  [BUGGY]  if(options.hasLongOption(prefix))  {  return  options.getLongOption(opt);  }  else  {  expectedOpts.add(token);  }  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasLongOption(prefix))  {  return  options.getLongOption(opt);  }  else  {  expectedOpts.add(token);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasLongOption(prefix))  {  return  options.getLongOption(opt);  }  else  {  expectedOpts.add(token);  }	  if(options.hasLongOption(opt))    {    return    options.getLongOption(opt);    }    else    {    expectedOpts.add(token);    }    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
29	[BUG]  [BUGGY]  if(options.hasLongOption(token))  {  return  options.getLongOption(opt);  }  else  {  expectedOpts.add(token);  }  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasLongOption(token))  {  return  options.getLongOption(opt);  }  else  {  expectedOpts.add(token);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasLongOption(token))  {  return  options.getLongOption(opt);  }  else  {  expectedOpts.add(token);  }	  if(options.hasLongOption(opt))    {    return    options.getLongOption(opt);    }    else    {    expectedOpts.add(token);    }    	non-compiled	[CE]  cannot  find  symbol	52	None	replace
30	[BUG]  [BUGGY]  options.hasLongOption(token))  {  return  options.getLongOption(opt);  }  else  {  expectedOpts.add(token);  }  [CE]  ';'  expected  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.hasLongOption(token))  {  return  options.getLongOption(opt);  }  else  {  expectedOpts.add(token);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.hasLongOption(token))  {  return  options.getLongOption(opt);  }  else  {  expectedOpts.add(token);  }	  if(options.hasLongOption(opt))    {    return    options.getLongOption(opt);    }    else    {    expectedOpts.add(token);    }    	non-compiled	[CE]  ';'  expected	52	None	replace
31	[BUG]  [BUGGY]  options.hasOption(opt))  {  return  options.getOption(opt);  }  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.hasOption(opt))  {  return  options.getOption(opt);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.hasOption(opt))  {  return  options.getOption(opt);  }	  if(options.hasOption(opt))    {    return    options.getOption(opt);    }    	non-compiled	[CE]  ';'  expected	45	None	replace
32	[BUG]  [BUGGY]  opt  =  options.hasLongOption(prefix);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.hasLongOption(prefix);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasLongOption(prefix);	  opt    =    options.hasLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
33	[BUG]  [BUGGY]  opt  =  options.hasLongOption(token);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.hasLongOption(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasLongOption(token);	  opt    =    options.hasLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	33	None	replace
34	[BUG]  [BUGGY]  return  preferredOpts  -  optName;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  preferredOpts  -  optName;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  preferredOpts  -  optName;	  return    preferredOpts    -    opt;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
35	[BUG]  [BUGGY]  return  preferredOpts  -  opt.toString();  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  preferredOpts  -  opt.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  preferredOpts  -  opt.toString();	  return    preferredOpts    -    opt;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
36	[BUG]  [BUGGY]  return  opt  -  preferredOpts;  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt  -  preferredOpts;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  opt  -  preferredOpts;	  return    preferredOpts    -    opt;    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
37	[BUG]  [BUGGY]  Option  opt  =  options.getOption(optName);  break;  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.getOption(optName);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.getOption(optName);  break;	  Option    opt    =    options.getOption(opt);    break;    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
38	[BUG]  [BUGGY]  Option  opt  =  options.getOption(prefix);  break;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.getOption(prefix);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.getOption(prefix);  break;	  Option    opt    =    options.getOption(opt);    break;    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
39	[BUG]  [BUGGY]  Option  opt  =  options.getOption(token);  break;  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.getOption(token);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.getOption(token);  break;	  Option    opt    =    options.getOption(opt);    break;    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
40	[BUG]  [BUGGY]  return(opt!=  null)?  this.option  :  optName;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt!=  null)?  this.option  :  optName;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt!=  null)?  this.option  :  optName;	  return(opt!=    null)?    this.option    :    opt;    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
41	[BUG]  [BUGGY]  options.addOption(token);  break;  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.addOption(token);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.addOption(token);  break;	  options.addOption(opt);    break;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
42	[BUG]  [BUGGY]  options.addOption(opt,  token);  break;  [CE]  cannot  find  symbol  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.addOption(opt,  token);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.addOption(opt,  token);  break;	  options.addOption(opt);    break;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
43	[BUG]  [BUGGY]  options.addOption(option);  break;  [CE]  cannot  find  symbol  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.addOption(option);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.addOption(option);  break;	  options.addOption(opt);    break;    	non-compiled	[CE]  cannot  find  symbol	61	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.hasOption(prefix);  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(prefix);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(prefix);	  Option    option    =    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
45	[BUG]  [BUGGY]  Option  option  =  options.hasOption(token);  [CE]  cannot  find  symbol  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(token);	  Option    option    =    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
46	[BUG]  [BUGGY]  Option  option  =  options.hasOption(optionName);  [CE]  cannot  find  symbol  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(optionName);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(optionName);	  Option    option    =    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	22	None	replace
47	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  opt.trim();  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  null  :  opt.trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  null  :  opt.trim();	  return(opt!=    null)?    null    :    opt.trim();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
48	[BUG]  [BUGGY]  return(opt  >=  null)?  null  :  opt.trim();  [CE]  cannot  find  symbol  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  >=  null)?  null  :  opt.trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  >=  null)?  null  :  opt.trim();	  return(opt!=    null)?    null    :    opt.trim();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
49	[BUG]  [BUGGY]  return(option  ==  null)?  null  :  opt.trim();  [CE]  cannot  find  symbol  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(option  ==  null)?  null  :  opt.trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(option  ==  null)?  null  :  opt.trim();	  return(opt!=    null)?    null    :    opt.trim();    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
50	[BUG]  [BUGGY]  options.hasLongOption(prefix))  {  return  options.getLongOption(opt);  }  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.hasLongOption(prefix))  {  return  options.getLongOption(opt);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.hasLongOption(prefix))  {  return  options.getLongOption(opt);  }	  if(options.hasLongOption(prefix))    {    return    options.getLongOption(opt);    }    	non-compiled	[CE]  ';'  expected	50	None	replace
51	[BUG]  [BUGGY]  Option  option  =  options.getLongOption(prefix);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getLongOption(prefix);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getLongOption(prefix);	  if(options.hasLongOption(prefix))    {    return    options.getLongOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
52	[BUG]  [BUGGY]  if(options.hasLongOption(prefix))  {  return  options.getLongOption(opt,  token);  }  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasLongOption(prefix))  {  return  options.getLongOption(opt,  token);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasLongOption(prefix))  {  return  options.getLongOption(opt,  token);  }	  if(options.hasLongOption(prefix))    {    return    options.getLongOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
53	[BUG]  [BUGGY]  return  expectedOpts.size()  >  2?  opt  :  expectedOpts;  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  expectedOpts.size()  >  2?  opt  :  expectedOpts;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.size()  >  2?  opt  :  expectedOpts;	  return    expectedOpts.size()    >    2?    expectedOpts    :    opt;    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
54	[BUG]  [BUGGY]  return  expectedOpts.size()  >  2?  optName  :  expectedOpts;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  expectedOpts.size()  >  2?  optName  :  expectedOpts;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.size()  >  2?  optName  :  expectedOpts;	  return    expectedOpts.size()    >    2?    expectedOpts    :    opt;    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
55	[BUG]  [BUGGY]  return  t.substring(0,  i);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.substring(0,  i);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  t.substring(0,  i);	  return    token.substring(0,    i);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
56	[BUG]  [BUGGY]  return  token.substring(0,  i  +  1);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  token.substring(0,  i  +  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  token.substring(0,  i  +  1);	  return    token.substring(0,    i);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
57	[BUG]  [BUGGY]  return  str.substring(0,  i);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  str.substring(0,  i);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  str.substring(0,  i);	  return    token.substring(0,    i);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
58	[BUG]  [BUGGY]  Option  opt  =  options.hasLongOption(prefix);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasLongOption(prefix);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasLongOption(prefix);	  Option    opt    =    options.hasLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
59	[BUG]  [BUGGY]  Option  opt  =  options.hasLongOption(token);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasLongOption(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasLongOption(token);	  Option    opt    =    options.hasLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
60	[BUG]  [BUGGY]  return  opt.trim();  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  opt.trim();	  return    option.trim();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
61	[BUG]  [BUGGY]  return  option.trim(),  token;  [CE]  ';'  expected  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  option.trim(),  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  option.trim(),  token;	  return    option.trim();    	non-compiled	[CE]  ';'  expected	31	None	replace
62	[BUG]  [BUGGY]  return  options.trim();  [CE]  cannot  find  symbol  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.trim();	  return    option.trim();    	non-compiled	[CE]  cannot  find  symbol	31	None	replace
63	[BUG]  [BUGGY]  return  options.getLongPrefix(opt);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongPrefix(opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getLongPrefix(opt);	  return    this.options.getLongPrefix(opt);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
64	[BUG]  [BUGGY]  return  this.options.getLongPrefix(token);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  this.options.getLongPrefix(token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  this.options.getLongPrefix(token);	  return    this.options.getLongPrefix(opt);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
65	[BUG]  [BUGGY]  return  opt.getLongPrefix(this.options);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.getLongPrefix(this.options);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  opt.getLongPrefix(this.options);	  return    this.options.getLongPrefix(opt);    	non-compiled	[CE]  cannot  find  symbol	81	None	replace
66	[BUG]  [BUGGY]  if(options.hasOption(token))  {  return  options.getOption(opt);  }  else  {  expectedOpts.add(token);  }  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(token))  {  return  options.getOption(opt);  }  else  {  expectedOpts.add(token);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(token))  {  return  options.getOption(opt);  }  else  {  expectedOpts.add(token);  }	  if(options.hasOption(opt))    {    return    options.getOption(opt);    }    else    {    expectedOpts.add(token);    }    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
67	[BUG]  [BUGGY]  if(options.hasOption(prefix))  {  return  options.getOption(opt);  }  else  {  expectedOpts.add(token);  }  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(prefix))  {  return  options.getOption(opt);  }  else  {  expectedOpts.add(token);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(prefix))  {  return  options.getOption(opt);  }  else  {  expectedOpts.add(token);  }	  if(options.hasOption(opt))    {    return    options.getOption(opt);    }    else    {    expectedOpts.add(token);    }    	non-compiled	[CE]  cannot  find  symbol	48	None	replace
68	[BUG]  [BUGGY]  options.hasOption(opt))  {  expectedOpts.add(token);  }  [CE]  ';'  expected  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.hasOption(opt))  {  expectedOpts.add(token);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.hasOption(opt))  {  expectedOpts.add(token);  }	  if(options.hasOption(opt))    {    return    options.getOption(opt);    }    else    {    expectedOpts.add(token);    }    	non-compiled	[CE]  ';'  expected	48	None	replace
69	[BUG]  [BUGGY]  return(opt  ==  null)?  this.option  :  optName;  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  this.option  :  optName;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  this.option  :  optName;	  return(opt    ==    null)?    this.option    :    opt;    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
70	[BUG]  [BUGGY]  return(opt  ==  null)?  this.option  :  token;  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  this.option  :  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  this.option  :  token;	  return(opt    ==    null)?    this.option    :    opt;    	non-compiled	[CE]  cannot  find  symbol	28	None	replace
71	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  opt.substring(0,  i  +  1);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  null  :  opt.substring(0,  i  +  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  null  :  opt.substring(0,  i  +  1);	  return(opt    ==    null)?    null    :    opt.substring(0,    i);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
72	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  opt.substring(0,  i).trim();  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  null  :  opt.substring(0,  i).trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  null  :  opt.substring(0,  i).trim();	  return(opt    ==    null)?    null    :    opt.substring(0,    i);    	non-compiled	[CE]  cannot  find  symbol	96	None	replace
73	[BUG]  [BUGGY]  return  expectedOpts.toString(),  token;  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  expectedOpts.toString(),  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.toString(),  token;	  return    expectedOpts.toString();    	non-compiled	[CE]  ';'  expected	64	None	replace
74	[BUG]  [BUGGY]  return  matchingOpts.size()  >  1?  expectedOpts.get(opt):  null;  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  matchingOpts.size()  >  1?  expectedOpts.get(opt):  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  matchingOpts.size()  >  1?  expectedOpts.get(opt):  null;	  return    expectedOpts.size()    >    1?    matchingOpts.get(opt):    null;    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
75	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(prefix);  break;  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(prefix);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(prefix);  break;	  Option    opt    =    options.hasOption(opt);    break;    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
76	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(optionName);  break;  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(optionName);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(optionName);  break;	  Option    opt    =    options.hasOption(opt);    break;    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
77	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(token);  break;  [CE]  cannot  find  symbol  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(token);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(token);  break;	  Option    opt    =    options.hasOption(opt);    break;    	non-compiled	[CE]  cannot  find  symbol	21	None	replace
78	[BUG]  [BUGGY]  Option  opt  =  options.getOption(token);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.getOption(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.getOption(token);	  Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
79	[BUG]  [BUGGY]  Option  opt  =  options.getOption(prefix);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.getOption(prefix);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.getOption(prefix);	  Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
80	[BUG]  [BUGGY]  Option  opt  =  options.getOption(optionName);  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.getOption(optionName);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.getOption(optionName);	  Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
81	[BUG]  [BUGGY]  Option  opt  =  options.getOption(currentToken);  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.getOption(currentToken);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.getOption(currentToken);	  Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
82	[BUG]  [BUGGY]  options.hasLongOption(opt))  {  return  options.getLongOption(opt);  }  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.hasLongOption(opt))  {  return  options.getLongOption(opt);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.hasLongOption(opt))  {  return  options.getLongOption(opt);  }	  if(options.hasLongOption(opt))    {    return    options.getLongOption(opt);    }    	non-compiled	[CE]  ';'  expected	49	None	replace
83	[BUG]  [BUGGY]  return  opt.toLowerCase();  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.toLowerCase();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  opt.toLowerCase();	  return    token.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
84	[BUG]  [BUGGY]  return  t.toLowerCase();  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.toLowerCase();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  t.toLowerCase();	  return    token.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
85	[BUG]  [BUGGY]  return  option.toLowerCase();  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  option.toLowerCase();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  option.toLowerCase();	  return    token.toLowerCase();    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
86	[BUG]  [BUGGY]  return  t.trim();  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  t.trim();	  return    token.trim();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
87	[BUG]  [BUGGY]  return  token.trim()  +  1;  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  token.trim()  +  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  token.trim()  +  1;	  return    token.trim();    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
88	[BUG]  [BUGGY]  if(options.hasOption(prefix))  {  return  options.getLongOption(opt);  }  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(prefix))  {  return  options.getLongOption(opt);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(prefix))  {  return  options.getLongOption(opt);  }	  if(options.hasOption(opt))    {    return    options.getLongOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
89	[BUG]  [BUGGY]  options.hasOption(opt))  {  return  options.getLongOption(opt);  }  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.hasOption(opt))  {  return  options.getLongOption(opt);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.hasOption(opt))  {  return  options.getLongOption(opt);  }	  if(options.hasOption(opt))    {    return    options.getLongOption(opt);    }    	non-compiled	[CE]  ';'  expected	91	None	replace
90	[BUG]  [BUGGY]  Option  option  =  options.getLongOption(opt);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getLongOption(opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getLongOption(opt);	  if(options.hasOption(opt))    {    return    options.getLongOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	91	None	replace
91	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  opt  :  opt.substring(0,  i);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(opt)?  opt  :  opt.substring(0,  i);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(opt)?  opt  :  opt.substring(0,  i);	  Option    option    =    options.hasOption(opt)?    opt    :    option.substring(0,    i);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
92	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  t  :  opt.substring(0,  i);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(opt)?  t  :  opt.substring(0,  i);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(opt)?  t  :  opt.substring(0,  i);	  Option    option    =    options.hasOption(opt)?    opt    :    option.substring(0,    i);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
93	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  opt  :  opt.substring(0,  i  +  1);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(opt)?  opt  :  opt.substring(0,  i  +  1);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(opt)?  opt  :  opt.substring(0,  i  +  1);	  Option    option    =    options.hasOption(opt)?    opt    :    option.substring(0,    i);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
94	[BUG]  [BUGGY]  return  matchingOpts.size()  >  1?  expectedOpts  :  null;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  matchingOpts.size()  >  1?  expectedOpts  :  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  matchingOpts.size()  >  1?  expectedOpts  :  null;	  return    expectedOpts.size()    >    1?    matchingOpts    :    null;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
95	[BUG]  [BUGGY]  return  expectedOpts.size()  >  1?  matchingOpts  :  opt;  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  expectedOpts.size()  >  1?  matchingOpts  :  opt;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.size()  >  1?  matchingOpts  :  opt;	  return    expectedOpts.size()    >    1?    matchingOpts    :    null;    	non-compiled	[CE]  cannot  find  symbol	56	None	replace
96	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  return  options.getOption(opt,  token);  }  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(opt))  {  return  options.getOption(opt,  token);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(opt))  {  return  options.getOption(opt,  token);  }	  return    options.getOption(opt,    token);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
97	[BUG]  [BUGGY]  return  options.getOption(opt,  token,  expectedOpts);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getOption(opt,  token,  expectedOpts);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getOption(opt,  token,  expectedOpts);	  return    options.getOption(opt,    token);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
98	[BUG]  [BUGGY]  return  options.getOption(token,  opt);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getOption(token,  opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getOption(token,  opt);	  return    options.getOption(opt,    token);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
99	[BUG]  [BUGGY]  return  options.getOption(option,  token,  expectedOpts);  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getOption(option,  token,  expectedOpts);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getOption(option,  token,  expectedOpts);	  return    options.getOption(opt,    token);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
100	[BUG]  [BUGGY]  options.hasOption(prefix))  {  opt  =  option;  }  [CE]  ';'  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.hasOption(prefix))  {  opt  =  option;  }  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.hasOption(prefix))  {  opt  =  option;  }	  options.hasOption(optName))    {    opt    =    option;    }    	non-compiled	[CE]  ';'  expected	76	None	replace
101	[BUG]  [BUGGY]  if(options.hasOption(optName))  {  opt  =  option;  }  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(optName))  {  opt  =  option;  }  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(optName))  {  opt  =  option;  }	  options.hasOption(optName))    {    opt    =    option;    }    	non-compiled	[CE]  cannot  find  symbol	76	None	replace
102	[BUG]  [BUGGY]  if(options.hasLongOption(opt))  {  return  options.getLongOption(prefix);  }  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasLongOption(opt))  {  return  options.getLongOption(prefix);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasLongOption(opt))  {  return  options.getLongOption(prefix);  }	  return    options.getLongOption(prefix);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
103	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  return  options.getLongOption(prefix);  }  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(opt))  {  return  options.getLongOption(prefix);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(opt))  {  return  options.getLongOption(prefix);  }	  return    options.getLongOption(prefix);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
104	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.getLongOption(prefix);  }  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(opt!=  null)  {  return  options.getLongOption(prefix);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(opt!=  null)  {  return  options.getLongOption(prefix);  }	  return    options.getLongOption(prefix);    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
105	[BUG]  [BUGGY]  opt  =  options.toString();  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.toString();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.toString();	  opt    =    option.toString();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
106	[BUG]  [BUGGY]  opt  =  t.toString();  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.toString();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  t.toString();	  opt    =    option.toString();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
107	[BUG]  [BUGGY]  opt  =  token.toString();  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  token.toString();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  token.toString();	  opt    =    option.toString();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
108	[BUG]  [BUGGY]  Option  opt  =  options.hasLongOption(optionName);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasLongOption(optionName);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasLongOption(optionName);	  Option    opt    =    options.hasLongOption(optName);    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
109	[BUG]  [BUGGY]  options.hasOption(optName))  {  opt  =  option;  break;  }  [CE]  ';'  expected  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.hasOption(optName))  {  opt  =  option;  break;  }  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.hasOption(optName))  {  opt  =  option;  break;  }	  if(options.hasOption(optName))    {    opt    =    option;    break;    }    	non-compiled	[CE]  ';'  expected	97	None	replace
110	[BUG]  [BUGGY]  opt  =  options.hasOption(optName);  break;  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.hasOption(optName);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasOption(optName);  break;	  if(options.hasOption(optName))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
111	[BUG]  [BUGGY]  Option  option  =  options.hasOption(optName);  break;  [CE]  cannot  find  symbol  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(optName);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(optName);  break;	  if(options.hasOption(optName))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
112	[BUG]  [BUGGY]  return(opt  >=  null)?  null  :  opt.toString();  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  >=  null)?  null  :  opt.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  >=  null)?  null  :  opt.toString();	  return(opt!=    null)?    null    :    opt.toString();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
113	[BUG]  [BUGGY]  option  =  options.hasLongOption(prefix);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  option  =  options.hasLongOption(prefix);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	option  =  options.hasLongOption(prefix);	  option    =    options.hasLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
114	[BUG]  [BUGGY]  option  =  options.hasLongOption(optName);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  option  =  options.hasLongOption(optName);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	option  =  options.hasLongOption(optName);	  option    =    options.hasLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
115	[BUG]  [BUGGY]  option  =  options.hasLongOption(token);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  option  =  options.hasLongOption(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	option  =  options.hasLongOption(token);	  option    =    options.hasLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	78	None	replace
116	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
117	[BUG]  [BUGGY]  if(expectedOpts!=  null)  {  for(int  i  =  0;  i  <  opt.size();  i++)  {  opt  =  option.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(expectedOpts!=  null)  {  for(int  i  =  0;  i  <  opt.size();  i++)  {  opt  =  option.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(expectedOpts!=  null)  {  for(int  i  =  0;  i  <  opt.size();  i++)  {  opt  =  option.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
118	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1,  expectedOpts.length());  }  [CE]  cannot  find  symbol  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1,  expectedOpts.length());  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1,  expectedOpts.length());  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  cannot  find  symbol	36	None	replace
119	[BUG]  [BUGGY]  return(option  ==  null)?  null  :  opt.toString();  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(option  ==  null)?  null  :  opt.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(option  ==  null)?  null  :  opt.toString();	  return(opt    ==    null)?    null    :    opt.toString();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
120	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  opt.toString()  + ", ";  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  null  :  opt.toString()  + ", ";  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  null  :  opt.toString()  + ", ";	  return(opt    ==    null)?    null    :    opt.toString();    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
121	[BUG]  [BUGGY]  options.addOption(token);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.addOption(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.addOption(token);	  options.addOption(opt);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
122	[BUG]  [BUGGY]  options.addOption(opt,  token);  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.addOption(opt,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.addOption(opt,  token);	  options.addOption(opt);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
123	[BUG]  [BUGGY]  options.addOption(option);  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.addOption(option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.addOption(option);	  options.addOption(opt);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
124	[BUG]  [BUGGY]  options.addOption(prefix);  [CE]  cannot  find  symbol  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.addOption(prefix);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.addOption(prefix);	  options.addOption(opt);    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
125	[BUG]  [BUGGY]  return  options.toString();  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.toString();	  return    option.toString();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
126	[BUG]  [BUGGY]  return  t.toString();  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  t.toString();	  return    option.toString();    	non-compiled	[CE]  cannot  find  symbol	30	None	replace
127	[BUG]  [BUGGY]  Option  option  =  options.hasLongOption(token);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasLongOption(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasLongOption(token);	  Option    option    =    options.hasLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
128	[BUG]  [BUGGY]  return  opt  -  expectedOpts;  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt  -  expectedOpts;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  opt  -  expectedOpts;	  return    expectedOpts    -    opt;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
129	[BUG]  [BUGGY]  return  expectedOpts  -  optName;  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  expectedOpts  -  optName;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts  -  optName;	  return    expectedOpts    -    opt;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
130	[BUG]  [BUGGY]  return  expectedOpts  -  opt.toString();  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  expectedOpts  -  opt.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts  -  opt.toString();	  return    expectedOpts    -    opt;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
131	[BUG]  [BUGGY]  return  expectedOpts  -  opt.token;  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  expectedOpts  -  opt.token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts  -  opt.token;	  return    expectedOpts    -    opt;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
132	[BUG]  [BUGGY]  opt  =  t.substring(0,  i);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  t.substring(0,  i);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  t.substring(0,  i);	  opt    =    option.substring(0,    i);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
133	[BUG]  [BUGGY]  opt  =  option.substring(0,  i  +  1);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  option.substring(0,  i  +  1);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  option.substring(0,  i  +  1);	  opt    =    option.substring(0,    i);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
134	[BUG]  [BUGGY]  opt  =  option.substring(0,  i).trim();  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  option.substring(0,  i).trim();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  option.substring(0,  i).trim();	  opt    =    option.substring(0,    i);    	non-compiled	[CE]  cannot  find  symbol	24	None	replace
135	[BUG]  [BUGGY]  return  options.getOption(optName,  token);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getOption(optName,  token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getOption(optName,  token);	  return    options.getOption(optName);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
136	[BUG]  [BUGGY]  return  matchingOpts.size()  >  1?  expectedOpts.size()  :  null;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  matchingOpts.size()  >  1?  expectedOpts.size()  :  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  matchingOpts.size()  >  1?  expectedOpts.size()  :  null;	  return    expectedOpts.size()    >    1?    matchingOpts.size()    :    null;    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
137	[BUG]  [BUGGY]  return(prefix!=  null)?  token  :  opt;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(prefix!=  null)?  token  :  opt;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(prefix!=  null)?  token  :  opt;	  return(opt!=    null)?    token    :    prefix;    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
138	[BUG]  [BUGGY]  return(token!=  null)?  token  :  prefix;  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(token!=  null)?  token  :  prefix;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(token!=  null)?  token  :  prefix;	  return(opt!=    null)?    token    :    prefix;    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
139	[BUG]  [BUGGY]  return(value!=  null)?  token  :  prefix;  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(value!=  null)?  token  :  prefix;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(value!=  null)?  token  :  prefix;	  return(opt!=    null)?    token    :    prefix;    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
140	[BUG]  [BUGGY]  return(token!=  null)?  prefix  :  token;  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(token!=  null)?  prefix  :  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(token!=  null)?  prefix  :  token;	  return(opt!=    null)?    token    :    prefix;    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
141	[BUG]  [BUGGY]  return  opt.substring(0,  token.length()  -  1);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.substring(0,  token.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  opt.substring(0,  token.length()  -  1);	  return    token.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
142	[BUG]  [BUGGY]  return  token.substring(0,  opt.length());  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  token.substring(0,  opt.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  token.substring(0,  opt.length());	  return    token.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
143	[BUG]  [BUGGY]  return  t.substring(0,  opt.length()  -  1);  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.substring(0,  opt.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  t.substring(0,  opt.length()  -  1);	  return    token.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
144	[BUG]  [BUGGY]  Option  option  =  currentToken.getOption(options);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  currentToken.getOption(options);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  currentToken.getOption(options);	  Option    option    =    options.getOption(currentToken);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
145	[BUG]  [BUGGY]  Option  option  =  currentToken.getOption(option);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  currentToken.getOption(option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  currentToken.getOption(option);	  Option    option    =    options.getOption(currentToken);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
146	[BUG]  [BUGGY]  return(option  ==  null)?  this.option  :  option;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(option  ==  null)?  this.option  :  option;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(option  ==  null)?  this.option  :  option;	  return(opt    ==    null)?    this.option    :    option;    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
147	[BUG]  [BUGGY]  return(this.option  ==  null)?  this.option  :  option;  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(this.option  ==  null)?  this.option  :  option;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(this.option  ==  null)?  this.option  :  option;	  return(opt    ==    null)?    this.option    :    option;    	non-compiled	[CE]  cannot  find  symbol	90	None	replace
148	[BUG]  [BUGGY]  opt  =  options.hasLongOption(optionName);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.hasLongOption(optionName);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasLongOption(optionName);	  opt    =    options.hasLongOption(optName);    	non-compiled	[CE]  cannot  find  symbol	94	None	replace
149	[BUG]  [BUGGY]  options.hasLongOption(optName))  {  opt  =  option;  break;  }  [CE]  ';'  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.hasLongOption(optName))  {  opt  =  option;  break;  }  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.hasLongOption(optName))  {  opt  =  option;  break;  }	  if(options.hasLongOption(optName))    {    opt    =    option;    break;    }    	non-compiled	[CE]  ';'  expected	54	None	replace
150	[BUG]  [BUGGY]  opt  =  options.hasLongOption(optName);  break;  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.hasLongOption(optName);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasLongOption(optName);  break;	  if(options.hasLongOption(optName))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
151	[BUG]  [BUGGY]  Option  option  =  options.hasLongOption(optName);  break;  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasLongOption(optName);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasLongOption(optName);  break;	  if(options.hasLongOption(optName))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol	54	None	replace
152	[BUG]  [BUGGY]  Option  option  =  options.getOption(optionName,  token);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(optionName,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getOption(optionName,  token);	  Option    option    =    options.getOption(optionName);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
153	[BUG]  [BUGGY]  int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(!stopAtNonOption)  {  break;  }  [CE]  >  expected  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(!stopAtNonOption)  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(!stopAtNonOption)  {  break;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(!stopAtNonOption)    {    break;    }    	non-compiled	[CE]  >  expected	99	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(!stopAtNonOption)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(!stopAtNonOption)  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(!stopAtNonOption)  {  break;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(!stopAtNonOption)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
155	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(option);  if(!stopAtNonOption)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(option);  if(!stopAtNonOption)  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(option);  if(!stopAtNonOption)  {  break;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(!stopAtNonOption)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
156	[BUG]  [BUGGY]  return  prefix.substring(0,  prefix.length()  -  1);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  prefix.substring(0,  prefix.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  prefix.substring(0,  prefix.length()  -  1);	  return    token.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
157	[BUG]  [BUGGY]  return  prefix.substring(0,  token.length()  -  1);  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  prefix.substring(0,  token.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  prefix.substring(0,  token.length()  -  1);	  return    token.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
158	[BUG]  [BUGGY]  return  token.substring(0,  prefix.length());  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  token.substring(0,  prefix.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  token.substring(0,  prefix.length());	  return    token.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
159	[BUG]  [BUGGY]  return  t.substring(0,  prefix.length()  -  1);  [CE]  cannot  find  symbol  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.substring(0,  prefix.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  t.substring(0,  prefix.length()  -  1);	  return    token.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
160	[BUG]  [BUGGY]  return  options.getLongOption(opt,  token,  expectedOpts);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongOption(opt,  token,  expectedOpts);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getLongOption(opt,  token,  expectedOpts);	  return    options.getLongOption(opt,    token);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
161	[BUG]  [BUGGY]  return  options.getLongOption(token,  opt);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongOption(token,  opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getLongOption(token,  opt);	  return    options.getLongOption(opt,    token);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
162	[BUG]  [BUGGY]  return  options.getLongOption(opt,  value);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongOption(opt,  value);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getLongOption(opt,  value);	  return    options.getLongOption(opt,    token);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
163	[BUG]  [BUGGY]  return  options.getLongOption(opt,  prefix);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongOption(opt,  prefix);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getLongOption(opt,  prefix);	  return    options.getLongOption(opt,    token);    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
164	[BUG]  [BUGGY]  Option  option  =  options.hasOption(optName,  token);  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(optName,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(optName,  token);	  Option    option    =    options.hasOption(optName);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
165	[BUG]  [BUGGY]  return  opt.substring(opt.length()  -  1);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.substring(opt.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  opt.substring(opt.length()  -  1);	  return    preferredOpts.substring(opt.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
166	[BUG]  [BUGGY]  return  opt.substring(preferredOpts.length()  -  1);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.substring(preferredOpts.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  opt.substring(preferredOpts.length()  -  1);	  return    preferredOpts.substring(opt.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
167	[BUG]  [BUGGY]  return  opt.substring(prefix.length()  -  1);  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.substring(prefix.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  opt.substring(prefix.length()  -  1);	  return    preferredOpts.substring(opt.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
168	[BUG]  [BUGGY]  return  opt.substring(option.length()  -  1);  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt.substring(option.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  opt.substring(option.length()  -  1);	  return    preferredOpts.substring(opt.length()    -    1);    	non-compiled	[CE]  cannot  find  symbol	63	None	replace
169	[BUG]  [BUGGY]  Option  option  =  options.getOption(optName,  token);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(optName,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getOption(optName,  token);	  Option    option    =    options.getOption(optName);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
170	[BUG]  [BUGGY]  return(opt!=  null)?  null  :  opt.substring(0,  i  +  1);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt!=  null)?  null  :  opt.substring(0,  i  +  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt!=  null)?  null  :  opt.substring(0,  i  +  1);	  return(opt!=    null)?    null    :    opt.substring(0,    i);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
171	[BUG]  [BUGGY]  return(opt!=  null)?  null  :  opt.substring(0,  i).trim();  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt!=  null)?  null  :  opt.substring(0,  i).trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt!=  null)?  null  :  opt.substring(0,  i).trim();	  return(opt!=    null)?    null    :    opt.substring(0,    i);    	non-compiled	[CE]  cannot  find  symbol	95	None	replace
172	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  options.addOption(opt,  token);  }  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  options.addOption(opt,  token);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  options.addOption(opt,  token);  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    options.addOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
173	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  options.addOption(option);  }  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  options.addOption(option);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  options.addOption(option);  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    options.addOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
174	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  options.addOption(token);  }  [CE]  cannot  find  symbol  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  options.addOption(token);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  options.addOption(token);  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    options.addOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
175	[BUG]  [BUGGY]  opt  =  options.hasOption(prefix);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.hasOption(prefix);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasOption(prefix);	  opt    =    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
176	[BUG]  [BUGGY]  opt  =  options.hasOption(optName);  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.hasOption(optName);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasOption(optName);	  opt    =    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
177	[BUG]  [BUGGY]  opt  =  options.hasOption(token);  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.hasOption(token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasOption(token);	  opt    =    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
178	[BUG]  [BUGGY]  Option  option  =  options.hasOption(prefix)?  opt  :  option.toString();  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(prefix)?  opt  :  option.toString();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(prefix)?  opt  :  option.toString();	  Option    option    =    options.hasOption(opt)?    opt    :    option.toString();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
179	[BUG]  [BUGGY]  Option  option  =  options.hasOption(option)?  opt  :  option.toString();  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(option)?  opt  :  option.toString();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(option)?  opt  :  option.toString();	  Option    option    =    options.hasOption(opt)?    opt    :    option.toString();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
180	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  expectedOpts  :  option.toString();  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(opt)?  expectedOpts  :  option.toString();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(opt)?  expectedOpts  :  option.toString();	  Option    option    =    options.hasOption(opt)?    opt    :    option.toString();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
181	[BUG]  [BUGGY]  int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }  [CE]  >  expected  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    continue;    }    	non-compiled	[CE]  >  expected	70	None	replace
182	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
183	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  continue;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  continue;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    continue;    }    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
184	[BUG]  [BUGGY]  options.hasLongOption(prefix))  {  opt  =  option;  break;  }  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.hasLongOption(prefix))  {  opt  =  option;  break;  }  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.hasLongOption(prefix))  {  opt  =  option;  break;  }	  if(options.hasLongOption(prefix))    {    opt    =    option;    break;    }    	non-compiled	[CE]  ';'  expected	53	None	replace
185	[BUG]  [BUGGY]  opt  =  options.hasLongOption(prefix);  break;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.hasLongOption(prefix);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasLongOption(prefix);  break;	  if(options.hasLongOption(prefix))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
186	[BUG]  [BUGGY]  Option  option  =  options.hasLongOption(prefix);  break;  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasLongOption(prefix);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasLongOption(prefix);  break;	  if(options.hasLongOption(prefix))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol	53	None	replace
187	[BUG]  [BUGGY]  options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  [CE]  ';'  expected  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }	  if(options.hasLongOption(prefix))    {    opt    =    option;    break;    }    	non-compiled	[CE]  ';'  expected	53	None	replace
188	[BUG]  [BUGGY]  result  =  expectedOpts.size()  >  1?  optName  :  null;  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  result  =  expectedOpts.size()  >  1?  optName  :  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	result  =  expectedOpts.size()  >  1?  optName  :  null;	  result    =    expectedOpts.size()    >    1?    opt    :    null;    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
189	[BUG]  [BUGGY]  result  =  opt.size()  >  1?  expectedOpts  :  null;  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  result  =  opt.size()  >  1?  expectedOpts  :  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	result  =  opt.size()  >  1?  expectedOpts  :  null;	  result    =    expectedOpts.size()    >    1?    opt    :    null;    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
190	[BUG]  [BUGGY]  opt  =  options.substring(0,  i  +  1);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.substring(0,  i  +  1);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.substring(0,  i  +  1);	  if(option.hasOption(opt))    {    opt    =    option.substring(0,    i    +    1);    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
191	[BUG]  [BUGGY]  options.hasOption(opt))  {  opt  =  option.substring(0,  i  +  1);  }  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.hasOption(opt))  {  opt  =  option.substring(0,  i  +  1);  }  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.hasOption(opt))  {  opt  =  option.substring(0,  i  +  1);  }	  if(option.hasOption(opt))    {    opt    =    option.substring(0,    i    +    1);    }    	non-compiled	[CE]  ';'  expected	80	None	replace
192	[BUG]  [BUGGY]  opt  =  options.hasOption(opt)?  option.substring(0,  i  +  1):  null;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.hasOption(opt)?  option.substring(0,  i  +  1):  null;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasOption(opt)?  option.substring(0,  i  +  1):  null;	  if(option.hasOption(opt))    {    opt    =    option.substring(0,    i    +    1);    }    	non-compiled	[CE]  cannot  find  symbol	80	None	replace
193	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(opt)?  t.substring(0,  i):  null;  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(opt)?  t.substring(0,  i):  null;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(opt)?  t.substring(0,  i):  null;	  Option    opt    =    options.hasOption(opt)?    option.substring(0,    i):    null;    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
194	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(option)?  option.substring(0,  i):  null;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(option)?  option.substring(0,  i):  null;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(option)?  option.substring(0,  i):  null;	  Option    opt    =    options.hasOption(opt)?    option.substring(0,    i):    null;    	non-compiled	[CE]  cannot  find  symbol	25	None	replace
195	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(opt)?  option.substring(0,  i),  prefix:  null;  [CE]  :  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(opt)?  option.substring(0,  i),  prefix:  null;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(opt)?  option.substring(0,  i),  prefix:  null;	  Option    opt    =    options.hasOption(opt)?    option.substring(0,    i):    null;    	non-compiled	[CE]  :  expected	25	None	replace
196	[BUG]  [BUGGY]  options.hasOption(optName))  {  return  options.getLongOption(opt);  }  [CE]  ';'  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.hasOption(optName))  {  return  options.getLongOption(opt);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.hasOption(optName))  {  return  options.getLongOption(opt);  }	  if(options.hasOption(optName))    {    return    options.getLongOption(opt);    }    	non-compiled	[CE]  ';'  expected	93	None	replace
197	[BUG]  [BUGGY]  int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  return  option;  }  [CE]  >  expected  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  return  option;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  return  option;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  >  expected	72	None	replace
198	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  return  option;  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  return  option;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  return  option;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
199	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  return  option;  }  [CE]  illegal  start  of  expression  [FE]                              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  return  option;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  return  option;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
200	[BUG]  [BUGGY]  options.hasOption(prefix))  {  return  options.getOption(opt);  }  [CE]  ';'  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.hasOption(prefix))  {  return  options.getOption(opt);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.hasOption(prefix))  {  return  options.getOption(opt);  }	  if(options.hasOption(prefix))    {    return    options.getOption(opt);    }    	non-compiled	[CE]  ';'  expected	47	None	replace
201	[BUG]  [BUGGY]  return  options.getOption(option,  token);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getOption(option,  token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getOption(option,  token);	  return    options.getOption(option);    	non-compiled	[CE]  cannot  find  symbol	68	None	replace
202	[BUG]  [BUGGY]  Option  opt  =  options.getOption(optName);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.getOption(optName);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.getOption(optName);	  Option    cmd    =    options.getOption(optName);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
203	[BUG]  [BUGGY]  return(opt  ==  null)?  this  :  optName;  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  this  :  optName;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  this  :  optName;	  return(opt    ==    null)?    this    :    opt;    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
204	[BUG]  [BUGGY]  return(opt  ==  null)?  this  :  opt.token;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  this  :  opt.token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  this  :  opt.token;	  return(opt    ==    null)?    this    :    opt;    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
205	[BUG]  [BUGGY]  return(opt  ==  null)?  this  :  opt.toString();  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  this  :  opt.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  this  :  opt.toString();	  return(opt    ==    null)?    this    :    opt;    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
206	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(option);  break;  [CE]  cannot  find  symbol  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(option);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(option);  break;	  Option    opt    =    options.hasOption(optName);    break;    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
207	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(option)?  option.toString()  :  null;  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(option)?  option.toString()  :  null;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(option)?  option.toString()  :  null;	  Option    opt    =    options.hasOption(opt)?    option.toString()    :    null;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
208	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(prefix)?  option.toString()  :  null;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(prefix)?  option.toString()  :  null;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(prefix)?  option.toString()  :  null;	  Option    opt    =    options.hasOption(opt)?    option.toString()    :    null;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
209	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  option.toString()  :  null;  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(opt)?  option.toString()  :  null;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(opt)?  option.toString()  :  null;	  Option    opt    =    options.hasOption(opt)?    option.toString()    :    null;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
210	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  1);  }  [CE]  cannot  find  symbol  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
211	[BUG]  [BUGGY]  For(int  i  =  expectedOpts.size()  -  2;  i  >  0;  i--)  {  opt  =  token.substring(i  +  1);  }  [CE]  '.class'  expected  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  For(int  i  =  expectedOpts.size()  -  2;  i  >  0;  i--)  {  opt  =  token.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	For(int  i  =  expectedOpts.size()  -  2;  i  >  0;  i--)  {  opt  =  token.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  '.class'  expected	38	None	replace
212	[BUG]  [BUGGY]  For(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  token.substring(i  +  1);  }  [CE]  '.class'  expected  [FE]                              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  For(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  token.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	For(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  token.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  '.class'  expected	38	None	replace
213	[BUG]  [BUGGY]  For(int  i  =  expectedOpts.size()  -  2;  i  >  1;  i--)  {  opt  =  token.substring(i  +  1);  }  [CE]  '.class'  expected  [FE]                                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  For(int  i  =  expectedOpts.size()  -  2;  i  >  1;  i--)  {  opt  =  token.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	For(int  i  =  expectedOpts.size()  -  2;  i  >  1;  i--)  {  opt  =  token.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  '.class'  expected	38	None	replace
214	[BUG]  [BUGGY]  int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  [CE]  >  expected  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    break;    }    	non-compiled	[CE]  >  expected	100	None	replace
215	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
216	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option.hasLongOption(option))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option.hasLongOption(option))  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option.hasLongOption(option))  {  break;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
217	[BUG]  [BUGGY]  opt  =  options.hasOption(prefix);  break;  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.hasOption(prefix);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasOption(prefix);  break;	  opt    =    options.hasOption(opt);    break;    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
218	[BUG]  [BUGGY]  opt  =  options.hasOption(optionName);  break;  [CE]  cannot  find  symbol  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.hasOption(optionName);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasOption(optionName);  break;	  opt    =    options.hasOption(opt);    break;    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
219	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefix,  token);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(prefix,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getOption(prefix,  token);	  Option    option    =    options.getOption(prefix);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
220	[BUG]  [BUGGY]  if(opt  ==  null)  {  return  this.option;  }  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(opt  ==  null)  {  return  this.option;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(opt  ==  null)  {  return  this.option;  }	  if(opt!=    null)    {    return    this.option;    }    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
221	[BUG]  [BUGGY]  if(opt!=  null)  {  return  this;  }  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(opt!=  null)  {  return  this;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(opt!=  null)  {  return  this;  }	  if(opt!=    null)    {    return    this.option;    }    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
222	[BUG]  [BUGGY]  if(option!=  null)  {  return  this.option;  }  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(option!=  null)  {  return  this.option;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(option!=  null)  {  return  this.option;  }	  if(opt!=    null)    {    return    this.option;    }    	non-compiled	[CE]  cannot  find  symbol	26	None	replace
223	[BUG]  [BUGGY]  return  preferredOpts.size()  >  1?  preferredOpts  :  optName;  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  preferredOpts.size()  >  1?  preferredOpts  :  optName;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  preferredOpts.size()  >  1?  preferredOpts  :  optName;	  return    preferredOpts.size()    >    1?    preferredOpts    :    opt;    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
224	[BUG]  [BUGGY]  return  preferredOpts.size()  >  1?  opt  :  preferredOpts;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  preferredOpts.size()  >  1?  opt  :  preferredOpts;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  preferredOpts.size()  >  1?  opt  :  preferredOpts;	  return    preferredOpts.size()    >    1?    preferredOpts    :    opt;    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
225	[BUG]  [BUGGY]  return  preferredOpts  -  1;  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  preferredOpts  -  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  preferredOpts  -  1;	  return    preferredOpts    +    1;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
226	[BUG]  [BUGGY]  return  preferredOpts  /  1;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  preferredOpts  /  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  preferredOpts  /  1;	  return    preferredOpts    +    1;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
227	[BUG]  [BUGGY]  return  preferredOpts  *  1;  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  preferredOpts  *  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  preferredOpts  *  1;	  return    preferredOpts    +    1;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
228	[BUG]  [BUGGY]  Option  option  =  options.getOption(token,  opt);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(token,  opt);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getOption(token,  opt);	  Option    option    =    options.getOption(opt,    token);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
229	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  token,  expectedOpts);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(opt,  token,  expectedOpts);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getOption(opt,  token,  expectedOpts);	  Option    option    =    options.getOption(opt,    token);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
230	[BUG]  [BUGGY]  Option  option  =  options.getOption(t,  token);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(t,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getOption(t,  token);	  Option    option    =    options.getOption(opt,    token);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
231	[BUG]  [BUGGY]  return(option!=  null)?  this.option  :  option;  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(option!=  null)?  this.option  :  option;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(option!=  null)?  this.option  :  option;	  return(opt!=    null)?    this.option    :    option;    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
232	[BUG]  [BUGGY]  return(this.option!=  null)?  this.option  :  option;  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(this.option!=  null)?  this.option  :  option;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(this.option!=  null)?  this.option  :  option;	  return(opt!=    null)?    this.option    :    option;    	non-compiled	[CE]  cannot  find  symbol	29	None	replace
233	[BUG]  [BUGGY]  opt  =  currentOption.toString();  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  currentOption.toString();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  currentOption.toString();	  opt    =    option.toString();    	non-compiled	[CE]  cannot  find  symbol	103	None	replace
234	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  option  :  option.toString();  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(opt)?  option  :  option.toString();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(opt)?  option  :  option.toString();	  Option    option    =    options.hasOption(opt)?    opt    :    option.toString();    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
235	[BUG]  [BUGGY]  Option  option  =  options.hasOption(optName)?  option.toString()  :  option.toString();  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(optName)?  option.toString()  :  option.toString();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(optName)?  option.toString()  :  option.toString();	  if(option.hasOption(optName))    {    opt    =    option.toString();    }    	non-compiled	[CE]  cannot  find  symbol	104	None	replace
236	[BUG]  [BUGGY]  result  =  expectedOpts.size()  >  1?  option  :  null;  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  result  =  expectedOpts.size()  >  1?  option  :  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	result  =  expectedOpts.size()  >  1?  option  :  null;	  result    =    expectedOpts.size()    >    1?    opt    :    null;    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
237	[BUG]  [BUGGY]  Return  matchingOpts.size()  >  1?  expectedOpts  :  null;  [CE]  ';'  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Return  matchingOpts.size()  >  1?  expectedOpts  :  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Return  matchingOpts.size()  >  1?  expectedOpts  :  null;	  return    expectedOpts.size()    >    1?    matchingOpts    :    null;    	non-compiled	[CE]  ';'  expected	56	None	replace
238	[BUG]  [BUGGY]  returns  matchingOpts.size()  >  1?  expectedOpts  :  null;  [CE]  ';'  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  returns  matchingOpts.size()  >  1?  expectedOpts  :  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	returns  matchingOpts.size()  >  1?  expectedOpts  :  null;	  return    expectedOpts.size()    >    1?    matchingOpts    :    null;    	non-compiled	[CE]  ';'  expected	56	None	replace
239	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(option);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(option);	  Option    opt    =    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	39	None	replace
240	[BUG]  [BUGGY]  Option  option  =  options.getOption(optName,  options);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(optName,  options);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getOption(optName,  options);	  Option    option    =    options.getOption(optName);    	non-compiled	[CE]  cannot  find  symbol	55	None	replace
241	[BUG]  [BUGGY]  options.getLongOption(opt);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.getLongOption(opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.getLongOption(opt);	  if(options.hasOption(optName))    {    return    options.getLongOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	93	None	replace
242	[BUG]  [BUGGY]  return  t.substring(0,  token);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.substring(0,  token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  t.substring(0,  token);	  return    token.substring(0,    i);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
243	[BUG]  [BUGGY]  return  i.substring(0,  token);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  i.substring(0,  token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  i.substring(0,  token);	  return    token.substring(0,    i);    	non-compiled	[CE]  cannot  find  symbol	59	None	replace
244	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(opt);  [CE]  cannot  find  symbol  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  expectedOpts  =  options.getOption(opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  expectedOpts  =  options.getOption(opt);	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
245	[BUG]  [BUGGY]  Option  expectedOpts  =  options.getOption(optName);  [CE]  cannot  find  symbol  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  expectedOpts  =  options.getOption(optName);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  expectedOpts  =  options.getOption(optName);	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
246	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  2);  }  [CE]  cannot  find  symbol  [FE]                              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  2);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  2);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  cannot  find  symbol	38	None	replace
247	[BUG]  [BUGGY]  Option  option  =  options.getOption(optionName,  opt);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(optionName,  opt);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getOption(optionName,  opt);	  Option    option    =    options.getOption(optionName);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
248	[BUG]  [BUGGY]  return  expectedOpts.size()  >  2?  expectedOpts  :  optName;  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  expectedOpts.size()  >  2?  expectedOpts  :  optName;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.size()  >  2?  expectedOpts  :  optName;	  return    expectedOpts.size()    >    2?    expectedOpts    :    opt;    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
249	[BUG]  [BUGGY]  Option  option  =  options.hasLongOption(option);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasLongOption(option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasLongOption(option);	  Option    option    =    options.hasLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	58	None	replace
250	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt,  token);  break;  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.getOption(opt,  token);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.getOption(opt,  token);  break;	  Option    opt    =    options.getOption(opt);    break;    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
251	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option);  break;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.getOption(option);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.getOption(option);  break;	  Option    opt    =    options.getOption(opt);    break;    	non-compiled	[CE]  cannot  find  symbol	87	None	replace
252	[BUG]  [BUGGY]  return(option  ==  null)?  null  :  option.toString();  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(option  ==  null)?  null  :  option.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(option  ==  null)?  null  :  option.toString();	  return(opt!=    null)?    null    :    opt.toString();    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
253	[BUG]  [BUGGY]  return(options.hasLongOption(opt))?  this  :  opt;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(options.hasLongOption(opt))?  this  :  opt;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(options.hasLongOption(opt))?  this  :  opt;	  return    this;    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
254	[BUG]  [BUGGY]  return  expectedOpts.size()  >  1?  expectedOpts  :  optName;  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  expectedOpts.size()  >  1?  expectedOpts  :  optName;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.size()  >  1?  expectedOpts  :  optName;	  return    expectedOpts.size()    >    1?    expectedOpts    :    opt;    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
255	[BUG]  [BUGGY]  return  expectedOpts  -  opt  +  1;  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  expectedOpts  -  opt  +  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts  -  opt  +  1;	  return    expectedOpts    -    opt;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
256	[BUG]  [BUGGY]  opt  =  options.hasOption(option);  break;  [CE]  cannot  find  symbol  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.hasOption(option);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasOption(option);  break;	  opt    =    options.hasOption(opt);    break;    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
257	[BUG]  [BUGGY]  return  options.getOption(optName,  options);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getOption(optName,  options);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getOption(optName,  options);	  return    options.getOption(optName);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
258	[BUG]  [BUGGY]  return  options.getOption(optName,  expectedOpts);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getOption(optName,  expectedOpts);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getOption(optName,  expectedOpts);	  return    options.getOption(optName);    	non-compiled	[CE]  cannot  find  symbol	79	None	replace
259	[BUG]  [BUGGY]  Option  optName  =  options.getOption(optName);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  optName  =  options.getOption(optName);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  optName  =  options.getOption(optName);	  Option    cmd    =    options.getOption(optName);    	non-compiled	[CE]  cannot  find  symbol	88	None	replace
260	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(optName,  options);  [CE]  <identifier>  expected  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  cmd  =  options.getOption(optName,  options);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  cmd  =  options.getOption(optName,  options);	  Option    cmd    =    options.getOption(optName);    	non-compiled	[CE]  <identifier>  expected	88	None	replace
261	[BUG]  [BUGGY]  return(token!=  null)?  token  :  option;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(token!=  null)?  token  :  option;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(token!=  null)?  token  :  option;	  return(opt!=    null)?    token    :    prefix;    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
262	[BUG]  [BUGGY]  return(token!=  null)?  token  :  opt;  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(token!=  null)?  token  :  opt;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(token!=  null)?  token  :  opt;	  return(opt!=    null)?    token    :    prefix;    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
263	[BUG]  [BUGGY]  return(token!=  null)?  option  :  prefix;  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(token!=  null)?  option  :  prefix;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(token!=  null)?  option  :  prefix;	  return(opt!=    null)?    token    :    prefix;    	non-compiled	[CE]  cannot  find  symbol	83	None	replace
264	[BUG]  [BUGGY]  return(token!=  null)?  opt  :  prefix;  [CE]  ';'  expected  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(token!=  null)?  opt  :  prefix;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(token!=  null)?  opt  :  prefix;	  return(opt!=    null)?    token    :    prefix;    	non-compiled	[CE]  ';'  expected	83	None	replace
265	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  option  :  opt.substring(0,  i);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(opt)?  option  :  opt.substring(0,  i);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(opt)?  option  :  opt.substring(0,  i);	  Option    option    =    options.hasOption(opt)?    opt    :    option.substring(0,    i);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
266	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  key  :  option.substring(0,  i);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(opt)?  key  :  option.substring(0,  i);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(opt)?  key  :  option.substring(0,  i);	  Option    option    =    options.hasOption(opt)?    opt    :    option.substring(0,    i);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
267	[BUG]  [BUGGY]  Option  option  =  currentOption.getOption(option);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  currentOption.getOption(option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  currentOption.getOption(option);	  Option    option    =    options.getOption(currentToken);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
268	[BUG]  [BUGGY]  if(options.hasLongOption(prefix)&&  options.getLongOption(opt)!=  null)  {  return  options.getLongOption(opt);  }  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasLongOption(prefix)&&  options.getLongOption(opt)!=  null)  {  return  options.getLongOption(opt);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasLongOption(prefix)&&  options.getLongOption(opt)!=  null)  {  return  options.getLongOption(opt);  }	  if(options.hasLongOption(prefix))    {    return    options.getLongOption(opt);    }    	non-compiled	[CE]  cannot  find  symbol	50	None	replace
269	[BUG]  [BUGGY]  return  options.getLongOption(optName,  expectedOpts);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongOption(optName,  expectedOpts);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getLongOption(optName,  expectedOpts);	  return    options.getLongOption(optName);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
270	[BUG]  [BUGGY]  return  options.getLongOption(optName,  options);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongOption(optName,  options);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getLongOption(optName,  options);	  return    options.getLongOption(optName);    	non-compiled	[CE]  cannot  find  symbol	92	None	replace
271	[BUG]  [BUGGY]  Option  opt  =  options.hasLongOption(option);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasLongOption(option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasLongOption(option);	  Option    opt    =    options.hasLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	32	None	replace
272	[BUG]  [BUGGY]  return(opt  ==  null)?  this  :  option;  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  this  :  option;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  this  :  option;	  return(opt    ==    null)?    this    :    opt;    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
273	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(optName,  value);  break;  [CE]  cannot  find  symbol  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(optName,  value);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(optName,  value);  break;	  Option    opt    =    options.hasOption(optName);    break;    	non-compiled	[CE]  cannot  find  symbol	23	None	replace
274	[BUG]  [BUGGY]  return  preferredOpts.substring(opt.toString());  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  preferredOpts.substring(opt.toString());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  preferredOpts.substring(opt.toString());	  return    preferredOpts.toString();    	non-compiled	[CE]  cannot  find  symbol	62	None	replace
275	[BUG]  [BUGGY]  return  opt  +  1;  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  opt  +  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  opt  +  1;	  return    preferredOpts    +    1;    	non-compiled	[CE]  cannot  find  symbol	5	None	replace
276	[BUG]  [BUGGY]  return  token.trim(),  options.getLongOption(opt);  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  token.trim(),  options.getLongOption(opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  token.trim(),  options.getLongOption(opt);	  return    token.trim();    	non-compiled	[CE]  ';'  expected	11	None	replace
277	[BUG]  [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(option!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
278	[BUG]  [BUGGY]  Option  option  =  options.hasOption(option);  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(option);	  Option    option    =    options.hasOption(optName);    	non-compiled	[CE]  cannot  find  symbol	60	None	replace
279	[BUG]  [BUGGY]  return  matchingOpts.size()  >  1?  matchingOpts.get(opt):  null;  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  matchingOpts.size()  >  1?  matchingOpts.get(opt):  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  matchingOpts.size()  >  1?  matchingOpts.get(opt):  null;	  return    expectedOpts.size()    >    1?    matchingOpts.get(opt):    null;    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
280	[BUG]  [BUGGY]  return  matchingOpts.size()  >  1?  opt.get(opt):  null;  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  matchingOpts.size()  >  1?  opt.get(opt):  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  matchingOpts.size()  >  1?  opt.get(opt):  null;	  return    expectedOpts.size()    >    1?    matchingOpts.get(opt):    null;    	non-compiled	[CE]  cannot  find  symbol	86	None	replace
281	[BUG]  [BUGGY]  Option  opt  =  options.getOption(option);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.getOption(option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.getOption(option);	  Option    opt    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
282	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(opt)?  option,  prefix.substring(0,  i):  null;  [CE]  :  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(opt)?  option,  prefix.substring(0,  i):  null;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(opt)?  option,  prefix.substring(0,  i):  null;	  Option    opt    =    options.hasOption(opt)?    option.substring(0,    i):    null;    	non-compiled	[CE]  :  expected	25	None	replace
283	[BUG]  [BUGGY]  return  matchingOpts.toString();  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  matchingOpts.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  matchingOpts.toString();	  return    expectedOpts.toString();    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
284	[BUG]  [BUGGY]  opt  =  options.hasOption(option);  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.hasOption(option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasOption(option);	  opt    =    options.hasOption(opt);    	non-compiled	[CE]  cannot  find  symbol	40	None	replace
285	[BUG]  [BUGGY]  Option  option  =  options.getLongOption(opt,  token);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getLongOption(opt,  token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getLongOption(opt,  token);	  return    options.getLongOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
286	[BUG]  [BUGGY]  return(option  ==  null)?  null  :  option.trim();  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(option  ==  null)?  null  :  option.trim();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(option  ==  null)?  null  :  option.trim();	  return(opt!=    null)?    null    :    opt.trim();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
287	[BUG]  [BUGGY]  options.getOption(opt);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.getOption(opt);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.getOption(opt);	  if(options.hasOption(prefix))    {    return    options.getOption(opt);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
288	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  opt  =  option.substring(0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(opt))  {  opt  =  option.substring(0,  i  +  1);  }  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(opt))  {  opt  =  option.substring(0,  i  +  1);  }	  if(option.hasOption(opt))    {    opt    =    option.substring(0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
289	[BUG]  [BUGGY]  return  options.getLongOption(option);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongOption(option);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getLongOption(option);	  return    options.getLongOption(token);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
290	[BUG]  [BUGGY]  opt  =  options.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.substring(0,  i);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.substring(0,  i);	  opt    =    option.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
291	[BUG]  [BUGGY]  return  expectedOpts.size()  >  1?  options.getOption(opt):  null;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  expectedOpts.size()  >  1?  options.getOption(opt):  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.size()  >  1?  options.getOption(opt):  null;	  return    expectedOpts.size()    >    1?    optName    :    null;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
292	[BUG]  [BUGGY]  return(this.option  ==  null)?  this.option  :  opt;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(this.option  ==  null)?  this.option  :  opt;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(this.option  ==  null)?  this.option  :  opt;	  return(opt    ==    null)?    this.option    :    option;    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
293	[BUG]  [BUGGY]  return(opt!=  null)?  this.option  :  token;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt!=  null)?  this.option  :  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt!=  null)?  this.option  :  token;	  return(opt!=    null)?    this.option    :    opt;    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
294	[BUG]  [BUGGY]  return(opt  ==  null)?  token  :  toString();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  token  :  toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  token  :  toString();	  return(opt!=    null)?    token    :    toString();    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
295	[BUG]  [BUGGY]  return  option.substring(0,  opt.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  option.substring(0,  opt.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  option.substring(0,  opt.length()  -  1);	  return    token.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
296	[BUG]  [BUGGY]  return  token.substring(0,  t.length()  -  1);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  token.substring(0,  t.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  token.substring(0,  t.length()  -  1);	  return    token.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
297	[BUG]  [BUGGY]  return(opt  ==  null)?  this.option  :  this.option;  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  this.option  :  this.option;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  this.option  :  this.option;	  return(opt    ==    null)?    this.option    :    opt;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
298	[BUG]  [BUGGY]  return  options.getOption(currentToken,  token);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getOption(currentToken,  token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getOption(currentToken,  token);	  return    options.getOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
299	[BUG]  [BUGGY]  return  options.getOption(opt,  value);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getOption(opt,  value);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getOption(opt,  value);	  return    options.getOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
300	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(option);  if(option!=  null)  {  break;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
301	[BUG]  [BUGGY]  options.addOption(opt,  value);  break;  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.addOption(opt,  value);  break;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.addOption(opt,  value);  break;	  options.addOption(opt);    break;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
302	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  value);  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(opt,  value);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getOption(opt,  value);	  Option    option    =    options.getOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
303	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  prefix);  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.getOption(opt,  prefix);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getOption(opt,  prefix);	  Option    option    =    options.getOption(opt,    token);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
304	[BUG]  [BUGGY]  return  matchingOpts.size()  >  1?  matchingOpts.size()  :  null;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  matchingOpts.size()  >  1?  matchingOpts.size()  :  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  matchingOpts.size()  >  1?  matchingOpts.size()  :  null;	  return    expectedOpts.size()    >    1?    matchingOpts.size()    :    null;    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
305	[BUG]  [BUGGY]  return  prefix.substring(0,  prefix.length());  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  prefix.substring(0,  prefix.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  prefix.substring(0,  prefix.length());	  return    token.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
306	[BUG]  [BUGGY]  opt  =  options.hasLongOption(option);  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  opt  =  options.hasLongOption(option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasLongOption(option);	  opt    =    options.hasLongOption(optName);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
307	[BUG]  [BUGGY]  return  preferredOpts  -  opt  +  1;  [CE]  <identifier>  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  preferredOpts  -  opt  +  1;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  preferredOpts  -  opt  +  1;	  return    preferredOpts    -    opt;    	non-compiled	[CE]  <identifier>  expected	6	None	replace
308	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  String  option  =  options.getOption(option);  if(option!=  null)  {  break;  }  [CE]  <identifier>  expected  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  String  option  =  options.getOption(option);  if(option!=  null)  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  String  option  =  options.getOption(option);  if(option!=  null)  {  break;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    String    option    =    options.getOption(opt);    if(option!=    null)    {    break;    }    	non-compiled	[CE]  <identifier>  expected	71	None	replace
309	[BUG]  [BUGGY]  return  options.toLowerCase();  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.toLowerCase();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.toLowerCase();	  return    token.toLowerCase();    	non-compiled	[CE]  <identifier>  expected	12	None	replace
310	[BUG]  [BUGGY]  return  option.getLongPrefix(this.options);  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  option.getLongPrefix(this.options);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  option.getLongPrefix(this.options);	  return    this.options.getLongPrefix(opt);    	non-compiled	[CE]  <identifier>  expected	81	None	replace
311	[BUG]  [BUGGY]  return  option.toString(),  token;  [CE]  <identifier>  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  option.toString(),  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  option.toString(),  token;	  return    option.toString();    	non-compiled	[CE]  <identifier>  expected	30	None	replace
312	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  options.addOption(opt);  }  [CE]  <identifier>  expected  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  options.addOption(opt);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  matchingOpts.size();  i++)  {  options.addOption(opt);  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    options.addOption(opt);    }    	non-compiled	[CE]  <identifier>  expected	35	None	replace
313	[BUG]  [BUGGY]  option  =  options.hasLongOption(option);  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  option  =  options.hasLongOption(option);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	option  =  options.hasLongOption(option);	  option    =    options.hasLongOption(opt);    	non-compiled	[CE]  <identifier>  expected	78	None	replace
314	[BUG]  [BUGGY]  options.hasOption(opt))  {  return  options.getOption(opt);  }  else  {  expectedOpts.add(token);  }  [CE]  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.hasOption(opt))  {  return  options.getOption(opt);  }  else  {  expectedOpts.add(token);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.hasOption(opt))  {  return  options.getOption(opt);  }  else  {  expectedOpts.add(token);  }	  if(options.hasOption(opt))    {    return    options.getOption(opt);    }    else    {    expectedOpts.add(token);    }    	non-compiled	[CE]  	48	None	replace
315	[BUG]  [BUGGY]  if(options.hasOption(optName))  {  return  options.getOption(opt);  }  [CE]  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(optName))  {  return  options.getOption(opt);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(optName))  {  return  options.getOption(opt);  }	  if(options.hasOption(opt))    {    return    options.getOption(opt);    }    	non-compiled	[CE]  	45	None	replace
316	[BUG]  [BUGGY]  if(opt!=  null)  {  return  options.getLongOption(prefix);  }  else  {  expectedOpts.add(opt);  }  [CE]  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(opt!=  null)  {  return  options.getLongOption(prefix);  }  else  {  expectedOpts.add(opt);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(opt!=  null)  {  return  options.getLongOption(prefix);  }  else  {  expectedOpts.add(opt);  }	  return    options.getLongOption(prefix);    	non-compiled	[CE]  	66	None	replace
317	[BUG]  [BUGGY]  return(opt!=  null)?  null  :  optName.substring(0,  i);  [CE]  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt!=  null)?  null  :  optName.substring(0,  i);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt!=  null)?  null  :  optName.substring(0,  i);	  return(opt!=    null)?    null    :    opt.substring(0,    i);    	non-compiled	[CE]  	95	None	replace
318	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(opt)?  option.toString()  :  toString();  [CE]  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(opt)?  option.toString()  :  toString();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(opt)?  option.toString()  :  toString();	  Option    opt    =    options.hasOption(opt)?    option.toString()    :    null;    	non-compiled	[CE]  	2	None	replace
319	[BUG]  [BUGGY]  for(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  opt.substring(i  +  1);  }  [CE]  [FE]                        java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  opt.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  opt.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    opt.substring(i    +    1);    }    	non-compiled	[CE]  	37	None	replace
320	[BUG]  [BUGGY]  for(int  i  =  expectedOpts.size()  -  2;  i  >  1;  i--)  {  opt  =  opt.substring(i  +  1);  }  [CE]  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  expectedOpts.size()  -  2;  i  >  1;  i--)  {  opt  =  opt.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  expectedOpts.size()  -  2;  i  >  1;  i--)  {  opt  =  opt.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    opt.substring(i    +    1);    }    	non-compiled	[CE]  	37	None	replace
321	[BUG]  [BUGGY]  return  options.getLongOption(optName,  token);  [CE]  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongOption(optName,  token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getLongOption(optName,  token);	  return    options.getLongOption(optName);    	non-compiled	[CE]  	92	None	replace
322	[BUG]  [BUGGY]  return  this.options.getLongPrefix(optName);  [CE]  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  this.options.getLongPrefix(optName);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  this.options.getLongPrefix(optName);	  return    this.options.getLongPrefix(opt);    	non-compiled	[CE]  	81	None	replace
323	[BUG]  [BUGGY]  return  this.options.getLongPrefix(opt,  token);  [CE]  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  this.options.getLongPrefix(opt,  token);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  this.options.getLongPrefix(opt,  token);	  return    this.options.getLongPrefix(opt);    	non-compiled	[CE]  	81	None	replace
324	[BUG]  [BUGGY]  return  expectedOpts.size()  >  2?  matchingOpts  :  opt;  [CE]  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  expectedOpts.size()  >  2?  matchingOpts  :  opt;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.size()  >  2?  matchingOpts  :  opt;	  return    expectedOpts.size()    >    2?    expectedOpts    :    opt;    	non-compiled	[CE]  	102	None	replace
325	[BUG]  [BUGGY]  return  options.getLongOption(opt,  token,  value);  [CE]  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  options.getLongOption(opt,  token,  value);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getLongOption(opt,  token,  value);	  return    options.getLongOption(opt,    token);    	non-compiled	[CE]  	65	None	replace
326	[BUG]  [BUGGY]  option  =  t.substring(0,  i);  [CE]  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  option  =  t.substring(0,  i);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	option  =  t.substring(0,  i);	  opt    =    option.substring(0,    i);    	non-compiled	[CE]  	24	None	replace
327	[BUG]  [BUGGY]  return  token.substring(0,  i.length()  -  1);  [CE]  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  token.substring(0,  i.length()  -  1);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  token.substring(0,  i.length()  -  1);	  return    token.substring(0,    opt.length()    -    1);    	non-compiled	[CE]  	13	None	replace
328	[BUG]  [BUGGY]  result  =  expectedOpts.size()  >  1?  matchingOpts.get(opt):  null;  [CE]  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  result  =  expectedOpts.size()  >  1?  matchingOpts.get(opt):  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	result  =  expectedOpts.size()  >  1?  matchingOpts.get(opt):  null;	  result    =    expectedOpts.size()    >    1?    opt    :    null;    	non-compiled	[CE]  	16	None	replace
329	[BUG]  [BUGGY]  result  =  options.size()  >  1?  opt  :  null;  [CE]  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  result  =  options.size()  >  1?  opt  :  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	result  =  options.size()  >  1?  opt  :  null;	  result    =    expectedOpts.size()    >    1?    opt    :    null;    	non-compiled	[CE]  	16	None	replace
330	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  return  options.getOption(opt,  expectedOpts);  }  else  {  expectedOpts.add(token);  }  [CE]  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(opt))  {  return  options.getOption(opt,  expectedOpts);  }  else  {  expectedOpts.add(token);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(opt))  {  return  options.getOption(opt,  expectedOpts);  }  else  {  expectedOpts.add(token);  }	  if(options.hasOption(opt))    {    return    options.getOption(opt);    }    else    {    expectedOpts.add(token);    }    	non-compiled	[CE]  	48	None	replace
331	[BUG]  [BUGGY]  return  preferredOpts  -  option;  [CE]  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  preferredOpts  -  option;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  preferredOpts  -  option;	  return    preferredOpts    -    opt;    	non-compiled	[CE]  	6	None	replace
332	[BUG]  [BUGGY]  return(token!=  null)?  option  :  toString();  [CE]  class,  interface,  or  enum  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(token!=  null)?  option  :  toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(token!=  null)?  option  :  toString();	  return(opt!=    null)?    token    :    toString();    	non-compiled	[CE]  class,  interface,  or  enum  expected	82	None	replace
333	[BUG]  [BUGGY]  for(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  option.substring(i  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  option.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  option.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    option.substring(i    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	36	None	replace
334	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }  [CE]  class,  interface,  or  enum  expected  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  1;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  1;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    continue;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	70	None	replace
335	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  return  options.getLongOption(opt);  }  else  {  expectedOpts.add(token);  }  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(opt))  {  return  options.getLongOption(opt);  }  else  {  expectedOpts.add(token);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(opt))  {  return  options.getLongOption(opt);  }  else  {  expectedOpts.add(token);  }	  if(options.hasLongOption(opt))    {    return    options.getLongOption(opt);    }    else    {    expectedOpts.add(token);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	52	None	replace
336	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  option.toString();  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  null  :  option.toString();  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  null  :  option.toString();	  return(opt    ==    null)?    null    :    opt.toString();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
337	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  1;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  1;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option.hasOption(option))    {    break;    }    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
338	[BUG]  [BUGGY]  return(opt  ==  null)?  this  :  token;  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  this  :  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  this  :  token;	  return(opt    ==    null)?    this    :    opt;    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
339	[BUG]  [BUGGY]  option  =  options.hasOption(optName)?  opt  :  option;  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  option  =  options.hasOption(optName)?  opt  :  option;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	option  =  options.hasOption(optName)?  opt  :  option;	  options.hasOption(optName))    {    opt    =    option;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
340	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  optName.substring(0,  i);  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return(opt  ==  null)?  null  :  optName.substring(0,  i);  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  null  :  optName.substring(0,  i);	  return(opt    ==    null)?    null    :    opt.substring(0,    i);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
341	[BUG]  [BUGGY]  if(options.hasOption(prefix))  {  return  options.getOption(opt,  token);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasOption(prefix))  {  return  options.getOption(opt,  token);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(prefix))  {  return  options.getOption(opt,  token);  }	  if(options.hasOption(prefix))    {    return    options.getOption(opt);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
342	[BUG]  [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(option!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(option!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
343	[BUG]  [BUGGY]  for(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  token.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  token.substring(i  +  1);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  expectedOpts.size()  -  2;  i  >  1)  {  opt  =  token.substring(i  +  1);  }	  if(opt!=    null)    {    for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    opt    =    token.substring(i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
344	[BUG]  [BUGGY]  return  option.toString()  + ": "  +  token;  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  option.toString()  + ": "  +  token;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  option.toString()  + ": "  +  token;	  return    option.toString();    	non-compiled	[CE]  class,  interface,  or  enum  expected	30	None	replace
345	[BUG]  [BUGGY]  return  matchingOpts.size()  >  1?  matchingOpts  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  matchingOpts.size()  >  1?  matchingOpts  :  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  matchingOpts.size()  >  1?  matchingOpts  :  null;	  return    expectedOpts.size()    >    1?    matchingOpts    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
346	[BUG]  [BUGGY]  return  matchingOpts.size()  >  1?  opt  :  null;  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  matchingOpts.size()  >  1?  opt  :  null;  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  matchingOpts.size()  >  1?  opt  :  null;	  return    expectedOpts.size()    >    1?    matchingOpts    :    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	56	None	replace
347	[BUG]  [BUGGY]  if(option.hasOption(opt))  {  opt  =  t.substring(0,  i  +  1);  }  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(option.hasOption(opt))  {  opt  =  t.substring(0,  i  +  1);  }  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(option.hasOption(opt))  {  opt  =  t.substring(0,  i  +  1);  }	  if(option.hasOption(opt))    {    opt    =    option.substring(0,    i    +    1);    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	80	None	replace
348	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(optName)?  option.toString()  :  option.toString();  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(optName)?  option.toString()  :  option.toString();  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(optName)?  option.toString()  :  option.toString();	  if(option.hasOption(optName))    {    opt    =    option.toString();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
349	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(optName)?  option.toString()  :  option;  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(optName)?  option.toString()  :  option;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(optName)?  option.toString()  :  option;	  if(option.hasOption(optName))    {    opt    =    option.toString();    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	104	None	replace
350	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  return  option;  }  [CE]  class,  interface,  or  enum  expected  [FE]                          java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  for(int  i  =  1;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  return  option;  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  1;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  return  option;  }	  for(int    i    =    0;    i    <    expectedOpts.size();    i++)    {    Option    option    =    options.getOption(opt);    if(option!=    null)    {    return    option;    }    	non-compiled	[CE]  class,  interface,  or  enum  expected	72	None	replace
351	[BUG]  [BUGGY]  return  prefix.substring(0,  token.length());  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  prefix.substring(0,  token.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  prefix.substring(0,  token.length());	  return    token.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
352	[BUG]  [BUGGY]  return  t.substring(0,  prefix.length());  [CE]  class,  interface,  or  enum  expected  [FE]                    java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  return  t.substring(0,  prefix.length());  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  t.substring(0,  prefix.length());	  return    token.substring(0,    prefix.length()    -    1);    	non-compiled	[CE]  class,  interface,  or  enum  expected	14	None	replace
353	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(optName,  token);  [CE]  class,  interface,  or  enum  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  cmd  =  options.getOption(optName,  token);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  cmd  =  options.getOption(optName,  token);	  Option    cmd    =    options.getOption(optName);    	non-compiled	[CE]  class,  interface,  or  enum  expected	88	None	replace
354	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(option)?  t.substring(0,  i):  null;  [CE]  ';'  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(option)?  t.substring(0,  i):  null;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(option)?  t.substring(0,  i):  null;	  Option    opt    =    options.hasOption(opt)?    option.substring(0,    i):    null;    	non-compiled	[CE]  ';'  expected	25	None	replace
355	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(opt)?  option  :  t.substring(0,  i):  null;  [CE]  class,  interface,  or  enum  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  opt  =  options.hasOption(opt)?  option  :  t.substring(0,  i):  null;  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(opt)?  option  :  t.substring(0,  i):  null;	  Option    opt    =    options.hasOption(opt)?    option.substring(0,    i):    null;    	non-compiled	[CE]  class,  interface,  or  enum  expected	25	None	replace
356	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  opt  :  t.substring(0,  i);  [CE]  class,  interface,  or  enum  expected  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(opt)?  opt  :  t.substring(0,  i);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(opt)?  opt  :  t.substring(0,  i);	  Option    option    =    options.hasOption(opt)?    opt    :    option.substring(0,    i);    	non-compiled	[CE]  class,  interface,  or  enum  expected	73	None	replace
357	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  option  :  t.substring(0,  i);  [CE]  ')'  expected  [FE]              java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(opt)?  option  :  t.substring(0,  i);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(opt)?  option  :  t.substring(0,  i);	  Option    option    =    options.hasOption(opt)?    opt    :    option.substring(0,    i);    	non-compiled	[CE]  ')'  expected	73	None	replace
358	[BUG]  [BUGGY]  Option  option  =  options.hasOption(option)?  opt  :  t.substring(0,  i);  [CE]  ')'  expected  [FE]                java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  Option  option  =  options.hasOption(option)?  opt  :  t.substring(0,  i);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(option)?  opt  :  t.substring(0,  i);	  Option    option    =    options.hasOption(opt)?    opt    :    option.substring(0,    i);    	non-compiled	[CE]  ')'  expected	73	None	replace
359	[BUG]  [BUGGY]  options.addOption(optName);  [CE]  ')'  expected  [FE]                  java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  options.addOption(optName);  [BUGGY]      return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.addOption(optName);	  options.addOption(opt);    	non-compiled	[CE]  ')'  expected	77	None	replace
360	[BUG]  [BUGGY]  if(options.hasLongOption(optName))  {  return  options.getLongOption(opt);  }  [CE]  ')'  expected  [FE]            java.lang.AssertionError:  expected  null      [CONTEXT]      for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }      [BUGGY]  if(options.hasLongOption(optName))  {  return  options.getLongOption(opt);  }  [BUGGY]      }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasLongOption(optName))  {  return  options.getLongOption(opt);  }	  if(options.hasLongOption(opt))    {    return    options.getLongOption(opt);    }    	non-compiled	[CE]  ')'  expected	49	None	replace
