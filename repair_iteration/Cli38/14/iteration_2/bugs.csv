bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  return  expectedOpts  -  opt;  [CE]  illegal  start  of  expression  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  expectedOpts  -  opt;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts  -  opt;	  return    expectedOpts;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(opt)?  option.toString()  :  null;  [CE]  illegal  start  of  expression  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  opt  =  options.hasOption(opt)?  option.toString()  :  null;  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(opt)?  option.toString()  :  null;	      if(option.hasOption(opt))    {    opt    =    option.toString();    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
3	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt);  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  opt  =  options.getOption(opt);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.getOption(opt);	      if(option.hasOption(opt))    {    opt    =    option.toString();    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
4	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  opt  :  option.toString();  [CE]  <identifier>  expected  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  option  =  options.hasOption(opt)?  opt  :  option.toString();  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(opt)?  opt  :  option.toString();	      if(option.hasOption(opt))    {    opt    =    option.toString();    }    	non-compiled	[CE]  <identifier>  expected	18	None	replace
5	[BUG]  [BUGGY]  return  preferredOpts  +  1;  [CE]  <identifier>  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  preferredOpts  +  1;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  preferredOpts  +  1;	  return    preferredOpts;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
6	[BUG]  [BUGGY]  return  preferredOpts  -  opt;  [CE]  <identifier>  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  preferredOpts  -  opt;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  preferredOpts  -  opt;	  return    preferredOpts;    	non-compiled	[CE]  <identifier>  expected	2	None	replace
7	[BUG]  [BUGGY]  return  this;  [CE]  illegal  start  of  expression  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  this;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  this;	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
8	[BUG]  [BUGGY]  return(opt!=  null)?  null  :  opt.toString();  [CE]  illegal  start  of  expression  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return(opt!=  null)?  null  :  opt.toString();  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt!=  null)?  null  :  opt.toString();	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
9	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  opt.toString();  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return(opt  ==  null)?  null  :  opt.toString();  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  null  :  opt.toString();	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
10	[BUG]  [BUGGY]  return(opt!=  null)?  null  :  opt.trim();  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return(opt!=  null)?  null  :  opt.trim();  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt!=  null)?  null  :  opt.trim();	  return    null;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
11	[BUG]  [BUGGY]  return  token.trim();  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  token.trim();  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  token.trim();	  return    token;    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	14	None	replace
12	[BUG]  [BUGGY]  return  token.toLowerCase();  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  token.toLowerCase();  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  token.toLowerCase();	  return    token;    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	14	None	replace
13	[BUG]  [BUGGY]  return  token.substring(0,  opt.length()  -  1);  [CE]  cannot  return  a  value  from  method  whose  result  type  is  void  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  token.substring(0,  opt.length()  -  1);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  token.substring(0,  opt.length()  -  1);	  return    token;    	non-compiled	[CE]  cannot  return  a  value  from  method  whose  result  type  is  void	14	None	replace
14	[BUG]  [BUGGY]  return  token.substring(0,  prefix.length()  -  1);  [CE]  variable  option  is  already  defined  in  method  handleProperties(Properties)  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  token.substring(0,  prefix.length()  -  1);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  token.substring(0,  prefix.length()  -  1);	  return    token;    	non-compiled	[CE]  variable  option  is  already  defined  in  method  handleProperties(Properties)	14	None	replace
15	[BUG]  [BUGGY]  return  expectedOpts.size()  >  1?  optName  :  null;  [CE]  variable  option  is  already  defined  in  method  handleProperties(Properties)  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  expectedOpts.size()  >  1?  optName  :  null;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.size()  >  1?  optName  :  null;	  return    expectedOpts.size()    >    1?    opt    :    null;    	non-compiled	[CE]  variable  option  is  already  defined  in  method  handleProperties(Properties)	3	None	replace
16	[BUG]  [BUGGY]  result  =  expectedOpts.size()  >  1?  opt  :  null;  [CE]  variable  option  is  already  defined  in  method  handleProperties(Properties)  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  result  =  expectedOpts.size()  >  1?  opt  :  null;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	result  =  expectedOpts.size()  >  1?  opt  :  null;	  return    expectedOpts.size()    >    1?    opt    :    null;    	non-compiled	[CE]  variable  option  is  already  defined  in  method  handleProperties(Properties)	3	None	replace
17	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(token);  [CE]  variable  option  is  already  defined  in  method  handleProperties(Properties)  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  cmd  =  options.getOption(token);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  cmd  =  options.getOption(token);	      Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  handleProperties(Properties)	9	None	replace
18	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(prefix);  [CE]  variable  option  is  already  defined  in  method  handleProperties(Properties)  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  cmd  =  options.getOption(prefix);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  cmd  =  options.getOption(prefix);	      Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  variable  option  is  already  defined  in  method  handleProperties(Properties)	9	None	replace
19	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(currentToken);  [CE]  ';'  expected  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  cmd  =  options.getOption(currentToken);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  cmd  =  options.getOption(currentToken);	      Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  ';'  expected	9	None	replace
20	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(option);  [CE]  ';'  expected  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  cmd  =  options.getOption(option);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  cmd  =  options.getOption(option);	      Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  ';'  expected	9	None	replace
21	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(opt);  break;  [CE]  cannot  find  symbol  argument  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  opt  =  options.hasOption(opt);  break;  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(opt);  break;	      if(options.hasOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol  argument	10	None	replace
22	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt);  [CE]  cannot  find  symbol  argument  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  option  =  options.hasOption(opt);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(opt);	      if(options.hasOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol  argument	10	None	replace
23	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(optName);  break;  [CE]  cannot  find  symbol  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  opt  =  options.hasOption(optName);  break;  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(optName);  break;	      if(options.hasOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
24	[BUG]  [BUGGY]  opt  =  option.substring(0,  i);  [CE]  cannot  find  symbol  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  opt  =  option.substring(0,  i);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  option.substring(0,  i);	      if(option.hasOption(opt))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
25	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(opt)?  option.substring(0,  i):  null;  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  opt  =  options.hasOption(opt)?  option.substring(0,  i):  null;  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(opt)?  option.substring(0,  i):  null;	      if(option.hasOption(opt))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
26	[BUG]  [BUGGY]  if(opt!=  null)  {  return  this.option;  }  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  if(opt!=  null)  {  return  this.option;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(opt!=  null)  {  return  this.option;  }	  return    this.option;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
27	[BUG]  [BUGGY]  return(opt!=  null)?  this.option  :  opt;  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return(opt!=  null)?  this.option  :  opt;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt!=  null)?  this.option  :  opt;	  return    this.option;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
28	[BUG]  [BUGGY]  return(opt  ==  null)?  this.option  :  opt;  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return(opt  ==  null)?  this.option  :  opt;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  this.option  :  opt;	  return    this.option;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
29	[BUG]  [BUGGY]  return(opt!=  null)?  this.option  :  option;  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return(opt!=  null)?  this.option  :  option;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt!=  null)?  this.option  :  option;	  return    this.option;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
30	[BUG]  [BUGGY]  return  option.toString();  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  option.toString();  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  option.toString();	  return    option;    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
31	[BUG]  [BUGGY]  return  option.trim();  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  option.trim();  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  option.trim();	  return    option;    	non-compiled	[CE]  cannot  find  symbol	4	None	replace
32	[BUG]  [BUGGY]  Option  opt  =  options.hasLongOption(opt);  [CE]  cannot  find  symbol  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  opt  =  options.hasLongOption(opt);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasLongOption(opt);	      if(options.hasLongOption(opt))    {    opt    =    option;    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
33	[BUG]  [BUGGY]  opt  =  options.hasLongOption(opt);  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  opt  =  options.hasLongOption(opt);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasLongOption(opt);	      if(options.hasLongOption(opt))    {    opt    =    option;    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
34	[BUG]  [BUGGY]  Option  opt  =  options.hasLongOption(optName);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  opt  =  options.hasLongOption(optName);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasLongOption(optName);	      if(options.hasLongOption(opt))    {    opt    =    option;    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  options.addOption(opt);  }  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  options.addOption(opt);  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  options.addOption(opt);  }	      	non-compiled	[CE]  cannot  find  symbol	5	None	replace
36	[BUG]  [BUGGY]  if(opt!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  if(opt!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(opt!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  option.substring(i  +  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  if(opt!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  opt.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  if(opt!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  opt.substring(i  +  1);  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(opt!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  opt.substring(i  +  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  if(opt!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  if(opt!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  1);  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(opt!=  null)  {  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  opt  =  token.substring(i  +  1);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
39	[BUG]  [BUGGY]  Option  opt  =  options.hasOption(opt);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  opt  =  options.hasOption(opt);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.hasOption(opt);	      if(options.hasOption(opt))    {    opt    =    option;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
40	[BUG]  [BUGGY]  opt  =  options.hasOption(opt);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  opt  =  options.hasOption(opt);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasOption(opt);	      if(options.hasOption(opt))    {    opt    =    option;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
41	[BUG]  [BUGGY]  Option  option  =  options.getOption(token);  [CE]  cannot  find  symbol  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  option  =  options.getOption(token);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getOption(token);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
42	[BUG]  [BUGGY]  Option  option  =  options.getOption(prefix);  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  option  =  options.getOption(prefix);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getOption(prefix);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
43	[BUG]  [BUGGY]  Option  option  =  options.getOption(currentToken);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  option  =  options.getOption(currentToken);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getOption(currentToken);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
44	[BUG]  [BUGGY]  Option  option  =  options.getOption(optionName);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  option  =  options.getOption(optionName);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getOption(optionName);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
45	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  return  options.getOption(opt);  }  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  if(options.hasOption(opt))  {  return  options.getOption(opt);  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(opt))  {  return  options.getOption(opt);  }	  return    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
46	[BUG]  [BUGGY]  return  options.getOption(token);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  options.getOption(token);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getOption(token);	  return    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
47	[BUG]  [BUGGY]  if(options.hasOption(prefix))  {  return  options.getOption(opt);  }  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  if(options.hasOption(prefix))  {  return  options.getOption(opt);  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(prefix))  {  return  options.getOption(opt);  }	  return    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
48	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  return  options.getOption(opt);  }  else  {  expectedOpts.add(token);  }  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  if(options.hasOption(opt))  {  return  options.getOption(opt);  }  else  {  expectedOpts.add(token);  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(opt))  {  return  options.getOption(opt);  }  else  {  expectedOpts.add(token);  }	  return    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
49	[BUG]  [BUGGY]  if(options.hasLongOption(opt))  {  return  options.getLongOption(opt);  }  [CE]  cannot  find  symbol  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  if(options.hasLongOption(opt))  {  return  options.getLongOption(opt);  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasLongOption(opt))  {  return  options.getLongOption(opt);  }	  return    options.getLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
50	[BUG]  [BUGGY]  if(options.hasLongOption(prefix))  {  return  options.getLongOption(opt);  }  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  if(options.hasLongOption(prefix))  {  return  options.getLongOption(opt);  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasLongOption(prefix))  {  return  options.getLongOption(opt);  }	  return    options.getLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
51	[BUG]  [BUGGY]  return  options.getLongOption(token);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  options.getLongOption(token);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getLongOption(token);	  return    options.getLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
52	[BUG]  [BUGGY]  if(options.hasLongOption(opt))  {  return  options.getLongOption(opt);  }  else  {  expectedOpts.add(token);  }  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  if(options.hasLongOption(opt))  {  return  options.getLongOption(opt);  }  else  {  expectedOpts.add(token);  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasLongOption(opt))  {  return  options.getLongOption(opt);  }  else  {  expectedOpts.add(token);  }	  return    options.getLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
53	[BUG]  [BUGGY]  if(options.hasLongOption(prefix))  {  opt  =  option;  break;  }  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  if(options.hasLongOption(prefix))  {  opt  =  option;  break;  }  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasLongOption(prefix))  {  opt  =  option;  break;  }	      if(options.hasLongOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
54	[BUG]  [BUGGY]  if(options.hasLongOption(optName))  {  opt  =  option;  break;  }  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  if(options.hasLongOption(optName))  {  opt  =  option;  break;  }  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasLongOption(optName))  {  opt  =  option;  break;  }	      if(options.hasLongOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
55	[BUG]  [BUGGY]  Option  option  =  options.getOption(optName);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  option  =  options.getOption(optName);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getOption(optName);	      if(options.hasLongOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
56	[BUG]  [BUGGY]  return  expectedOpts.size()  >  1?  matchingOpts  :  null;  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  expectedOpts.size()  >  1?  matchingOpts  :  null;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.size()  >  1?  matchingOpts  :  null;	  return    expectedOpts.size()    >    1?    opt    :    null;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
57	[BUG]  [BUGGY]  Option  option  =  options.hasLongOption(optName);  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  option  =  options.hasLongOption(optName);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasLongOption(optName);	      if(options.hasLongOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
58	[BUG]  [BUGGY]  Option  option  =  options.hasLongOption(opt);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  option  =  options.hasLongOption(opt);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasLongOption(opt);	      if(options.hasLongOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
59	[BUG]  [BUGGY]  return  token.substring(0,  i);  [CE]  cannot  find  symbol  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  token.substring(0,  i);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  token.substring(0,  i);	  return    token;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
60	[BUG]  [BUGGY]  Option  option  =  options.hasOption(optName);  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  option  =  options.hasOption(optName);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(optName);	      if(options.hasOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
61	[BUG]  [BUGGY]  options.addOption(opt);  break;  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  options.addOption(opt);  break;  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.addOption(opt);  break;	      if(options.hasOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
62	[BUG]  [BUGGY]  return  preferredOpts.toString();  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  preferredOpts.toString();  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  preferredOpts.toString();	  return    preferredOpts;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
63	[BUG]  [BUGGY]  return  preferredOpts.substring(opt.length()  -  1);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  preferredOpts.substring(opt.length()  -  1);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  preferredOpts.substring(opt.length()  -  1);	  return    preferredOpts;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
64	[BUG]  [BUGGY]  return  expectedOpts.toString();  [CE]  cannot  find  symbol  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  expectedOpts.toString();  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.toString();	  return    expectedOpts;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
65	[BUG]  [BUGGY]  return  options.getLongOption(opt,  token);  [CE]  cannot  find  symbol  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  options.getLongOption(opt,  token);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getLongOption(opt,  token);	  return    options.getLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
66	[BUG]  [BUGGY]  return  options.getLongOption(prefix);  [CE]  ';'  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  options.getLongOption(prefix);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getLongOption(prefix);	  return    options.getLongOption(opt);    	non-compiled	[CE]  ';'  expected	11	None	replace
67	[BUG]  [BUGGY]  return  options.getOption(opt,  token);  [CE]  ';'  expected  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  options.getOption(opt,  token);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getOption(opt,  token);	  return    options.getOption(opt);    	non-compiled	[CE]  ';'  expected	12	None	replace
68	[BUG]  [BUGGY]  return  options.getOption(option);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  options.getOption(option);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getOption(option);	  return    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  continue;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
71	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  String  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                    java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  String  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  String  option  =  options.getOption(opt);  if(option!=  null)  {  break;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
72	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  return  option;  }  [CE]  illegal  start  of  expression  [FE]                      java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  return  option;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option!=  null)  {  return  option;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
73	[BUG]  [BUGGY]  Option  option  =  options.hasOption(opt)?  opt  :  option.substring(0,  i);  [CE]  cannot  find  symbol  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  option  =  options.hasOption(opt)?  opt  :  option.substring(0,  i);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.hasOption(opt)?  opt  :  option.substring(0,  i);	      if(option.hasOption(opt))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
74	[BUG]  [BUGGY]  Option  option  =  options.getOption(option);  [CE]  cannot  find  symbol  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  option  =  options.getOption(option);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getOption(option);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
75	[BUG]  [BUGGY]  Option  option  =  options.getOption(opt,  token);  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  option  =  options.getOption(opt,  token);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  option  =  options.getOption(opt,  token);	      Option    option    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	13	None	replace
76	[BUG]  [BUGGY]  options.hasOption(optName))  {  opt  =  option;  }  [CE]  ';'  expected  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  options.hasOption(optName))  {  opt  =  option;  }  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.hasOption(optName))  {  opt  =  option;  }	      if(options.hasOption(opt))    {    opt    =    option;    }    	non-compiled	[CE]  ';'  expected	8	None	replace
77	[BUG]  [BUGGY]  options.addOption(opt);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  options.addOption(opt);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	options.addOption(opt);	      if(options.hasOption(opt))    {    opt    =    option;    }    	non-compiled	[CE]  cannot  find  symbol	8	None	replace
78	[BUG]  [BUGGY]  option  =  options.hasLongOption(opt);  [CE]  cannot  find  symbol  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  option  =  options.hasLongOption(opt);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	option  =  options.hasLongOption(opt);	      if(options.hasLongOption(opt))    {    opt    =    option;    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
79	[BUG]  [BUGGY]  return  options.getOption(optName);  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  options.getOption(optName);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getOption(optName);	  return    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	12	None	replace
80	[BUG]  [BUGGY]  if(option.hasOption(opt))  {  opt  =  option.substring(0,  i  +  1);  }  [CE]  cannot  find  symbol  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  if(option.hasOption(opt))  {  opt  =  option.substring(0,  i  +  1);  }  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(option.hasOption(opt))  {  opt  =  option.substring(0,  i  +  1);  }	      if(option.hasOption(opt))    {    opt    =    option.substring(0,    i);    }    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
81	[BUG]  [BUGGY]  return  this.options.getLongPrefix(opt);  [CE]  cannot  find  symbol  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  this.options.getLongPrefix(opt);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  this.options.getLongPrefix(opt);	  return    token;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
82	[BUG]  [BUGGY]  return(opt!=  null)?  token  :  toString();  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return(opt!=  null)?  token  :  toString();  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt!=  null)?  token  :  toString();	  return    token;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
83	[BUG]  [BUGGY]  return(opt!=  null)?  token  :  prefix;  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return(opt!=  null)?  token  :  prefix;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt!=  null)?  token  :  prefix;	  return    token;    	non-compiled	[CE]  cannot  find  symbol	14	None	replace
84	[BUG]  [BUGGY]  return  preferredOpts.size()  >  1?  preferredOpts  :  opt;  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  preferredOpts.size()  >  1?  preferredOpts  :  opt;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  preferredOpts.size()  >  1?  preferredOpts  :  opt;	  return    preferredOpts;    	non-compiled	[CE]  cannot  find  symbol	2	None	replace
85	[BUG]  [BUGGY]  return  expectedOpts.size()  >  1?  matchingOpts.size()  :  null;  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  expectedOpts.size()  >  1?  matchingOpts.size()  :  null;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.size()  >  1?  matchingOpts.size()  :  null;	  return    expectedOpts.size()    >    1?    opt    :    null;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
86	[BUG]  [BUGGY]  return  expectedOpts.size()  >  1?  matchingOpts.get(opt):  null;  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  expectedOpts.size()  >  1?  matchingOpts.get(opt):  null;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.size()  >  1?  matchingOpts.get(opt):  null;	  return    expectedOpts.size()    >    1?    opt    :    null;    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
87	[BUG]  [BUGGY]  Option  opt  =  options.getOption(opt);  break;  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  opt  =  options.getOption(opt);  break;  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  opt  =  options.getOption(opt);  break;	      if(options.hasLongOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol	7	None	replace
88	[BUG]  [BUGGY]  Option  cmd  =  options.getOption(optName);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  Option  cmd  =  options.getOption(optName);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	Option  cmd  =  options.getOption(optName);	      Option    cmd    =    options.getOption(opt);    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
89	[BUG]  [BUGGY]  return(opt  ==  null)?  this  :  opt;  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return(opt  ==  null)?  this  :  opt;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  this  :  opt;	  return    this.option;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
90	[BUG]  [BUGGY]  return(opt  ==  null)?  this.option  :  option;  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return(opt  ==  null)?  this.option  :  option;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  this.option  :  option;	  return    this.option;    	non-compiled	[CE]  cannot  find  symbol	15	None	replace
91	[BUG]  [BUGGY]  if(options.hasOption(opt))  {  return  options.getLongOption(opt);  }  [CE]  cannot  find  symbol  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  if(options.hasOption(opt))  {  return  options.getLongOption(opt);  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(opt))  {  return  options.getLongOption(opt);  }	  return    options.getLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
92	[BUG]  [BUGGY]  return  options.getLongOption(optName);  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  options.getLongOption(optName);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  options.getLongOption(optName);	  return    options.getLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
93	[BUG]  [BUGGY]  if(options.hasOption(optName))  {  return  options.getLongOption(opt);  }  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  if(options.hasOption(optName))  {  return  options.getLongOption(opt);  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(optName))  {  return  options.getLongOption(opt);  }	  return    options.getLongOption(opt);    	non-compiled	[CE]  cannot  find  symbol	11	None	replace
94	[BUG]  [BUGGY]  opt  =  options.hasLongOption(optName);  [CE]  cannot  find  symbol  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  opt  =  options.hasLongOption(optName);  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasLongOption(optName);	      if(options.hasLongOption(opt))    {    opt    =    option;    }    	non-compiled	[CE]  cannot  find  symbol	6	None	replace
95	[BUG]  [BUGGY]  return(opt!=  null)?  null  :  opt.substring(0,  i);  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return(opt!=  null)?  null  :  opt.substring(0,  i);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt!=  null)?  null  :  opt.substring(0,  i);	  return    null;    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
96	[BUG]  [BUGGY]  return(opt  ==  null)?  null  :  opt.substring(0,  i);  [CE]  cannot  find  symbol  [FE]              java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return(opt  ==  null)?  null  :  opt.substring(0,  i);  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return(opt  ==  null)?  null  :  opt.substring(0,  i);	  return    null;    	non-compiled	[CE]  cannot  find  symbol	16	None	replace
97	[BUG]  [BUGGY]  if(options.hasOption(optName))  {  opt  =  option;  break;  }  [CE]  cannot  find  symbol  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  if(options.hasOption(optName))  {  opt  =  option;  break;  }  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(options.hasOption(optName))  {  opt  =  option;  break;  }	      if(options.hasOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
98	[BUG]  [BUGGY]  opt  =  options.hasOption(opt);  break;  [CE]  cannot  find  symbol  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  opt  =  options.hasOption(opt);  break;  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  options.hasOption(opt);  break;	      if(options.hasOption(opt))    {    opt    =    option;    break;    }    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(!stopAtNonOption)  {  break;  }  [CE]  illegal  start  of  expression  [FE]                java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(!stopAtNonOption)  {  break;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(!stopAtNonOption)  {  break;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  [CE]  illegal  start  of  expression  [FE]                  java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	for(int  i  =  0;  i  <  expectedOpts.size();  i++)  {  Option  option  =  options.getOption(opt);  if(option.hasOption(option))  {  break;  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
101	[BUG]  [BUGGY]  return  expectedOpts.size()  >  1?  expectedOpts  :  opt;  [CE]  cannot  find  symbol  [FE]        java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  expectedOpts.size()  >  1?  expectedOpts  :  opt;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.size()  >  1?  expectedOpts  :  opt;	  return    expectedOpts;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
102	[BUG]  [BUGGY]  return  expectedOpts.size()  >  2?  expectedOpts  :  opt;  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  return  expectedOpts.size()  >  2?  expectedOpts  :  opt;  [BUGGY]    }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	return  expectedOpts.size()  >  2?  expectedOpts  :  opt;	  return    expectedOpts;    	non-compiled	[CE]  cannot  find  symbol	1	None	replace
103	[BUG]  [BUGGY]  opt  =  option.toString();  [CE]  cannot  find  symbol  [FE]          java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  opt  =  option.toString();  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	opt  =  option.toString();	      if(option.hasOption(opt))    {    opt    =    option.toString();    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
104	[BUG]  [BUGGY]  if(option.hasOption(optName))  {  opt  =  option.toString();  }  [CE]  cannot  find  symbol  [FE]            java.lang.AssertionError:  expected  null    [CONTEXT]    for  (i  =  t.length()  -  2;  i  >  1;  i--)  {  String  prefix  =  t.substring(0,  i);  if  (options.hasLongOption(prefix))  {  opt  =  prefix;  break;  }  }    [BUGGY]  if(option.hasOption(optName))  {  opt  =  option.toString();  }  [BUGGY]    return  opt;  }  [CLASS]  DefaultParser  [METHOD]  getLongPrefix  [RETURN_TYPE]  String  String  token  [VARIABLES]  Options  options  CommandLine  cmd  boolean  selected  skipParsing  stopAtNonOption  Option  currentOption  opt  option  List  expectedOpts  matchingOpts  String  argument  currentToken  opt  optName  option  prefix  t  token  value  int  i  	projects/Cli38/src/main/java/org/apache/commons/cli/DefaultParser.java	0.7071067811865475	591	591	1	replace	if(option.hasOption(optName))  {  opt  =  option.toString();  }	      if(option.hasOption(opt))    {    opt    =    option.toString();    }    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
