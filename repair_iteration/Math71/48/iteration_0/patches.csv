bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]    System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	    System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);		non-compiled	[CE]  illegal  start  of  expression	96	None	add
2	[BUG]  [BUGGY]    if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]    if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	    if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }		non-compiled	[CE]  illegal  start  of  expression	96	None	add
3	[BUG]  [BUGGY]    System.arraycopy(yTmp,  0,  y,  0,  y0.length);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]    System.arraycopy(yTmp,  0,  y,  0,  y0.length);  [BUGGY]  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	    System.arraycopy(yTmp,  0,  y,  0,  y0.length);		non-compiled	[CE]  illegal  start  of  expression	96	None	add
4	[BUG]  [BUGGY]    System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]    System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	    System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);		non-compiled	[CE]  illegal  start  of  expression	96	None	add
5	[BUG]  [BUGGY]    if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  System.arraycopy(yTmp,  0,  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]    if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  System.arraycopy(yTmp,  0,  [BUGGY]  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	    if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  System.arraycopy(yTmp,  0,		non-compiled	[CE]  illegal  start  of  expression	96	None	add
6	[BUG]  [BUGGY]  lastStep  =  manager.stopTime();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]  lastStep  =  manager.stopTime();  [BUGGY]    interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.stopTime();	lastStep  =  manager.stop();  	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
7	[BUG]  [BUGGY]  lastStep  =  manager.handleStep(interpolator,  nextStep);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]  lastStep  =  manager.handleStep(interpolator,  nextStep);  [BUGGY]    interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.handleStep(interpolator,  nextStep);	lastStep  =  manager.stop();  	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
8	[BUG]  [BUGGY]  lastStep  =  manager.stopTime;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]  lastStep  =  manager.stopTime;  [BUGGY]    interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.stopTime;	lastStep  =  manager.stop();  	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
9	[BUG]  [BUGGY]    if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]    if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	    if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }		non-compiled	[CE]  illegal  start  of  expression	96	None	add
10	[BUG]  [BUGGY]    if(manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]    if(manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	    if(manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }		non-compiled	[CE]  illegal  start  of  expression	96	None	add
11	[BUG]  [BUGGY]  lastStep  =  manager.interpolator.stop();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]  lastStep  =  manager.interpolator.stop();  [BUGGY]    interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.interpolator.stop();	lastStep  =  manager.stop();  	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
12	[BUG]  [BUGGY]    if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]    if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	    if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }		non-compiled	[CE]  illegal  start  of  expression	96	None	add
13	[BUG]  [BUGGY]    if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]    if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [BUGGY]  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	    if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }		non-compiled	[CE]  illegal  start  of  expression	96	None	add
14	[BUG]  [BUGGY]  lastStep  =  manager.stopTime(nextStep);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]  lastStep  =  manager.stopTime(nextStep);  [BUGGY]    interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.stopTime(nextStep);	lastStep  =  manager.stop();  	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
