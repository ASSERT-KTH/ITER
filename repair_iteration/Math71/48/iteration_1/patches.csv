bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  lastStep  =  manager.stopTime(nextStep,  nextStep);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.stopTime(nextStep,  nextStep);  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.stopTime(nextStep,  nextStep);	  lastStep    =    manager.stopTime(nextStep);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
2	[BUG]  [BUGGY]  lastStep  =  manager.stopTime(nextStep  +  stepSize);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.stopTime(nextStep  +  stepSize);  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.stopTime(nextStep  +  stepSize);	  lastStep    =    manager.stopTime(nextStep);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
3	[BUG]  [BUGGY]  lastStep  =  manager.stopTime(nextStep,  stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.stopTime(nextStep,  stepStart);  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.stopTime(nextStep,  stepStart);	  lastStep    =    manager.stopTime(nextStep);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
4	[BUG]  [BUGGY]  lastStep  =  handler.handleStep(interpolator,  nextStep);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  handler.handleStep(interpolator,  nextStep);  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  handler.handleStep(interpolator,  nextStep);	  lastStep    =    manager.handleStep(interpolator,    nextStep);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  lastStep  =  nextStep.handleStep(interpolator,  nextStep);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  nextStep.handleStep(interpolator,  nextStep);  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  nextStep.handleStep(interpolator,  nextStep);	  lastStep    =    manager.handleStep(interpolator,    nextStep);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  lastStep  =  manager.handleStep(interpolator,  nextStep  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.handleStep(interpolator,  nextStep  +  1);  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.handleStep(interpolator,  nextStep  +  1);	  lastStep    =    manager.handleStep(interpolator,    nextStep);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  manager.stepAccepted(nextStep,  y0);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  manager.stepAccepted(nextStep,  y0);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	manager.stepAccepted(nextStep,  y0);	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
8	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  nextStep,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  nextStep,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  nextStep,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    System.arraycopy(yTmp,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  nextStep,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  nextStep,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(y0,  0,  nextStep,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    System.arraycopy(yTmp,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    System.arraycopy(yTmp,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  nextStep,  0,  nextStep.length);  System.arraycopy(y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  nextStep,  0,  nextStep.length);  System.arraycopy(y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(y0,  0,  nextStep,  0,  nextStep.length);  System.arraycopy(y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    System.arraycopy(yTmp,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  if(nextStep!=  null)  {  if(!manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  if(!manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  if(!manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(manager.reset(nextStep,    y)&&!lastStep)    {    System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
15	[BUG]  [BUGGY]  if(nextStep  ==  null)  {  if(!manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep  ==  null)  {  if(!manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep  ==  null)  {  if(!manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(manager.reset(nextStep,    y)&&!lastStep)    {    System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
16	[BUG]  [BUGGY]  manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(manager.reset(nextStep,    y)&&!lastStep)    {    System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
17	[BUG]  [BUGGY]  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  manager.stepAccepted(nextStep,  y);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	manager.stepAccepted(nextStep,  y);	      System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
18	[BUG]  [BUGGY]  Manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  Manager.stepAccepted(nextStep,  y);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	Manager.stepAccepted(nextStep,  y);	      System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);	      System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
20	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  System.arraycopy(yTmp,  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  System.arraycopy(yTmp,  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  System.arraycopy(yTmp,	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    else    {    System.arraycopy(yTmp,    0,    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
21	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  System.arraycopy(yTmp,  0,  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  System.arraycopy(yTmp,  0,  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  System.arraycopy(yTmp,  0,	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    else    {    System.arraycopy(yTmp,    0,    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
22	[BUG]  [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
23	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
24	[BUG]  [BUGGY]  lastStep  =  nextStep.stopTime();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  nextStep.stopTime();  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  nextStep.stopTime();	  lastStep    =    manager.stopTime();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
25	[BUG]  [BUGGY]  lastStep  =  manager.stopTime(t0);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.stopTime(t0);  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.stopTime(t0);	  lastStep    =    manager.stopTime();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
26	[BUG]  [BUGGY]  lastStep  =  manager.interpolator.stopTime();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.interpolator.stopTime();  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.interpolator.stopTime();	  lastStep    =    manager.interpolator.stop();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
27	[BUG]  [BUGGY]  lastStep  =  manager.interpolator.handleStep(t0,  nextStep);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.interpolator.handleStep(t0,  nextStep);  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.interpolator.handleStep(t0,  nextStep);	  lastStep    =    manager.interpolator.stop();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
28	[BUG]  [BUGGY]  lastStep  =  manager.interpolator.handleStep(nextStep,  nextStep);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.interpolator.handleStep(nextStep,  nextStep);  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.interpolator.handleStep(nextStep,  nextStep);	  lastStep    =    manager.interpolator.stop();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  lastStep  =  nextStep;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  nextStep;  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  nextStep;	  lastStep    =    manager.stopTime;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  lastStep  =  manager.stopTime  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.stopTime  -  1;  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.stopTime  -  1;	  lastStep    =    manager.stopTime;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  lastStep  =  manager.stepSize;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.stepSize;  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.stepSize;	  lastStep    =    manager.stopTime;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  nextStep,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  nextStep,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  nextStep,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  y0.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  y0.length);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	System.arraycopy(y0,  0,  yTmp,  0,  y0.length);	      System.arraycopy(yTmp,    0,    y,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  y0.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  y0.length);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	System.arraycopy(y0,  0,  ytmp,  0,  y0.length);	      System.arraycopy(yTmp,    0,    y,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  y0.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  y0.length);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	System.arraycopy(y0,  0,  y1,  0,  y0.length);	      System.arraycopy(yTmp,    0,    y,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
36	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y,  0,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  System.arraycopy(y0,  0,  y,  0,  yTmp.length);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	System.arraycopy(y0,  0,  y,  0,  yTmp.length);	      System.arraycopy(yTmp,    0,    y,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
37	[BUG]  [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
38	[BUG]  [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
39	[BUG]  [BUGGY]  lastStep  =  manager.stopTime()  -  1;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.stopTime()  -  1;  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.stopTime()  -  1;	  lastStep    =    manager.stopTime();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
41	[BUG]  [BUGGY]  System.arraycopy(nextStep,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  System.arraycopy(nextStep,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	System.arraycopy(nextStep,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
42	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
43	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(lastStep,  0,  y,  0,  nextStep.length);  System.arraycopy(lastStep,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(lastStep,  0,  y,  0,  nextStep.length);  System.arraycopy(lastStep,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(lastStep,  0,  y,  0,  nextStep.length);  System.arraycopy(lastStep,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    System.arraycopy(yTmp,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
44	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(lastStep,  0,  y,  0,  nextStep.length);  System.arraycopy(lastStep,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(lastStep,  0,  y,  0,  nextStep.length);  System.arraycopy(lastStep,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(lastStep,  0,  y,  0,  nextStep.length);  System.arraycopy(lastStep,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    System.arraycopy(yTmp,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
45	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(nextStep,  0,  y0,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(nextStep,  0,  y0,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(nextStep,  0,  y0,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    System.arraycopy(yTmp,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
46	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(t0,  0,  y,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(t0,  0,  y,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(t0,  0,  y,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    System.arraycopy(yTmp,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);	      System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
48	[BUG]  [BUGGY]  Manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  Manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	Manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }	      if(manager.reset(nextStep,    y)&&!lastStep)    {    System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
49	[BUG]  [BUGGY]  Manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y0,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  Manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y0,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	Manager.reset(nextStep,  y)&&!lastStep)  {  System.arraycopy(yTmp,  0,  y0,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }	      if(manager.reset(nextStep,    y)&&!lastStep)    {    System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
50	[BUG]  [BUGGY]  lastStep  =  manager.stopTime  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.stopTime  +  1;  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.stopTime  +  1;	  lastStep    =    manager.stopTime;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
51	[BUG]  [BUGGY]  lastStep  =  manager.handleStep(interpolator);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.handleStep(interpolator);  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.handleStep(interpolator);	  lastStep    =    manager.stopTime;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
52	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  else  {  System.arraycopy(yTmp,  0,  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  else  {  System.arraycopy(yTmp,  0,  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  else  {  System.arraycopy(yTmp,  0,	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    else    {    System.arraycopy(yTmp,    0,    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
53	[BUG]  [BUGGY]  lastStep  =  manager.interpolator.stopTime(nextStep);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.interpolator.stopTime(nextStep);  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.interpolator.stopTime(nextStep);	  lastStep    =    manager.interpolator.stop();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
54	[BUG]  [BUGGY]  lastStep  =  manager.stopTime(nextStep  +  1);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.stopTime(nextStep  +  1);  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.stopTime(nextStep  +  1);	  lastStep    =    manager.stopTime(nextStep);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
55	[BUG]  [BUGGY]  lastStep  =  manager.stopTime(nextStep,  y0);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.stopTime(nextStep,  y0);  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.stopTime(nextStep,  y0);	  lastStep    =    manager.stopTime(nextStep);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
56	[BUG]  [BUGGY]  lastStep  =  manager.stopTime(nextStep  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.stopTime(nextStep  -  1);  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.stopTime(nextStep  -  1);	  lastStep    =    manager.stopTime(nextStep);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
57	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
58	[BUG]  [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep  ==  null)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
59	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(t0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(t0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(t0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
60	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
61	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y,  0,  y0.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  System.arraycopy(y0,  0,  y,  0,  y0.length);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	System.arraycopy(y0,  0,  y,  0,  y0.length);	      System.arraycopy(yTmp,    0,    y,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
62	[BUG]  [BUGGY]  lastStep  =  manager.handleStep(interpolator,  nextStep  -  1);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.handleStep(interpolator,  nextStep  -  1);  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.handleStep(interpolator,  nextStep  -  1);	  lastStep    =    manager.handleStep(interpolator,    nextStep);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
63	[BUG]  [BUGGY]  System.arraycopy(nextStep,  0,  y0,  0,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  System.arraycopy(nextStep,  0,  y0,  0,  nextStep.length);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	System.arraycopy(nextStep,  0,  y0,  0,  nextStep.length);	      System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
64	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	System.arraycopy(y0,  0,  y0,  0,  nextStep.length);	      System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);	      System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
66	[BUG]  [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y0);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
67	[BUG]  [BUGGY]  if(lastStep  ==  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(lastStep  ==  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(lastStep  ==  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(manager.reset(nextStep,    y)&&!lastStep)    {    System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
68	[BUG]  [BUGGY]  if(lastStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(lastStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(lastStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(manager.reset(nextStep,    y)&&!lastStep)    {    System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
69	[BUG]  [BUGGY]  if(manager!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(manager!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(manager!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
70	[BUG]  [BUGGY]  if(manager!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(manager!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(manager!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
71	[BUG]  [BUGGY]  if(manager!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  System.arraycopy(yTmp,  0,  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(manager!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  System.arraycopy(yTmp,  0,  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(manager!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  System.arraycopy(yTmp,  0,	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    else    {    System.arraycopy(yTmp,    0,    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
72	[BUG]  [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  System.arraycopy(yTmp,  0,  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  System.arraycopy(yTmp,  0,  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  System.arraycopy(yTmp,  0,	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    else    {    System.arraycopy(yTmp,    0,    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
73	[BUG]  [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    System.arraycopy(yTmp,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
74	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  nextStep,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  nextStep,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	if(nextStep!=  null)  {  System.arraycopy(y0,  0,  nextStep,  0,  nextStep.length);  System.arraycopy(yTmp,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    System.arraycopy(yTmp,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
75	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  nextStep,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  System.arraycopy(y0,  0,  nextStep,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	System.arraycopy(y0,  0,  nextStep,  0,  y0.length);  manager.stepAccepted(nextStep,  y);	      if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    System.arraycopy(yTmp,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
76	[BUG]  [BUGGY]  System.arraycopy(c,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  System.arraycopy(c,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	System.arraycopy(c,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);	      System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]    lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);	      System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
78	[BUG]  [BUGGY]  lastStep  =  manager.interpolator.handleStep(interpolator,  nextStep);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);    [BUGGY]  lastStep  =  manager.interpolator.handleStep(interpolator,  nextStep);  [BUGGY]      interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	195	195	2	replace	lastStep  =  manager.interpolator.handleStep(interpolator,  nextStep);	  lastStep    =    manager.interpolator.stop();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
