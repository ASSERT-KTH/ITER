bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ensureCapacity(t0,  y0,  stages[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(t0,  y0,  stages[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  y0,  stages[0]);	  ensureCapacity(t0,    y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
2	[BUG]  [BUGGY]  ensureCapacity(t0,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(t0,  stage,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  stage,  yDotK[0]);	  ensureCapacity(t0,    y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
3	[BUG]  [BUGGY]  ensureCapacity(y0,  t0,  stages[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(y0,  t0,  stages[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(y0,  t0,  stages[0]);	  ensureCapacity(y0,    t0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
4	[BUG]  [BUGGY]  ensureCapacity(y0,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(y0,  stages,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(y0,  stages,  yDotK[0]);	  ensureCapacity(y0,    t0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
5	[BUG]  [BUGGY]  ensureCapacity(stages,  t0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(stages,  t0,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(stages,  t0,  yDotK[0]);	  ensureCapacity(y0,    t0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
6	[BUG]  [BUGGY]  ensureCapacity(y0,  t0,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(y0,  t0,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(y0,  t0,  yTmp[0]);	  ensureCapacity(y0,    t0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
7	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.cloneTree();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(int)interpolator.cloneTree();  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.cloneTree();	  Integer    stages    =(Integer)interpolator.cloneTree();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
8	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.getStepSize()  /  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(Integer)interpolator.getStepSize()  /  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.getStepSize()  /  1;	  Integer    stages    =(Integer)interpolator.getStepSize()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
9	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.getStepSize()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(int)interpolator.getStepSize()  +  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.getStepSize()  +  1;	  Integer    stages    =(Integer)interpolator.getStepSize()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
10	[BUG]  [BUGGY]  validateDerivatives(t0,  y0,  stages[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(t0,  y0,  stages[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  y0,  stages[0]);	  validateDerivatives(t0,    y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
11	[BUG]  [BUGGY]  ensureDerivatives(t0,  y0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureDerivatives(t0,  y0,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureDerivatives(t0,  y0,  yDotK[0]);	  computeDerivatives(t0,    y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
12	[BUG]  [BUGGY]  computeDerivatives(t0,  y0,  stages[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  y0,  stages[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y0,  stages[0]);	  computeDerivatives(t0,    y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
13	[BUG]  [BUGGY]  ensureCapacity(t0,  y0[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(t0,  y0[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  y0[0]);	  ensureCapacity(stages,    y0[0]);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
14	[BUG]  [BUGGY]  ensureCapacity(y0[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(y0[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(y0[0]);	  ensureCapacity(stages,    y0[0]);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
15	[BUG]  [BUGGY]  Integer  stages  =  getSteps().length  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps().length  -  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps().length  -  1;	  Integer    stages    =    getSteps().length;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
16	[BUG]  [BUGGY]  Integer  stages  =  getSteps().length  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps().length  +  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps().length  +  1;	  Integer    stages    =    getSteps().length;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
17	[BUG]  [BUGGY]  Integer  stages  =  getSteps().length  -  2;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps().length  -  2;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps().length  -  2;	  Integer    stages    =    getSteps().length;    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
18	[BUG]  [BUGGY]  StageTraversal.traverse(interpolator,  prototype,  new  RungeKuttaStepInterpolator());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageTraversal.traverse(interpolator,  prototype,  new  RungeKuttaStepInterpolator());  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageTraversal.traverse(interpolator,  prototype,  new  RungeKuttaStepInterpolator());	  StageTraversal.traverse(interpolator,    new    RungeKuttaStepInterpolator());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
19	[BUG]  [BUGGY]  StageTraversal.traverse(this,  interpolator,  new  RungeKuttaStepInterpolator());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageTraversal.traverse(this,  interpolator,  new  RungeKuttaStepInterpolator());  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageTraversal.traverse(this,  interpolator,  new  RungeKuttaStepInterpolator());	  StageTraversal.traverse(interpolator,    new    RungeKuttaStepInterpolator());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
20	[BUG]  [BUGGY]  StageTraversal.traverse(compiler,  interpolator,  new  RungeKuttaStepInterpolator());  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageTraversal.traverse(compiler,  interpolator,  new  RungeKuttaStepInterpolator());  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageTraversal.traverse(compiler,  interpolator,  new  RungeKuttaStepInterpolator());	  StageTraversal.traverse(interpolator,    new    RungeKuttaStepInterpolator());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
21	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interpolator.getStepHandler(t0);	  StageHandler    stageHandler    =    interpolator.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
22	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepInterpolator();  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interpolator.getStepInterpolator();	  StageHandler    stageHandler    =    interpolator.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
23	[BUG]  [BUGGY]  ensureCapacity(stages,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(stages,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(stages,  yTmp[0]);	  ensureCapacity(y0,    yTmp[0]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
24	[BUG]  [BUGGY]  ensureCapacity(t0,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(t0,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  yTmp[0]);	  ensureCapacity(y0,    yTmp[0]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
25	[BUG]  [BUGGY]  Integer  stages  =  getSize()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSize()  -  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSize()  -  1;	  Integer    stages    =    getSteps()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
26	[BUG]  [BUGGY]  Integer  stages  =  getSteps()  *  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps()  *  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps()  *  1;	  Integer    stages    =    getSteps()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
27	[BUG]  [BUGGY]  ensureCapacity(t0,  y,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(t0,  y,  stages,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  y,  stages,  yDotK[0]);	  computeDerivatives(t0,    y,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
28	[BUG]  [BUGGY]  validateDerivatives(t0,  y,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(t0,  y,  stages,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  y,  stages,  yDotK[0]);	  computeDerivatives(t0,    y,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
29	[BUG]  [BUGGY]  computeDerivatives(t0,  y,  stages,  a,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  y,  stages,  a,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y,  stages,  a,  yDotK[0]);	  computeDerivatives(t0,    y,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
30	[BUG]  [BUGGY]  transform(y0,  t0,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  transform(y0,  t0,  stages,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	transform(y0,  t0,  stages,  yDotK[0]);	  computeDerivatives(t0,    y,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
31	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.getStep();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(int)interpolator.getStep();  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.getStep();	  Integer    stages    =(Integer)interpolator.getStep();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
32	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.getStandardStep();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(Integer)interpolator.getStandardStep();  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.getStandardStep();	  Integer    stages    =(Integer)interpolator.getStep();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
33	[BUG]  [BUGGY]  PhaseHandler  stageHandler  =  prototype.getStepHandler(interpolator);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  PhaseHandler  stageHandler  =  prototype.getStepHandler(interpolator);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	PhaseHandler  stageHandler  =  prototype.getStepHandler(interpolator);	  PhaseHandler    stageHandler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
34	[BUG]  [BUGGY]  PhaseHandler  stageHandler  =  prototype.getStepHandler(t0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  PhaseHandler  stageHandler  =  prototype.getStepHandler(t0);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	PhaseHandler  stageHandler  =  prototype.getStepHandler(t0);	  PhaseHandler    stageHandler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
35	[BUG]  [BUGGY]  PhaseHandler  stageHandler  =  prototype.getStepHandler(loop);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  PhaseHandler  stageHandler  =  prototype.getStepHandler(loop);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	PhaseHandler  stageHandler  =  prototype.getStepHandler(loop);	  PhaseHandler    stageHandler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
36	[BUG]  [BUGGY]  validateDerivatives(t0,  yTmp,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(t0,  yTmp,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  yTmp,  yDotK[0]);	  validateDerivatives(t0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
37	[BUG]  [BUGGY]  validateDerivatives(y0,  stages,  t0[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(y0,  stages,  t0[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(y0,  stages,  t0[0]);	  validateDerivatives(t0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
38	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(prototype);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(prototype);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interpolator.getStepHandler(prototype);	  StageHandler    stageHandler    =    prototype.getStepHandler(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
39	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(prototype);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(prototype);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(prototype);	  StageHandler    stageHandler    =    prototype.getStepHandler(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
40	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(protocol);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(protocol);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interpolator.getStepHandler(protocol);	  StageHandler    stageHandler    =    prototype.getStepHandler(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
41	[BUG]  [BUGGY]  int  stepSize  =  getStepStart()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  int  stepSize  =  getStepStart()  -  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	int  stepSize  =  getStepStart()  -  1;	  int    stepSize    =    getStepSize()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
42	[BUG]  [BUGGY]  int  stepSize  =  getStepSize()  *  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  int  stepSize  =  getStepSize()  *  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	int  stepSize  =  getStepSize()  *  1;	  int    stepSize    =    getStepSize()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
43	[BUG]  [BUGGY]  Integer  stages  =  getSteps(stepStart,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(stepStart,  0);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(stepStart,  0);	  Integer    stages    =    getSteps(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
44	[BUG]  [BUGGY]  Integer  stages  =  getSteps(y0.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(y0.length);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(y0.length);	  Integer    stages    =    getSteps(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
45	[BUG]  [BUGGY]  Integer  stages  =  getSteps(stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(stepStart,  stepSize);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(stepStart,  stepSize);	  Integer    stages    =    getSteps(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
46	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.nextStep);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.nextStep);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.nextStep);	  Integer    stages    =    getSteps(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
47	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  2);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getSteps(),  2);	  Integer    stages    =    getSteps(interpolator.getSteps(),    0);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
48	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  3);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  3);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getSteps(),  3);	  Integer    stages    =    getSteps(interpolator.getSteps(),    0);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
49	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  4);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  4);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getSteps(),  4);	  Integer    stages    =    getSteps(interpolator.getSteps(),    0);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
50	[BUG]  [BUGGY]  computeDerivatives(dt,  y0,  steps,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(dt,  y0,  steps,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(dt,  y0,  steps,  yDotK[0]);	  computeDerivatives(y0,    steps,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
51	[BUG]  [BUGGY]  computeDerivatives(t0,  steps,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  steps,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  steps,  yDotK[0]);	  computeDerivatives(y0,    steps,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
52	[BUG]  [BUGGY]  computeDerivatives(y0,  steps,  t,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(y0,  steps,  t,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(y0,  steps,  t,  yDotK[0]);	  computeDerivatives(y0,    steps,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
53	[BUG]  [BUGGY]  computeDerivatives(t0,  yDotK[0],  steps);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  yDotK[0],  steps);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  yDotK[0],  steps);	  computeDerivatives(y0,    steps,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
54	[BUG]  [BUGGY]  int  stepSize  =  getStepSize()  /  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  int  stepSize  =  getStepSize()  /  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	int  stepSize  =  getStepSize()  /  1;	  int    stepSize    =    getStepSize()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
55	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interface.getStepInterpolator();  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStepInterpolator();	  StageHandler    stageHandler    =    prototype.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
56	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  loop);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  loop);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(t0,  loop);	  StageHandler    stageHandler    =    interface.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
57	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  stages);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  stages);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(t0,  stages);	  StageHandler    stageHandler    =    interface.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
58	[BUG]  [BUGGY]  test(t0,  y,  a,  stages[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  y,  a,  stages[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y,  a,  stages[0]);	  test(t0,    y,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
59	[BUG]  [BUGGY]  test(t0,  y0,  stages[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  y0,  stages[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y0,  stages[0]);	  test(t0,    y,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
60	[BUG]  [BUGGY]  test(t0,  y,  stages[0],  loop);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  y,  stages[0],  loop);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y,  stages[0],  loop);	  test(t0,    y,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
61	[BUG]  [BUGGY]  test(t0,  y1,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  y1,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y1,  yDotK[0]);	  test(t0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
62	[BUG]  [BUGGY]  test(y0,  stages,  t0[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(y0,  stages,  t0[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(y0,  stages,  t0[0]);	  test(t0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
63	[BUG]  [BUGGY]  test(t0,  y0,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  y0,  stage,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y0,  stage,  yDotK[0]);	  test(t0,    y,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
64	[BUG]  [BUGGY]  test(y0,  t0,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(y0,  t0,  stage,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(y0,  t0,  stage,  yDotK[0]);	  test(t0,    y,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
65	[BUG]  [BUGGY]  test(a,  y0,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(a,  y0,  stage,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(a,  y0,  stage,  yDotK[0]);	  test(t0,    y,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
66	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y0,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y0,  yDotK[0]);	  evaluateDerivatives(t0,    y1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
67	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y1,  a,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y1,  a,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y1,  a,  yDotK[0]);	  evaluateDerivatives(t0,    y1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
68	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.steps()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(Integer)interpolator.steps()  -  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.steps()  -  1;	  Integer    stages    =(Integer)interpolator.steps();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
69	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.steps();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(int)interpolator.steps();  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.steps();	  Integer    stages    =(Integer)interpolator.steps();    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
70	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.getStepStart();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(int)interpolator.getStepStart();  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.getStepStart();	  Integer    stages    =(Integer)interpolator.getStepStart();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
71	[BUG]  [BUGGY]  ensureCapacity(y0,  t,  stages[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(y0,  t,  stages[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(y0,  t,  stages[0]);	  ensureCapacity(y0,    t,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
72	[BUG]  [BUGGY]  ensureCapacity(stages,  t,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(stages,  t,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(stages,  t,  yDotK[0]);	  ensureCapacity(y0,    t,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
73	[BUG]  [BUGGY]  computeDerivatives(t0,  y0,  stepStart,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  y0,  stepStart,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y0,  stepStart,  yDotK[0]);	  computeDerivatives(dt,    y0,    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
74	[BUG]  [BUGGY]  computeDerivatives(dt,  y0,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(dt,  y0,  stages,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(dt,  y0,  stages,  yDotK[0]);	  computeDerivatives(dt,    y0,    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
75	[BUG]  [BUGGY]  ensureCapacity(dt,  y0,  stepStart,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(dt,  y0,  stepStart,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(dt,  y0,  stepStart,  yDotK[0]);	  computeDerivatives(dt,    y0,    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
76	[BUG]  [BUGGY]  computeDerivatives(t0,  y0,  steps,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  y0,  steps,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y0,  steps,  yDotK[0]);	  computeDerivatives(dt,    y0,    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
77	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.getStandardSteps();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(int)interpolator.getStandardSteps();  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.getStandardSteps();	  Integer    stages    =(Integer)interpolator.getStandardSteps();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
78	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(t0,  loop);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(t0,  loop);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  prototype.getStepHandler(t0,  loop);	  StageHandler    stageHandler    =    prototype.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
79	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(t0,  interpolator);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(t0,  interpolator);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  prototype.getStepHandler(t0,  interpolator);	  StageHandler    stageHandler    =    prototype.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
80	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator,  stepStart,  0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator,  stepStart,  0);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator,  stepStart,  0);	  Integer    stages    =    getSteps(interpolator,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
81	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator,  stepStart,  loop);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator,  stepStart,  loop);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator,  stepStart,  loop);	  Integer    stages    =    getSteps(interpolator,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
82	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator,  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator,  1);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator,  1);	  Integer    stages    =    getSteps(interpolator,    0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
83	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator,  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator,  2);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator,  2);	  Integer    stages    =    getSteps(interpolator,    0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
84	[BUG]  [BUGGY]  int  stepSize  =  getStepEnd();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  int  stepSize  =  getStepEnd();  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	int  stepSize  =  getStepEnd();	  int    stepSize    =    getStepStart();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
85	[BUG]  [BUGGY]  int  stepSize  =  getStepStart()  +  1;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  int  stepSize  =  getStepStart()  +  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	int  stepSize  =  getStepStart()  +  1;	  int    stepSize    =    getStepStart();    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
86	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getStartSteps());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getStartSteps());  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getStartSteps());	  Integer    stages    =    getSteps(interpolator.getEndSteps());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
87	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getEndSteps(),  loop);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getEndSteps(),  loop);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getEndSteps(),  loop);	  Integer    stages    =    getSteps(interpolator.getEndSteps());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
88	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getEndSteps(),  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getEndSteps(),  1);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getEndSteps(),  1);	  Integer    stages    =    getSteps(interpolator.getEndSteps());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
89	[BUG]  [BUGGY]  Integer  stages  =  getStartSteps(interpolator.getEndSteps());  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getStartSteps(interpolator.getEndSteps());  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getStartSteps(interpolator.getEndSteps());	  Integer    stages    =    getSteps(interpolator.getEndSteps());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
90	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y,  stages[0],  loop);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y,  stages[0],  loop);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y,  stages[0],  loop);	  evaluateDerivatives(t0,    y,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
91	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y,  stages[1]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y,  stages[1]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y,  stages[1]);	  evaluateDerivatives(t0,    y,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
92	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y,  phases[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y,  phases[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y,  phases[0]);	  evaluateDerivatives(t0,    y,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
93	[BUG]  [BUGGY]  validateDerivatives(t0,  stage,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(t0,  stage,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  stage,  yTmp[0]);	  validateDerivatives(t0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
94	[BUG]  [BUGGY]  validateDerivatives(t0,  yTmp,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(t0,  yTmp,  stage,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  yTmp,  stage,  yDotK[0]);	  validateDerivatives(t0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
95	[BUG]  [BUGGY]  validateDerivatives(t0,  stage,  y1,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(t0,  stage,  y1,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  stage,  y1,  yDotK[0]);	  validateDerivatives(t0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
96	[BUG]  [BUGGY]  ensureCapacity(t0,  stages[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(t0,  stages[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  stages[0]);	  ensureCapacity(y0,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
97	[BUG]  [BUGGY]  ensureCapacity(y0,  stages[0]  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(y0,  stages[0]  -  1);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(y0,  stages[0]  -  1);	  ensureCapacity(y0,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
98	[BUG]  [BUGGY]  ensureCapacity(y0,  stages[0]  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(y0,  stages[0]  +  1);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(y0,  stages[0]  +  1);	  ensureCapacity(y0,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
99	[BUG]  [BUGGY]  test(y0,  t1,  a,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(y0,  t1,  a,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(y0,  t1,  a,  yDotK[0]);	  test(y0,    t1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
100	[BUG]  [BUGGY]  test(y0,  t1,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(y0,  t1,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(y0,  t1,  yTmp[0]);	  test(y0,    t1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
101	[BUG]  [BUGGY]  test(a,  t0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(a,  t0,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(a,  t0,  yDotK[0]);	  test(y0,    t1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
102	[BUG]  [BUGGY]  computeDerivatives(t0,  yTmp[0],  stepStart,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  yTmp[0],  stepStart,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  yTmp[0],  stepStart,  yDotK[0]);	  computeDerivatives(t0,    yDotK[0],    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
103	[BUG]  [BUGGY]  computeDerivatives(t0,  yDotK[0],  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  yDotK[0],  stages,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  yDotK[0],  stages,  yDotK[0]);	  computeDerivatives(t0,    yDotK[0],    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
104	[BUG]  [BUGGY]  computeDerivatives(t0,  stages[0],  stepStart,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  stages[0],  stepStart,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  stages[0],  stepStart,  yDotK[0]);	  computeDerivatives(t0,    yDotK[0],    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
105	[BUG]  [BUGGY]  computeDerivatives(t0,  yDotK[0],  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  yDotK[0],  stage,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  yDotK[0],  stage,  yDotK[0]);	  computeDerivatives(t0,    yDotK[0],    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
106	[BUG]  [BUGGY]  ensureCapacity(t0,  y,  stages[1]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(t0,  y,  stages[1]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  y,  stages[1]);	  ensureCapacity(t0,    y,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
107	[BUG]  [BUGGY]  test(a,  y0,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(a,  y0,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(a,  y0,  yTmp[0]);	  test(a,    y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
108	[BUG]  [BUGGY]  test(a,  y0,  t,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(a,  y0,  t,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(a,  y0,  t,  yDotK[0]);	  test(a,    y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
109	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.getTaints()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(int)interpolator.getTaints()  -  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.getTaints()  -  1;	  Integer    stages    =(int)interpolator.getTaints();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
110	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.getTaints()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(int)interpolator.getTaints()  +  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.getTaints()  +  1;	  Integer    stages    =(int)interpolator.getTaints();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
111	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator,  y0,  loop);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator,  y0,  loop);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator,  y0,  loop);	  Integer    stages    =    getSteps(interpolator,    y0);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
112	[BUG]  [BUGGY]  Integer  stages  =  getSteps(y0,  interpolator);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(y0,  interpolator);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(y0,  interpolator);	  Integer    stages    =    getSteps(interpolator,    y0);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
113	[BUG]  [BUGGY]  StageHandler  stages  =  prototype.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stages  =  prototype.getStepInterpolator();  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stages  =  prototype.getStepInterpolator();	  StageHandler    stages    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
114	[BUG]  [BUGGY]  StageHandler  stages  =  interface.getStepHandler();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stages  =  interface.getStepHandler();  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stages  =  interface.getStepHandler();	  StageHandler    stages    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
115	[BUG]  [BUGGY]  StageHandler  stages  =  prototype.getStandardStep();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stages  =  prototype.getStandardStep();  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stages  =  prototype.getStandardStep();	  StageHandler    stages    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
116	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y,  stages,  a,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y,  stages,  a,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y,  stages,  a,  yDotK[0]);	  evaluateDerivatives(t0,    y,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
117	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y,  stages,  a[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y,  stages,  a[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y,  stages,  a[0]);	  evaluateDerivatives(t0,    y,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
118	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y,  stage,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y,  stage,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y,  stage,  yTmp[0]);	  evaluateDerivatives(t0,    y,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
119	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.getSteps()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(int)interpolator.getSteps()  -  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.getSteps()  -  1;	  Integer    stages    =(int)interpolator.getSteps();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
120	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(hash,  loop);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(hash,  loop);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  prototype.getStepHandler(hash,  loop);	  StageHandler    stageHandler    =    prototype.getStepHandler(hash);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
121	[BUG]  [BUGGY]  computeDerivatives(t0,  yDotK,  stages[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  yDotK,  stages[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  yDotK,  stages[0]);	  computeDerivatives(y0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
122	[BUG]  [BUGGY]  computeDerivatives(t0,  yDotK[0],  stages);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  yDotK[0],  stages);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  yDotK[0],  stages);	  computeDerivatives(y0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
123	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps()  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps()  +  1);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getSteps()  +  1);	  Integer    stages    =    getSteps(interpolator.getSteps()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
124	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps()  *  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps()  *  1);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getSteps()  *  1);	  Integer    stages    =    getSteps(interpolator.getSteps()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
125	[BUG]  [BUGGY]  computeDerivatives(t0,  y1,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  y1,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y1,  yDotK[0]);	  computeDerivatives(t0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
126	[BUG]  [BUGGY]  computeDerivatives(y0,  stages,  t0[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(y0,  stages,  t0[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(y0,  stages,  t0[0]);	  computeDerivatives(t0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
127	[BUG]  [BUGGY]  evaluateDerivatives(t0,  stage,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  stage,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  stage,  yTmp[0]);	  evaluateDerivatives(t0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
128	[BUG]  [BUGGY]  evaluateDerivatives(t0,  stage,  y1,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  stage,  y1,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  stage,  y1,  yDotK[0]);	  evaluateDerivatives(t0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
129	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.getStandardSteps().clone();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(Integer)interpolator.getStandardSteps().clone();  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.getStandardSteps().clone();	  Integer    stages    =(Integer)interpolator.getSteps().clone();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
130	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.getSteps().clone();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(int)interpolator.getSteps().clone();  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.getSteps().clone();	  Integer    stages    =(Integer)interpolator.getSteps().clone();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
131	[BUG]  [BUGGY]  Integer  stages  =  getEndSteps()  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getEndSteps()  -  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getEndSteps()  -  1;	  Integer    stages    =    getEndSteps();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
132	[BUG]  [BUGGY]  Integer  stages  =  getStartSteps();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getStartSteps();  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getStartSteps();	  Integer    stages    =    getEndSteps();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
133	[BUG]  [BUGGY]  Integer  stages  =  getEndSteps()  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getEndSteps()  +  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getEndSteps()  +  1;	  Integer    stages    =    getEndSteps();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
134	[BUG]  [BUGGY]  computeDerivatives(t0,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  stage,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  stage,  yDotK[0]);	  computeDerivatives(y0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
135	[BUG]  [BUGGY]  validateDerivatives(y0,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(y0,  stage,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(y0,  stage,  yDotK[0]);	  computeDerivatives(y0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
136	[BUG]  [BUGGY]  computeDerivatives(y0,  stage,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(y0,  stage,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(y0,  stage,  yTmp[0]);	  computeDerivatives(y0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
137	[BUG]  [BUGGY]  validateDerivatives(y0,  t1,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(y0,  t1,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(y0,  t1,  yDotK[0]);	  validateDerivatives(t0,    y1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
138	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator,  prototype);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator,  prototype);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator,  prototype);	  Integer    stages    =    getSteps(interpolator,    loop);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
139	[BUG]  [BUGGY]  computeDerivatives(t,  y0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t,  y0,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t,  y0,  yDotK[0]);	  computeDerivatives(y0,    t,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
140	[BUG]  [BUGGY]  validateDerivatives(t0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(t0,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  yDotK[0]);	  computeDerivatives(y0,    t,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
141	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(hashCode,  loop);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(hashCode,  loop);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  prototype.getStepHandler(hashCode,  loop);	  StageHandler    stageHandler    =    prototype.getStepHandler(hashCode,    rki);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
142	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(t0,  rki);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(t0,  rki);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  prototype.getStepHandler(t0,  rki);	  StageHandler    stageHandler    =    prototype.getStepHandler(hashCode,    rki);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
143	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(loop,  rki);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(loop,  rki);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  prototype.getStepHandler(loop,  rki);	  StageHandler    stageHandler    =    prototype.getStepHandler(hashCode,    rki);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
144	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(rki,  hashCode);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(rki,  hashCode);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  prototype.getStepHandler(rki,  hashCode);	  StageHandler    stageHandler    =    prototype.getStepHandler(hashCode,    rki);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
145	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(this,  stages);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(this,  stages);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(this,  stages);	  StageHandler    stageHandler    =    interface.getStepHandler(this);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
146	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(rki);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(rki);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(rki);	  StageHandler    stageHandler    =    interface.getStepHandler(this);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
147	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(this);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(this);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interpolator.getStepHandler(this);	  StageHandler    stageHandler    =    interface.getStepHandler(this);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
148	[BUG]  [BUGGY]  ensureCapacity(t0,  yTmp,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(t0,  yTmp,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  yTmp,  yDotK[0]);	  ensureCapacity(t0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
149	[BUG]  [BUGGY]  ensureCapacity(t0,  stages,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(t0,  stages,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  stages,  yTmp[0]);	  ensureCapacity(t0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
150	[BUG]  [BUGGY]  test(t0,  y0,  a,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  y0,  a,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y0,  a,  yDotK[0]);	  test(t0,    y,    a,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
151	[BUG]  [BUGGY]  test(a,  y,  t0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(a,  y,  t0,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(a,  y,  t0,  yDotK[0]);	  test(t0,    y,    a,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
152	[BUG]  [BUGGY]  test(y0,  t0,  a,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(y0,  t0,  a,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(y0,  t0,  a,  yDotK[0]);	  test(t0,    y,    a,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
153	[BUG]  [BUGGY]  test(a,  y0,  t0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(a,  y0,  t0,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(a,  y0,  t0,  yDotK[0]);	  test(t0,    y,    a,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
154	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.cloneTaints();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(int)interpolator.cloneTaints();  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.cloneTaints();	  Integer    stages    =(Integer)interpolator.cloneTaints();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
155	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.cloneTaints()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(Integer)interpolator.cloneTaints()  -  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.cloneTaints()  -  1;	  Integer    stages    =(Integer)interpolator.cloneTaints();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
156	[BUG]  [BUGGY]  solveDerivatives(t0,  y,  stages[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  solveDerivatives(t0,  y,  stages[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	solveDerivatives(t0,  y,  stages[0]);	  computeDerivatives(t0,    y,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
157	[BUG]  [BUGGY]  computeDerivatives(t0,  y,  stages[0],  loop);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  y,  stages[0],  loop);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y,  stages[0],  loop);	  computeDerivatives(t0,    y,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
158	[BUG]  [BUGGY]  test(t0,  stage,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  stage,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  stage,  yTmp[0]);	  test(t0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
159	[BUG]  [BUGGY]  test(y0,  stage,  t0[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(y0,  stage,  t0[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(y0,  stage,  t0[0]);	  test(t0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
160	[BUG]  [BUGGY]  test(t0,  stage,  y1,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  stage,  y1,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  stage,  y1,  yDotK[0]);	  test(t0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
161	[BUG]  [BUGGY]  ensureCapacity(y0.length,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(y0.length,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(y0.length,  yDotK[0]);	  ensureCapacity(steps,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
162	[BUG]  [BUGGY]  ensureCapacity(steps,  y0[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(steps,  y0[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(steps,  y0[0]);	  ensureCapacity(steps,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
163	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(loop,  stages);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(loop,  stages);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(loop,  stages);	  StageHandler    stageHandler    =    interface.getStepHandler(loop);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
164	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.getStepSize()  -  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(int)interpolator.getStepSize()  -  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.getStepSize()  -  1;	  Integer    stages    =(int)interpolator.getStepSize();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
165	[BUG]  [BUGGY]  StageHandler  stageHandler  =  rki.getStepHandler();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  rki.getStepHandler();  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  rki.getStepHandler();	  StageHandler    stageHandler    =    handler.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
166	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y0,  stages[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y0,  stages[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y0,  stages[0]);	  evaluateDerivatives(t0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
167	[BUG]  [BUGGY]  evaluateDerivatives(t0,  yTmp,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  yTmp,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  yTmp,  yDotK[0]);	  evaluateDerivatives(t0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
168	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y2,  stages[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y2,  stages[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y2,  stages[0]);	  evaluateDerivatives(t0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
169	[BUG]  [BUGGY]  ensureCapacity(t0,  y1,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(t0,  y1,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  y1,  yDotK[0]);	  ensureCapacity(y0,    t1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
170	[BUG]  [BUGGY]  ensureCapacity(y0,  t1,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(y0,  t1,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(y0,  t1,  yTmp[0]);	  ensureCapacity(y0,    t1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
171	[BUG]  [BUGGY]  ensureCapacity(stages,  t1,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(stages,  t1,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(stages,  t1,  yDotK[0]);	  ensureCapacity(y0,    t1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
172	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  stepStart);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getSteps(),  stepStart);	  Integer    stages    =    getSteps(interpolator.getSteps(),    loop);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
173	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  loop,  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  loop,  stepStart);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getSteps(),  loop,  stepStart);	  Integer    stages    =    getSteps(interpolator.getSteps(),    loop);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
174	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStandardStepInterpolator(t0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interpolator.getStandardStepInterpolator(t0);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interpolator.getStandardStepInterpolator(t0);	  StageHandler    stageHandler    =    interpolator.getStandardStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
175	[BUG]  [BUGGY]  validateDerivatives(t0,  y,  stages[0],  loop);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(t0,  y,  stages[0],  loop);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  y,  stages[0],  loop);	  validateDerivatives(t0,    y,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
176	[BUG]  [BUGGY]  validateDerivatives(t0,  y,  stages[1]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(t0,  y,  stages[1]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  y,  stages[1]);	  validateDerivatives(t0,    y,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
177	[BUG]  [BUGGY]  validateDerivatives(t0,  y,  phases[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(t0,  y,  phases[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  y,  phases[0]);	  validateDerivatives(t0,    y,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
178	[BUG]  [BUGGY]  validateDerivatives(t0,  y,  stage,  a,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(t0,  y,  stage,  a,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  y,  stage,  a,  yDotK[0]);	  validateDerivatives(t0,    y,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
179	[BUG]  [BUGGY]  validateDerivatives(t0,  y,  stage,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(t0,  y,  stage,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  y,  stage,  yTmp[0]);	  validateDerivatives(t0,    y,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
180	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getStandardSteps(),  loop);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getStandardSteps(),  loop);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getStandardSteps(),  loop);	  Integer    stages    =    getSteps(interpolator.getStandardSteps());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
181	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getInitializingSteps());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getInitializingSteps());  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getInitializingSteps());	  Integer    stages    =    getSteps(interpolator.getStandardSteps());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
182	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(ch);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(ch);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interpolator.getStepHandler(ch);	  StageHandler    stageHandler    =    interface.getStepHandler(ch);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
183	[BUG]  [BUGGY]  test(y0,  t0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(y0,  t0,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(y0,  t0,  yDotK[0]);	  test(t0,    y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
184	[BUG]  [BUGGY]  test(t0,  y0,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  y0,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y0,  yTmp[0]);	  test(t0,    y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
185	[BUG]  [BUGGY]  computeDerivatives(t0,  yTmp[0],  stepStart);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  yTmp[0],  stepStart);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  yTmp[0],  stepStart);	  computeDerivatives(t0,    yDotK[0],    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
186	[BUG]  [BUGGY]  ensureCapacity(t0,  yDotK[0],  stepSize);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(t0,  yDotK[0],  stepSize);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  yDotK[0],  stepSize);	  computeDerivatives(t0,    yDotK[0],    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
187	[BUG]  [BUGGY]  computeDerivatives(t0,  stages[0],  stepStart);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  stages[0],  stepStart);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  stages[0],  stepStart);	  computeDerivatives(t0,    yDotK[0],    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
188	[BUG]  [BUGGY]  ensureCapacity(t0,  yDotK[0],  stepStart);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(t0,  yDotK[0],  stepStart);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  yDotK[0],  stepStart);	  computeDerivatives(t0,    yDotK[0],    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
189	[BUG]  [BUGGY]  validateDerivatives(dt,  y0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(dt,  y0,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(dt,  y0,  yDotK[0]);	  validateDerivatives(y0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
190	[BUG]  [BUGGY]  validateDerivatives(y0,  t,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(y0,  t,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(y0,  t,  yDotK[0]);	  validateDerivatives(y0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
191	[BUG]  [BUGGY]  validateDerivatives(y0,  t0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(y0,  t0,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(y0,  t0,  yDotK[0]);	  validateDerivatives(y0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
192	[BUG]  [BUGGY]  computeDerivatives(t0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  yDotK[0]);	  computeDerivatives(y0,    t,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
193	[BUG]  [BUGGY]  validateDerivatives(t0,  y,  stage,  a[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(t0,  y,  stage,  a[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  y,  stage,  a[0]);	  validateDerivatives(t0,    y,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
194	[BUG]  [BUGGY]  validateDerivatives(t0,  y0,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(t0,  y0,  stage,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  y0,  stage,  yDotK[0]);	  validateDerivatives(t0,    y,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
195	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getStandardSteps(),  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getStandardSteps(),  0);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getStandardSteps(),  0);	  Integer    stages    =    getSteps(interpolator.getStandardSteps());    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
196	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(ch,  loop);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(ch,  loop);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(ch,  loop);	  StageHandler    stageHandler    =    interface.getStepHandler(ch);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
197	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(ch  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(ch  -  1);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(ch  -  1);	  StageHandler    stageHandler    =    interface.getStepHandler(ch);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
198	[BUG]  [BUGGY]  computeDerivatives(t0,  y[0],  stepSize);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  y[0],  stepSize);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y[0],  stepSize);	  computeDerivatives(t0,    yDotK[0],    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
199	[BUG]  [BUGGY]  computeDerivatives(t0,  y[0],  loop);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  y[0],  loop);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y[0],  loop);	  computeDerivatives(t0,    yDotK[0],    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
200	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.getSteps()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(int)interpolator.getSteps()  +  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.getSteps()  +  1;	  Integer    stages    =(int)interpolator.getSteps();    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
201	[BUG]  [BUGGY]  validateDerivatives(t0,  y1,  a,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(t0,  y1,  a,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  y1,  a,  yDotK[0]);	  validateDerivatives(t0,    y1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
202	[BUG]  [BUGGY]  Integer  stages  =  getSlopes()  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSlopes()  -  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSlopes()  -  1;	  Integer    stages    =    getSteps()    -    1;    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
203	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(loop  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(loop  -  1);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(loop  -  1);	  StageHandler    stageHandler    =    interface.getStepHandler(loop);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
204	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(y0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(y0);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(y0);	  StageHandler    stageHandler    =    interface.getStepHandler(loop);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
205	[BUG]  [BUGGY]  test(t0,  y2,  t1,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  y2,  t1,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y2,  t1,  yDotK[0]);	  test(y0,    t1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
206	[BUG]  [BUGGY]  test(t0,  y1,  t1,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  y1,  t1,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y1,  t1,  yDotK[0]);	  test(y0,    t1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
207	[BUG]  [BUGGY]  test(t0,  yDotK[0],  t1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  yDotK[0],  t1);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  yDotK[0],  t1);	  test(y0,    t1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
208	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y2,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y2,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y2,  yDotK[0]);	  evaluateDerivatives(t0,    y1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
209	[BUG]  [BUGGY]  StageHandler  stages  =  interpolator.getStepHandler();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stages  =  interpolator.getStepHandler();  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stages  =  interpolator.getStepHandler();	  StageHandler    stages    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
210	[BUG]  [BUGGY]  StageHandler  stages  =  prototype.getStandardSteps();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stages  =  prototype.getStandardSteps();  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stages  =  prototype.getStandardSteps();	  StageHandler    stages    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
211	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y0,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y0,  stage,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y0,  stage,  yDotK[0]);	  evaluateDerivatives(t0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
212	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y0,  stage[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y0,  stage[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y0,  stage[0]);	  evaluateDerivatives(t0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
213	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y0,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y0,  stages,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y0,  stages,  yDotK[0]);	  evaluateDerivatives(t0,    y,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
214	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y,  stages,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y,  stages,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y,  stages,  yTmp[0]);	  evaluateDerivatives(t0,    y,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
215	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator,  loop,  0);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator,  loop,  0);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator,  loop,  0);	  Integer    stages    =    getSteps(interpolator,    loop);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
216	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0  -  1);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(t0  -  1);	  StageHandler    stageHandler    =    interface.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
217	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  loop  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  loop  -  1);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getSteps(),  loop  -  1);	  Integer    stages    =    getSteps(interpolator.getSteps()    -    1);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
218	[BUG]  [BUGGY]  test(t0,  yTmp,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  yTmp,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  yTmp,  yDotK[0]);	  test(t0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
219	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(protocol);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(protocol);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(protocol);	  StageHandler    stageHandler    =    prototype.getStepHandler(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
220	[BUG]  [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler(interpolator);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler(interpolator);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  handler.getStepHandler(interpolator);	  StageHandler    stageHandler    =    prototype.getStepHandler(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
221	[BUG]  [BUGGY]  computeDerivatives(t0,  y0,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  y0,  stages,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y0,  stages,  yDotK[0]);	  computeDerivatives(t0,    y,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
222	[BUG]  [BUGGY]  computeDerivatives(t0,  y,  stages,  a[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  y,  stages,  a[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y,  stages,  a[0]);	  computeDerivatives(t0,    y,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
223	[BUG]  [BUGGY]  computeDerivatives(t0,  y,  stages,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  y,  stages,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y,  stages,  yTmp[0]);	  computeDerivatives(t0,    y,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
224	[BUG]  [BUGGY]  validateDerivatives(y0,  yTmp,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(y0,  yTmp,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(y0,  yTmp,  yDotK[0]);	  validateDerivatives(y0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
225	[BUG]  [BUGGY]  ensureCapacity(t0,  y0,  stepStart,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(t0,  y0,  stepStart,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  y0,  stepStart,  yDotK[0]);	  computeDerivatives(dt,    y0,    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
226	[BUG]  [BUGGY]  StageHandler  stageHandler  =  handler.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  handler.getStepInterpolator();  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  handler.getStepInterpolator();	  StageHandler    stageHandler    =    prototype.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
227	[BUG]  [BUGGY]  computeDerivatives(t0,  y[0],  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  y[0],  stages,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y[0],  stages,  yDotK[0]);	  computeDerivatives(t0,    yDotK[0],    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
228	[BUG]  [BUGGY]  computeDerivatives(t0,  y[0],  stepStart,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  y[0],  stepStart,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y[0],  stepStart,  yTmp[0]);	  computeDerivatives(t0,    yDotK[0],    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
229	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  y0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  y0);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getSteps(),  y0);	  Integer    stages    =    getSteps(interpolator.getSteps(),    loop);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
230	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  loop,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  loop,  0);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getSteps(),  loop,  0);	  Integer    stages    =    getSteps(interpolator.getSteps(),    loop);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
231	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator,  y0,  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator,  y0,  0);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator,  y0,  0);	  Integer    stages    =    getSteps(interpolator,    y0);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
232	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator,  y0,  k);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator,  y0,  k);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator,  y0,  k);	  Integer    stages    =    getSteps(interpolator,    y0);    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
233	[BUG]  [BUGGY]  test(a,  0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(a,  0,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(a,  0,  yDotK[0]);	  test(a,    y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
234	[BUG]  [BUGGY]  computeDerivatives(y0,  steps,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(y0,  steps,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(y0,  steps,  yTmp[0]);	  computeDerivatives(y0,    steps,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
235	[BUG]  [BUGGY]  computeDerivatives(t0,  yDotK,  steps[0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  yDotK,  steps[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  yDotK,  steps[0]);	  computeDerivatives(y0,    steps,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
236	[BUG]  [BUGGY]  StageTraversal.traverse(this.steps,  new  RungeKuttaStepInterpolator());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageTraversal.traverse(this.steps,  new  RungeKuttaStepInterpolator());  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageTraversal.traverse(this.steps,  new  RungeKuttaStepInterpolator());	  StageTraversal.traverse(interpolator,    new    RungeKuttaStepInterpolator());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
237	[BUG]  [BUGGY]  StageTraversal.traverse(compiler,  new  RungeKuttaStepInterpolator());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageTraversal.traverse(compiler,  new  RungeKuttaStepInterpolator());  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageTraversal.traverse(compiler,  new  RungeKuttaStepInterpolator());	  StageTraversal.traverse(interpolator,    new    RungeKuttaStepInterpolator());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
238	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.cloneStep();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(Integer)interpolator.cloneStep();  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.cloneStep();	  Integer    stages    =(Integer)interpolator.cloneTree();    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
239	[BUG]  [BUGGY]  PhaseHandler  stageHandler  =  prototype.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  PhaseHandler  stageHandler  =  prototype.getStepInterpolator();  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	PhaseHandler  stageHandler  =  prototype.getStepInterpolator();	  PhaseHandler    stageHandler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
240	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStandardStepInterpolator(t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  interface.getStandardStepInterpolator(t0);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStandardStepInterpolator(t0);	  StageHandler    stageHandler    =    interface.getStandardStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
241	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.getStep(0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(Integer)interpolator.getStep(0);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.getStep(0);	  Integer    stages    =(Integer)interpolator.getStep();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
242	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.getEndStep();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(Integer)interpolator.getEndStep();  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.getEndStep();	  Integer    stages    =(Integer)interpolator.getStep();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
243	[BUG]  [BUGGY]  test(a,  y0,  t1,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(a,  y0,  t1,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(a,  y0,  t1,  yDotK[0]);	  test(t0,    y,    a,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
244	[BUG]  [BUGGY]  test(t0,  y,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  y,  stages,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y,  stages,  yDotK[0]);	  test(t0,    y,    a,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
245	[BUG]  [BUGGY]  test(t0,  a,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  a,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  a,  yDotK[0]);	  test(t0,    y,    a,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
246	[BUG]  [BUGGY]  Integer  stages  =  getSteps(stepStart  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(stepStart  -  1);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(stepStart  -  1);	  Integer    stages    =    getSteps(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
247	[BUG]  [BUGGY]  Integer  stages  =  getSteps(stepStart,  loop);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(stepStart,  loop);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(stepStart,  loop);	  Integer    stages    =    getSteps(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
248	[BUG]  [BUGGY]  ensureCapacity(y0,  t1,  yTmp);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(y0,  t1,  yTmp);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(y0,  t1,  yTmp);	  ensureCapacity(y0,    t1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
249	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator,  stepStart  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator,  stepStart  -  1);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator,  stepStart  -  1);	  Integer    stages    =    getSteps(interpolator,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
250	[BUG]  [BUGGY]  test(t0,  y0,  stage[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  y0,  stage[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y0,  stage[0]);	  test(t0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
251	[BUG]  [BUGGY]  computeDerivatives(y0,  stages,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(y0,  stages,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(y0,  stages,  yTmp[0]);	  computeDerivatives(y0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
252	[BUG]  [BUGGY]  transform(y0,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  transform(y0,  stages,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	transform(y0,  stages,  yDotK[0]);	  computeDerivatives(y0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
253	[BUG]  [BUGGY]  computeDerivatives(t0,  y,  stages[1]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  y,  stages[1]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y,  stages[1]);	  computeDerivatives(t0,    y,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
254	[BUG]  [BUGGY]  test(t0,  y,  stage,  a,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  y,  stage,  a,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y,  stage,  a,  yDotK[0]);	  test(t0,    y,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
255	[BUG]  [BUGGY]  test(t0,  y,  stage,  a[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  y,  stage,  a[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y,  stage,  a[0]);	  test(t0,    y,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
256	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.cloneTaints(y0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(Integer)interpolator.cloneTaints(y0);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.cloneTaints(y0);	  Integer    stages    =(Integer)interpolator.cloneTaints();    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
257	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.getStartSteps();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(Integer)interpolator.getStartSteps();  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.getStartSteps();	  Integer    stages    =(Integer)interpolator.getStandardSteps();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
258	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getEndSteps(),  0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getEndSteps(),  0);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getEndSteps(),  0);	  Integer    stages    =    getSteps(interpolator.getEndSteps());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
259	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getEndSteps()  -  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getEndSteps()  -  1);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getEndSteps()  -  1);	  Integer    stages    =    getSteps(interpolator.getEndSteps());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
260	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y,  stage,  a[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y,  stage,  a[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y,  stage,  a[0]);	  evaluateDerivatives(t0,    y,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
261	[BUG]  [BUGGY]  validateDerivatives(t0,  y0,  stage[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(t0,  y0,  stage[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  y0,  stage[0]);	  validateDerivatives(t0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
262	[BUG]  [BUGGY]  transform(y0,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  transform(y0,  stage,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	transform(y0,  stage,  yDotK[0]);	  computeDerivatives(y0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
263	[BUG]  [BUGGY]  ensureCapacity(y0,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(y0,  stage,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(y0,  stage,  yDotK[0]);	  computeDerivatives(y0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
264	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.getStepSize()  *  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(Integer)interpolator.getStepSize()  *  1;  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.getStepSize()  *  1;	  Integer    stages    =(Integer)interpolator.getStepSize()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
265	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.getSteps().toArray(new  Integer[]  {  0  }  );  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(Integer)interpolator.getSteps().toArray(new  Integer[]  {  0  }  );  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.getSteps().toArray(new  Integer[]  {  0  }  );	  Integer    stages    =(Integer)interpolator.getSteps().clone();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
266	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.getSteps().toArray(new  Integer[0]);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(Integer)interpolator.getSteps().toArray(new  Integer[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.getSteps().toArray(new  Integer[0]);	  Integer    stages    =(Integer)interpolator.getSteps().clone();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
267	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.getStepHandler().clone();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(Integer)interpolator.getStepHandler().clone();  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.getStepHandler().clone();	  Integer    stages    =(Integer)interpolator.getSteps().clone();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
268	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.getStepEnd();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(Integer)interpolator.getStepEnd();  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.getStepEnd();	  Integer    stages    =(Integer)interpolator.getStepStart();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
269	[BUG]  [BUGGY]  test(t0,  y,  stages[1]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  y,  stages[1]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y,  stages[1]);	  test(t0,    y,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
270	[BUG]  [BUGGY]  ensureCapacity(steps,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(steps,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(steps,  yTmp[0]);	  ensureCapacity(y0,    yTmp[0]);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
271	[BUG]  [BUGGY]  computeDerivatives(t0,  yTmp,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  yTmp,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  yTmp,  yDotK[0]);	  computeDerivatives(t0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
272	[BUG]  [BUGGY]  validateDerivatives(y0,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(y0,  stages,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(y0,  stages,  yDotK[0]);	  validateDerivatives(t0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
273	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator,  3);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator,  3);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator,  3);	  Integer    stages    =    getSteps(interpolator,    0);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
274	[BUG]  [BUGGY]  evaluateDerivatives(y0,  t1,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(y0,  t1,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(y0,  t1,  yDotK[0]);	  evaluateDerivatives(t0,    y1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
275	[BUG]  [BUGGY]  StageHandler  stages  =  prototype.getStepHandler(rki);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stages  =  prototype.getStepHandler(rki);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stages  =  prototype.getStepHandler(rki);	  StageHandler    stages    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
276	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y2,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y2,  stages,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y2,  stages,  yDotK[0]);	  evaluateDerivatives(t0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
277	[BUG]  [BUGGY]  computeDerivatives(y0,  t,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(y0,  t,  stages,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(y0,  t,  stages,  yDotK[0]);	  computeDerivatives(y0,    t,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
278	[BUG]  [BUGGY]  computeDerivatives(t0,  y,  steps,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  y,  steps,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y,  steps,  yDotK[0]);	  computeDerivatives(t0,    y,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
279	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.getStandardTaints();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(int)interpolator.getStandardTaints();  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.getStandardTaints();	  Integer    stages    =(int)interpolator.getTaints();    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
280	[BUG]  [BUGGY]  computeDerivatives(dt,  steps,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(dt,  steps,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(dt,  steps,  yDotK[0]);	  computeDerivatives(y0,    steps,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
281	[BUG]  [BUGGY]  computeDerivatives(y0,  t0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(y0,  t0,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(y0,  t0,  yDotK[0]);	  computeDerivatives(t0,    y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
282	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.getSteps().iterator().next();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =(Integer)interpolator.getSteps().iterator().next();  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.getSteps().iterator().next();	  Integer    stages    =(Integer)interpolator.getSteps().clone();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
283	[BUG]  [BUGGY]  computeDerivatives(dt,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(dt,  stages,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(dt,  stages,  yDotK[0]);	  computeDerivatives(y0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
284	[BUG]  [BUGGY]  computeDerivatives(y0,  dt,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(y0,  dt,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(y0,  dt,  yDotK[0]);	  computeDerivatives(dt,    y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
285	[BUG]  [BUGGY]  ensureCapacity(stack,  t,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(stack,  t,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(stack,  t,  yDotK[0]);	  ensureCapacity(y0,    t,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
286	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(y0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(y0);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  prototype.getStepHandler(y0);	  StageHandler    stageHandler    =    prototype.getStepHandler(loop);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
287	[BUG]  [BUGGY]  ensureCapacity(stack,  t0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(stack,  t0,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(stack,  t0,  yDotK[0]);	  ensureCapacity(y0,    t0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
288	[BUG]  [BUGGY]  computeDerivatives(dt,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(dt,  stage,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(dt,  stage,  yDotK[0]);	  computeDerivatives(y0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
289	[BUG]  [BUGGY]  computeDerivatives(y0,  stage,  t[0]);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(y0,  stage,  t[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(y0,  stage,  t[0]);	  computeDerivatives(y0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
290	[BUG]  [BUGGY]  StageTraversal.traverse(this,  new  RungeKuttaStepInterpolator());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageTraversal.traverse(this,  new  RungeKuttaStepInterpolator());  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageTraversal.traverse(this,  new  RungeKuttaStepInterpolator());	  StageTraversal.traverse(interpolator,    new    RungeKuttaStepInterpolator());    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
291	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y,  steps,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y,  steps,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y,  steps,  yDotK[0]);	  evaluateDerivatives(t0,    y,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
292	[BUG]  [BUGGY]  test(y0,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(y0,  stage,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(y0,  stage,  yDotK[0]);	  test(t0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
293	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y,  stage,  a,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  evaluateDerivatives(t0,  y,  stage,  a,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y,  stage,  a,  yDotK[0]);	  evaluateDerivatives(t0,    y,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
294	[BUG]  [BUGGY]  computeDerivatives(t0,  yTmp,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  yTmp,  stages,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  yTmp,  stages,  yDotK[0]);	  computeDerivatives(t0,    stages,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
295	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getEndSteps()  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getEndSteps()  +  1);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getEndSteps()  +  1);	  Integer    stages    =    getSteps(interpolator.getEndSteps());    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
296	[BUG]  [BUGGY]  test(t0,  y,  stage,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  y,  stage,  yTmp[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y,  stage,  yTmp[0]);	  test(t0,    y,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
297	[BUG]  [BUGGY]  test(t0,  y,  steps[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  y,  steps[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y,  steps[0]);	  test(t0,    y,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
298	[BUG]  [BUGGY]  computeDerivatives(t0,  stages[0],  yDotK[0],  stepStart);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  computeDerivatives(t0,  stages[0],  yDotK[0],  stepStart);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  stages[0],  yDotK[0],  stepStart);	  computeDerivatives(t0,    yDotK[0],    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
299	[BUG]  [BUGGY]  ensureCapacity(stages,  y0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(stages,  y0,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(stages,  y0,  yDotK[0]);	  ensureCapacity(stages,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
300	[BUG]  [BUGGY]  test(t0,  yDotK[0],  t1,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  yDotK[0],  t1,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  yDotK[0],  t1,  yDotK[0]);	  test(y0,    t1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
301	[BUG]  [BUGGY]  test(t0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  yDotK[0]);	  test(y0,    t1,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
302	[BUG]  [BUGGY]  test(y0,  a,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(y0,  a,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(y0,  a,  yDotK[0]);	  test(a,    y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
303	[BUG]  [BUGGY]  ensureCapacity(stages,  y,  t0[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(stages,  y,  t0[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(stages,  y,  t0[0]);	  ensureCapacity(t0,    y,    stages[0]);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
304	[BUG]  [BUGGY]  ensureCapacity(stages,  y0[0]  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(stages,  y0[0]  +  1);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(stages,  y0[0]  +  1);	  ensureCapacity(stages,    y0[0]);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
305	[BUG]  [BUGGY]  test(t0,  stage,  a,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  stage,  a,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  stage,  a,  yDotK[0]);	  test(t0,    y,    a,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
306	[BUG]  [BUGGY]  test(t0,  stages,  a,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  test(t0,  stages,  a,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  stages,  a,  yDotK[0]);	  test(t0,    y,    a,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
307	[BUG]  [BUGGY]  ensureCapacity(t0,  yDotK[0],  stepStart,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  ensureCapacity(t0,  yDotK[0],  stepStart,  yDotK[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  yDotK[0],  stepStart,  yDotK[0]);	  computeDerivatives(t0,    yDotK[0],    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
308	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  loop,  stage);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  loop,  stage);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getSteps(),  loop,  stage);	  Integer    stages    =    getSteps(interpolator.getSteps(),    loop);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
309	[BUG]  [BUGGY]  validateDerivatives(t0,  stage,  y[0]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  validateDerivatives(t0,  stage,  y[0]);  [BUGGY]        for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  stage,  y[0]);	  validateDerivatives(t0,    stage,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
310	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepInterpolator(rki);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {        [BUGGY]  StageHandler  stageHandler  =  prototype.getStepInterpolator(rki);  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  prototype.getStepInterpolator(rki);	  StageHandler    stageHandler    =    prototype.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
