bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  computeDerivatives(y0,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  computeDerivatives(y0,  stages,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(y0,  stages,  yDotK[0]);	  computeDerivatives(y0,    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
2	[BUG]  [BUGGY]  computeDerivatives(dt,  y0,  stepStart,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  computeDerivatives(dt,  y0,  stepStart,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(dt,  y0,  stepStart,  yDotK[0]);	  computeDerivatives(y0,    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
3	[BUG]  [BUGGY]  computeDerivatives(y0,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  computeDerivatives(y0,  stage,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(y0,  stage,  yDotK[0]);	  computeDerivatives(y0,    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
4	[BUG]  [BUGGY]  computeDerivatives(t0,  yDotK[0],  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  computeDerivatives(t0,  yDotK[0],  stepStart);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  yDotK[0],  stepStart);	  computeDerivatives(y0,    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  test(t0,  y0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  test(t0,  y0,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y0,  yDotK[0]);	  test(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
6	[BUG]  [BUGGY]  test(t0,  y,  a,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  test(t0,  y,  a,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y,  a,  yDotK[0]);	  test(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
7	[BUG]  [BUGGY]  test(a,  y0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  test(a,  y0,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(a,  y0,  yDotK[0]);	  test(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
8	[BUG]  [BUGGY]  test(t0,  y,  stages[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  test(t0,  y,  stages[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y,  stages[0]);	  test(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
9	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(interpolator);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(interpolator);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  prototype.getStepHandler(interpolator);	      StageHandler    stageHandler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(loop);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(loop);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  prototype.getStepHandler(loop);	      StageHandler    stageHandler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(t0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(t0);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  prototype.getStepHandler(t0);	      StageHandler    stageHandler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  ensureCapacity(y0,  t,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  ensureCapacity(y0,  t,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(y0,  t,  yDotK[0]);	  ensureCapacity(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
13	[BUG]  [BUGGY]  ensureCapacity(t0,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  ensureCapacity(t0,  stages,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  stages,  yDotK[0]);	  ensureCapacity(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
14	[BUG]  [BUGGY]  ensureCapacity(t0,  y,  stages[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  ensureCapacity(t0,  y,  stages[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  y,  stages[0]);	  ensureCapacity(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
15	[BUG]  [BUGGY]  ensureCapacity(y0,  t1,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  ensureCapacity(y0,  t1,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(y0,  t1,  yDotK[0]);	  ensureCapacity(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
16	[BUG]  [BUGGY]  ensureCapacity(y0,  stages[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  ensureCapacity(y0,  stages[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(y0,  stages[0]);	  ensureCapacity(y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
17	[BUG]  [BUGGY]  ensureCapacity(stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  ensureCapacity(stages,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(stages,  yDotK[0]);	  ensureCapacity(y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
18	[BUG]  [BUGGY]  ensureCapacity(t0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  ensureCapacity(t0,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  yDotK[0]);	  ensureCapacity(y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  ensureCapacity(y0,  yTmp[0]);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  ensureCapacity(y0,  yTmp[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(y0,  yTmp[0]);	  ensureCapacity(y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  Integer  stages  =  getSteps()  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =  getSteps()  -  1;  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps()  -  1;	      Integer    stages    =    getSteps();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
21	[BUG]  [BUGGY]  Integer  stages  =  getSteps().length;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =  getSteps().length;  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps().length;	      Integer    stages    =    getSteps();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
22	[BUG]  [BUGGY]  Integer  stages  =  getEndSteps();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =  getEndSteps();  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getEndSteps();	      Integer    stages    =    getSteps();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
23	[BUG]  [BUGGY]  validateDerivatives(t0,  y,  stages[0]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  validateDerivatives(t0,  y,  stages[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  y,  stages[0]);	  validateDerivatives(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
24	[BUG]  [BUGGY]  validateDerivatives(t0,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  validateDerivatives(t0,  stages,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  stages,  yDotK[0]);	  validateDerivatives(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
25	[BUG]  [BUGGY]  validateDerivatives(t0,  y1,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  validateDerivatives(t0,  y1,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  y1,  yDotK[0]);	  validateDerivatives(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  validateDerivatives(t0,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  validateDerivatives(t0,  stage,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  stage,  yDotK[0]);	  validateDerivatives(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator,  0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =  getSteps(interpolator,  0);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator,  0);	      Integer    stages    =    getSteps(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
28	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =  getSteps(interpolator,  stepStart);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator,  stepStart);	      Integer    stages    =    getSteps(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator,  loop);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =  getSteps(interpolator,  loop);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator,  loop);	      Integer    stages    =    getSteps(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.getSteps();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =(int)interpolator.getSteps();  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.getSteps();	      Integer    stages    =(Integer)interpolator.getSteps();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
31	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.getStandardSteps();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =(Integer)interpolator.getStandardSteps();  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.getStandardSteps();	      Integer    stages    =(Integer)interpolator.getSteps();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
32	[BUG]  [BUGGY]  PhaseHandler  stageHandler  =  prototype.getStepHandler();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  PhaseHandler  stageHandler  =  prototype.getStepHandler();  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	PhaseHandler  stageHandler  =  prototype.getStepHandler();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
33	[BUG]  [BUGGY]  StageHandler  stages  =  prototype.getStepHandler();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  StageHandler  stages  =  prototype.getStepHandler();  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stages  =  prototype.getStepHandler();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.getStepSize();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =(int)interpolator.getStepSize();  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.getStepSize();	      Integer    stages    =(Integer)interpolator.getStepSize();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
35	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.getStepStart();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =(Integer)interpolator.getStepStart();  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.getStepStart();	      Integer    stages    =(Integer)interpolator.getStepSize();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
36	[BUG]  [BUGGY]  computeDerivatives(t0,  y,  stages[0]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  computeDerivatives(t0,  y,  stages[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y,  stages[0]);	  computeDerivatives(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
37	[BUG]  [BUGGY]  computeDerivatives(t0,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  computeDerivatives(t0,  stages,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  stages,  yDotK[0]);	  computeDerivatives(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
38	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y,  stages[0]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  evaluateDerivatives(t0,  y,  stages[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y,  stages[0]);	  evaluateDerivatives(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
39	[BUG]  [BUGGY]  evaluateDerivatives(t0,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  evaluateDerivatives(t0,  stages,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  stages,  yDotK[0]);	  evaluateDerivatives(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
40	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y1,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  evaluateDerivatives(t0,  y1,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y1,  yDotK[0]);	  evaluateDerivatives(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
41	[BUG]  [BUGGY]  evaluateDerivatives(t0,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  evaluateDerivatives(t0,  stage,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  stage,  yDotK[0]);	  evaluateDerivatives(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
42	[BUG]  [BUGGY]  int  stepSize  =  getStepSize()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  int  stepSize  =  getStepSize()  +  1;  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	int  stepSize  =  getStepSize()  +  1;	      int    stepSize    =    getStepSize();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
43	[BUG]  [BUGGY]  int  stepSize  =  getStepSize()  -  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  int  stepSize  =  getStepSize()  -  1;  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	int  stepSize  =  getStepSize()  -  1;	      int    stepSize    =    getStepSize();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
44	[BUG]  [BUGGY]  int  stepSize  =  getStepStart();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  int  stepSize  =  getStepStart();  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	int  stepSize  =  getStepStart();	      int    stepSize    =    getStepSize();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
45	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  loop);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  loop);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getSteps(),  loop);	      Integer    stages    =    getSteps(interpolator.getSteps());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
46	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getEndSteps());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =  getSteps(interpolator.getEndSteps());  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getEndSteps());	      Integer    stages    =    getSteps(interpolator.getSteps());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
47	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  0);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getSteps(),  0);	      Integer    stages    =    getSteps(interpolator.getSteps());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps(),  1);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getSteps(),  1);	      Integer    stages    =    getSteps(interpolator.getSteps());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.clone();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =(int)interpolator.clone();  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.clone();	      Integer    stages    =(Integer)interpolator.clone();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
50	[BUG]  [BUGGY]  Integer  stages  =(int)interpolator.getTaints();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =(int)interpolator.getTaints();  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(int)interpolator.getTaints();	      Integer    stages    =(Integer)interpolator.getTaints();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
51	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.cloneTaints();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =(Integer)interpolator.cloneTaints();  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.cloneTaints();	      Integer    stages    =(Integer)interpolator.getTaints();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
52	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStandardStepInterpolator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  StageHandler  stageHandler  =  interpolator.getStandardStepInterpolator();  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interpolator.getStandardStepInterpolator();	      StageHandler    stageHandler    =    prototype.getStandardStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
53	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  StageHandler  stageHandler  =  prototype.getStepInterpolator();  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  prototype.getStepInterpolator();	      StageHandler    stageHandler    =    prototype.getStandardStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
54	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStandardStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  StageHandler  stageHandler  =  interface.getStandardStepInterpolator();  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStandardStepInterpolator();	      StageHandler    stageHandler    =    prototype.getStandardStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
55	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(t0);	      StageHandler    stageHandler    =    interface.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
56	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(loop);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(loop);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(loop);	      StageHandler    stageHandler    =    interface.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
57	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler();  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interpolator.getStepHandler();	      StageHandler    stageHandler    =    interface.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
58	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(hashCode,  rki);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(hashCode,  rki);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  prototype.getStepHandler(hashCode,  rki);	      StageHandler    stageHandler    =    prototype.getStepHandler(rki);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
59	[BUG]  [BUGGY]  computeDerivatives(y0,  t,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  computeDerivatives(y0,  t,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(y0,  t,  yDotK[0]);	  computeDerivatives(y0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
60	[BUG]  [BUGGY]  validateDerivatives(y0,  y,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  validateDerivatives(y0,  y,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(y0,  y,  yDotK[0]);	  computeDerivatives(y0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
61	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.getStepSize()  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =(Integer)interpolator.getStepSize()  +  1;  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.getStepSize()  +  1;	      Integer    stages    =(Integer)interpolator.getStepSize();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
62	[BUG]  [BUGGY]  ensureCapacity(stages,  y0[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  ensureCapacity(stages,  y0[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(stages,  y0[0]);	  ensureCapacity(y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
63	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(this);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(this);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(this);	      StageHandler    stageHandler    =    interface.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
64	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps()  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =  getSteps(interpolator.getSteps()  -  1);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getSteps()  -  1);	      Integer    stages    =    getSteps(interpolator.getSteps());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
65	[BUG]  [BUGGY]  validateDerivatives(t0,  y0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  validateDerivatives(t0,  y0,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  y0,  yDotK[0]);	  validateDerivatives(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
66	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(hash);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(hash);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  prototype.getStepHandler(hash);	      StageHandler    stageHandler    =    prototype.getStepHandler(rki);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
67	[BUG]  [BUGGY]  test(y0,  t1,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  test(y0,  t1,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(y0,  t1,  yDotK[0]);	  test(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
68	[BUG]  [BUGGY]  computeDerivatives(t0,  y0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  computeDerivatives(t0,  y0,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y0,  yDotK[0]);	  computeDerivatives(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
69	[BUG]  [BUGGY]  StageTraversal.traverse(interpolator,  new  RungeKuttaStepInterpolator());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  StageTraversal.traverse(interpolator,  new  RungeKuttaStepInterpolator());  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageTraversal.traverse(interpolator,  new  RungeKuttaStepInterpolator());	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
70	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.getSteps().clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =(Integer)interpolator.getSteps().clone();  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.getSteps().clone();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
71	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator,  y0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =  getSteps(interpolator,  y0);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator,  y0);	      Integer    stages    =    getSteps(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
72	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.cloneTree();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =(Integer)interpolator.cloneTree();  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.cloneTree();	      Integer    stages    =(Integer)interpolator.getSteps();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
73	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.getStep();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =(Integer)interpolator.getStep();  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.getStep();	      Integer    stages    =(Integer)interpolator.clone();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
74	[BUG]  [BUGGY]  computeDerivatives(dt,  y0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  computeDerivatives(dt,  y0,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(dt,  y0,  yDotK[0]);	  computeDerivatives(y0,    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
75	[BUG]  [BUGGY]  computeDerivatives(y0,  steps,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  computeDerivatives(y0,  steps,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(y0,  steps,  yDotK[0]);	  computeDerivatives(y0,    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
76	[BUG]  [BUGGY]  ensureCapacity(t0,  y0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  ensureCapacity(t0,  y0,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  y0,  yDotK[0]);	  ensureCapacity(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
77	[BUG]  [BUGGY]  ensureCapacity(y0,  t0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  ensureCapacity(y0,  t0,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(y0,  t0,  yDotK[0]);	  ensureCapacity(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
78	[BUG]  [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler();  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  handler.getStepHandler();	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
79	[BUG]  [BUGGY]  computeDerivatives(t0,  yDotK[0],  stepStart,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  computeDerivatives(t0,  yDotK[0],  stepStart,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  yDotK[0],  stepStart,  yDotK[0]);	  computeDerivatives(y0,    stepStart,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
80	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  evaluateDerivatives(t0,  y,  stages,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y,  stages,  yDotK[0]);	  evaluateDerivatives(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
81	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  evaluateDerivatives(t0,  y,  stage,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y,  stage,  yDotK[0]);	  evaluateDerivatives(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
82	[BUG]  [BUGGY]  ensureCapacity(steps,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  ensureCapacity(steps,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(steps,  yDotK[0]);	  ensureCapacity(y0,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
83	[BUG]  [BUGGY]  computeDerivatives(t0,  y,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  computeDerivatives(t0,  y,  stages,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y,  stages,  yDotK[0]);	  computeDerivatives(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
84	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(ch);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(ch);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(ch);	      StageHandler    stageHandler    =    interface.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
85	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator.getStandardSteps());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =  getSteps(interpolator.getStandardSteps());  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(interpolator.getStandardSteps());	      Integer    stages    =    getSteps(interpolator.getSteps());    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
86	[BUG]  [BUGGY]  validateDerivatives(t0,  y,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  validateDerivatives(t0,  y,  stage,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  y,  stage,  yDotK[0]);	  validateDerivatives(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
87	[BUG]  [BUGGY]  Integer  stages  =(Integer)interpolator.steps();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =(Integer)interpolator.steps();  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =(Integer)interpolator.steps();	      Integer    stages    =(Integer)interpolator.getSteps();    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
88	[BUG]  [BUGGY]  ensureCapacity(stages,  y,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  ensureCapacity(stages,  y,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(stages,  y,  yDotK[0]);	  ensureCapacity(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
89	[BUG]  [BUGGY]  test(t0,  stages,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  test(t0,  stages,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  stages,  yDotK[0]);	  test(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
90	[BUG]  [BUGGY]  test(t0,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  test(t0,  stage,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  stage,  yDotK[0]);	  test(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
91	[BUG]  [BUGGY]  test(t0,  y,  stage,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  test(t0,  y,  stage,  yDotK[0]);  [BUGGY]      for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y,  stage,  yDotK[0]);	  test(t0,    y,    yDotK[0]);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
92	[BUG]  [BUGGY]  Integer  stages  =  getSteps(stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {      [BUGGY]  Integer  stages  =  getSteps(stepStart);  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	Integer  stages  =  getSteps(stepStart);	      Integer    stages    =    getSteps();    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
