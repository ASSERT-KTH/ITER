bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  computeDerivatives(t0,  y,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]  computeDerivatives(t0,  y,  yDotK[0]);  [BUGGY]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(t0,  y,  yDotK[0]);	computeDerivatives(stepStart,  y,  yDotK[0]);  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
2	[BUG]  [BUGGY]  validateDerivatives(t0,  y,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]  validateDerivatives(t0,  y,  yDotK[0]);  [BUGGY]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	validateDerivatives(t0,  y,  yDotK[0]);	computeDerivatives(stepStart,  y,  yDotK[0]);  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
3	[BUG]  [BUGGY]  ensureCapacity(y0,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]  ensureCapacity(y0,  yDotK[0]);  [BUGGY]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(y0,  yDotK[0]);	computeDerivatives(stepStart,  y,  yDotK[0]);  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
4	[BUG]  [BUGGY]  computeDerivatives(y0,  stepStart,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]  computeDerivatives(y0,  stepStart,  yDotK[0]);  [BUGGY]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(y0,  stepStart,  yDotK[0]);	computeDerivatives(stepStart,  y,  yDotK[0]);  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]    [BUGGY]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	  	computeDerivatives(stepStart,  y,  yDotK[0]);  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
6	[BUG]  [BUGGY]    StageHandler  stageHandler  =  prototype.getStepHandler();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]    StageHandler  stageHandler  =  prototype.getStepHandler();  [BUGGY]  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	    StageHandler  stageHandler  =  prototype.getStepHandler();		non-compiled	[CE]  illegal  start  of  expression	50	None	add
7	[BUG]  [BUGGY]    StageHandler  stageHandler  =  interface.getStepHandler();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]    StageHandler  stageHandler  =  interface.getStepHandler();  [BUGGY]  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	    StageHandler  stageHandler  =  interface.getStepHandler();		non-compiled	[CE]  illegal  start  of  expression	50	None	add
8	[BUG]  [BUGGY]    StageHandler  stageHandler  =  prototype.getStandardStepInterpolator();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]    StageHandler  stageHandler  =  prototype.getStandardStepInterpolator();  [BUGGY]  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	    StageHandler  stageHandler  =  prototype.getStandardStepInterpolator();		non-compiled	[CE]  illegal  start  of  expression	50	None	add
9	[BUG]  [BUGGY]    StageHandler  stageHandler  =  prototype.getStepHandler(rki);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]    StageHandler  stageHandler  =  prototype.getStepHandler(rki);  [BUGGY]  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	    StageHandler  stageHandler  =  prototype.getStepHandler(rki);		non-compiled	[CE]  illegal  start  of  expression	50	None	add
10	[BUG]  [BUGGY]    int  stepSize  =  getStepSize();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]    int  stepSize  =  getStepSize();  [BUGGY]  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	    int  stepSize  =  getStepSize();		non-compiled	[CE]  illegal  start  of  expression	50	None	add
11	[BUG]  [BUGGY]    Integer  stages  =(Integer)interpolator.getSteps();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]    Integer  stages  =(Integer)interpolator.getSteps();  [BUGGY]  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	    Integer  stages  =(Integer)interpolator.getSteps();		non-compiled	[CE]  illegal  start  of  expression	50	None	add
12	[BUG]  [BUGGY]    Integer  stages  =(Integer)interpolator.clone();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]    Integer  stages  =(Integer)interpolator.clone();  [BUGGY]  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	    Integer  stages  =(Integer)interpolator.clone();		non-compiled	[CE]  illegal  start  of  expression	50	None	add
13	[BUG]  [BUGGY]    Integer  stages  =  getSteps();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]    Integer  stages  =  getSteps();  [BUGGY]  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	    Integer  stages  =  getSteps();		non-compiled	[CE]  illegal  start  of  expression	50	None	add
14	[BUG]  [BUGGY]    Integer  stages  =  getSteps(interpolator.getSteps());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]    Integer  stages  =  getSteps(interpolator.getSteps());  [BUGGY]  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	    Integer  stages  =  getSteps(interpolator.getSteps());		non-compiled	[CE]  illegal  start  of  expression	50	None	add
15	[BUG]  [BUGGY]    Integer  stages  =  getSteps(interpolator);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]    Integer  stages  =  getSteps(interpolator);  [BUGGY]  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	    Integer  stages  =  getSteps(interpolator);		non-compiled	[CE]  illegal  start  of  expression	50	None	add
16	[BUG]  [BUGGY]  evaluateDerivatives(t0,  y,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]  evaluateDerivatives(t0,  y,  yDotK[0]);  [BUGGY]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	evaluateDerivatives(t0,  y,  yDotK[0]);	computeDerivatives(stepStart,  y,  yDotK[0]);  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
17	[BUG]  [BUGGY]  ensureCapacity(t0,  y,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]  ensureCapacity(t0,  y,  yDotK[0]);  [BUGGY]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	ensureCapacity(t0,  y,  yDotK[0]);	computeDerivatives(stepStart,  y,  yDotK[0]);  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
18	[BUG]  [BUGGY]  computeDerivatives(y0,  y,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]  computeDerivatives(y0,  y,  yDotK[0]);  [BUGGY]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	computeDerivatives(y0,  y,  yDotK[0]);	computeDerivatives(stepStart,  y,  yDotK[0]);  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
19	[BUG]  [BUGGY]    Integer  stages  =(Integer)interpolator.getTaints();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]    Integer  stages  =(Integer)interpolator.getTaints();  [BUGGY]  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	    Integer  stages  =(Integer)interpolator.getTaints();		non-compiled	[CE]  illegal  start  of  expression	50	None	add
20	[BUG]  [BUGGY]    Integer  stages  =(Integer)interpolator.getStepSize();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]    Integer  stages  =(Integer)interpolator.getStepSize();  [BUGGY]  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	    Integer  stages  =(Integer)interpolator.getStepSize();		non-compiled	[CE]  illegal  start  of  expression	50	None	add
21	[BUG]  [BUGGY]  test(t0,  y,  yDotK[0]);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {    [BUGGY]  test(t0,  y,  yDotK[0]);  [BUGGY]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	144	144	2	replace	test(t0,  y,  yDotK[0]);	computeDerivatives(stepStart,  y,  yDotK[0]);  	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
