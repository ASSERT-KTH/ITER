bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  c[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  c[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  c[i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  1][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  1][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length  +  1][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  c[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  c[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  c[i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    k;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
4	[BUG]  [BUGGY]  if(c.length  ==  0)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  if(c.length  ==  0)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(c.length  ==  0)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    k;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
5	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[Y0.length];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[Y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[Y0.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[Y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  c[i]  =  new  double[Y0.length];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  c[i]  =  new  double[Y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  c[i]  =  new  double[Y0.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[Y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y	  final    int[][]    yDotK    =    new    int[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
8	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[c.length  +  1];  }	  final    int[][]    yDotK    =    new    int[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
9	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stack.length  +  2];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stack.length  +  2];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stack.length  +  2];	  final    double[]    yTmp    =    new    double[stack.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
10	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[t.length  +  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[t.length  +  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[t.length  +  1];	  final    double[]    yTmp    =    new    double[stack.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
11	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	  final    int[][]    yDotK    =    new    int[stages][];    for(int    i    =    0;    i    <    k;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
12	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	  final    int[][]    yDotK    =    new    int[stages][];    for(int    i    =    0;    i    <    c.length;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
13	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[c.length  -  2];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[c.length  -  2];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[c.length  -  2];	  final    double[]    yTmp    =    new    double[c.length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages.length    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages.length    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  For(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	For(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages.length    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[cs][];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[cs][];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[cs][];	  final    double[][]    yDotK    =    new    double[c][];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
18	[BUG]  [BUGGY]  final  double[][]  c  =  new  double[c][];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  c  =  new  double[c][];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  c  =  new  double[c][];	  final    double[][]    yDotK    =    new    double[c][];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
19	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[c][];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[c][];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[c][];	  final    double[]    yTmp    =    new    double[stages][];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
20	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[c.length][];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[c.length][];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[c.length][];	  final    double[]    yTmp    =    new    double[stages][];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
21	[BUG]  [BUGGY]  final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
22	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages.length  -  2];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stages.length  -  2];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages.length  -  2];	  final    double[]    yTmp    =    new    double[stages.length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
23	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    Stages;    ++i)    {    yDotK    [i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
24	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    Stages;    ++i)    {    yDotK    [i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
25	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  stages  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  stages  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    Stages;    ++i)    {    yDotK    [i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
26	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[t0.length  +  2];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[t0.length  +  2];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[t0.length  +  2];	  final    double[]    yTmp    =    new    double[t0.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
27	[BUG]  [BUGGY]  final  int  yTmp  =  new  double[t0.length  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  yTmp  =  new  double[t0.length  +  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  double[t0.length  +  1];	  final    double[]    yTmp    =    new    double[t0.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
28	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[Y0.length];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[Y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[Y0.length];  }	  if(stages    >    0)    {    final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[c.length    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[c.length    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[c.length    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[c.length    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages.length  +  2];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stages.length  +  2];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages.length  +  2];	  final    double[]    yTmp    =    new    double[stages.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
34	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages.length  +  3];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stages.length  +  3];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages.length  +  3];	  final    double[]    yTmp    =    new    double[stages.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
35	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  1][];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  1][];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length  +  1][];	  final    double[][]    yDotK    =    new    double[c.length][];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
36	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][0];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][0];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length][0];	  final    double[][]    yDotK    =    new    double[c.length][];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
37	[BUG]  [BUGGY]  final  double[][]  c  =  new  double[c.length][];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  c  =  new  double[c.length][];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  c  =  new  double[c.length][];	  final    double[][]    yDotK    =    new    double[c.length][];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
38	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[s.length  +  2];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[s.length  +  2];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[s.length  +  2];	  final    double[]    yTmp    =    new    double[s.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y.length];    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y.length];    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
41	[BUG]  [BUGGY]  final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y.length];    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y.length];    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
43	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  k  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  k  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  k  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[stages][];    for(int    k    =    0;    i    <    k;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
44	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  k  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  k  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[stages][];  for(int  k  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[stages][];    for(int    k    =    0;    i    <    k;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
45	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages  -  1][];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages  -  1][];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages  -  1][];	  final    double[][]    yDotK    =    new    double[stages    +    1][];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
46	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages  /  1][];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages  /  1][];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages  /  1][];	  final    double[][]    yDotK    =    new    double[stages    +    1][];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
47	[BUG]  [BUGGY]  final  double  yTmp  =  new  double[t0.length];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double  yTmp  =  new  double[t0.length];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double  yTmp  =  new  double[t0.length];	  final    int    yTmp    =    new    int[t0.length];    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
48	[BUG]  [BUGGY]  final  int  yTmp  =  new  int[c.length];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  yTmp  =  new  int[c.length];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  int[c.length];	  final    int    yTmp    =    new    int[t0.length];    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
49	[BUG]  [BUGGY]  final  long  yTmp  =  new  long[t0.length];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  long  yTmp  =  new  long[t0.length];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  long  yTmp  =  new  long[t0.length];	  final    int    yTmp    =    new    int[t0.length];    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
50	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }	  final    int[][]    yDotK    =    new    int[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y.length];    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
51	[BUG]  [BUGGY]  final  int[]  yTmp  =  new  int[t.length];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[]  yTmp  =  new  int[t.length];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[]  yTmp  =  new  int[t.length];	  final    double[]    yTmp    =    new    double[t.length];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
52	[BUG]  [BUGGY]  final  int  yTmp  =  new  double[t.length];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  yTmp  =  new  double[t.length];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  double[t.length];	  final    double[]    yTmp    =    new    double[t.length];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
53	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[c.length].length;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[c.length].length;  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[c.length].length;	  final    double[]    yTmp    =    new    double[stages].length;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
54	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages].length  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stages].length  +  1;  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages].length  +  1;	  final    double[]    yTmp    =    new    double[stages].length;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
55	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages].length,  c.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stages].length,  c.length;  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages].length,  c.length;	  final    double[]    yTmp    =    new    double[stages].length;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
56	[BUG]  [BUGGY]  final  double  yTmp  =  new  double[y0.length  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double  yTmp  =  new  double[y0.length  +  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double  yTmp  =  new  double[y0.length  +  1];	  final    int    yTmp    =    new    double[y0.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
57	[BUG]  [BUGGY]  final  int  yTmp  =  new  double[c.length  +  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  yTmp  =  new  double[c.length  +  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  double[c.length  +  1];	  final    int    yTmp    =    new    double[y0.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
58	[BUG]  [BUGGY]  final  double  yTmp  =  new  double[c.length  +  1];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double  yTmp  =  new  double[c.length  +  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double  yTmp  =  new  double[c.length  +  1];	  final    int    yTmp    =    new    double[y0.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
59	[BUG]  [BUGGY]  final  long  yTmp  =  new  double[y0.length  +  1];  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  long  yTmp  =  new  double[y0.length  +  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  long  yTmp  =  new  double[y0.length  +  1];	  final    int    yTmp    =    new    double[y0.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
60	[BUG]  [BUGGY]  final  int  yTmp  =  new  double[c.length];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  yTmp  =  new  double[c.length];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  double[c.length];	  final    int    yTmp    =    new    double[t0.length];    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
61	[BUG]  [BUGGY]  final  double  yTmp  =  new  double[c.length];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double  yTmp  =  new  double[c.length];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double  yTmp  =  new  double[c.length];	  final    int    yTmp    =    new    double[t0.length];    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
62	[BUG]  [BUGGY]  final  long  yTmp  =  new  double[t0.length];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  long  yTmp  =  new  double[t0.length];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  long  yTmp  =  new  double[t0.length];	  final    int    yTmp    =    new    double[t0.length];    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
63	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stages  -  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages  -  1];	  final    double[]    yTmp    =    new    double[stages    +    1];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
64	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages  *  1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stages  *  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages  *  1];	  final    double[]    yTmp    =    new    double[stages    +    1];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
65	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  for(int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	  for(int    i    =    0;    i    <    c.length;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
66	[BUG]  [BUGGY]  final  int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	  for(int    i    =    0;    i    <    c.length;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
67	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	  for(int    i    =    0;    i    <    c.length;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
68	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c][0];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c][0];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c][0];	  final    double[][]    yDotK    =    new    double[stages][0];    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
69	[BUG]  [BUGGY]  For(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  For(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	For(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	  for(int    i    =    1;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  for(int  i  =  1;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  1;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	  for(int    i    =    1;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
71	[BUG]  [BUGGY]  final  int  i  =  1;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  i  =  1;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  i  =  1;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	  for(int    i    =    1;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
72	[BUG]  [BUGGY]  final  int  yTmp  =  new  int[tack.length];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  yTmp  =  new  int[tack.length];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  int[tack.length];	  final    double[]    yTmp    =    new    double[tack.length];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
73	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[tack.length  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[tack.length  +  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[tack.length  +  1];	  final    double[]    yTmp    =    new    double[tack.length];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
74	[BUG]  [BUGGY]  final  int  yTmp  =  new  double[tack.length];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  yTmp  =  new  double[tack.length];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  double[tack.length];	  final    double[]    yTmp    =    new    double[tack.length];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
75	[BUG]  [BUGGY]  final  double  yTmp  =  new  double[stack.length];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double  yTmp  =  new  double[stack.length];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double  yTmp  =  new  double[stack.length];	  final    int    yTmp    =    new    double[stack.length];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
76	[BUG]  [BUGGY]  final  long  yTmp  =  new  double[stack.length];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  long  yTmp  =  new  double[stack.length];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  long  yTmp  =  new  double[stack.length];	  final    int    yTmp    =    new    double[stack.length];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
77	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[c.length][];	  final    int[][]    yDotK    =    new    int[stages][];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
78	[BUG]  [BUGGY]  final  long[][]  yDotK  =  new  long[stages][];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  long[][]  yDotK  =  new  long[stages][];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  long[][]  yDotK  =  new  long[stages][];	  final    int[][]    yDotK    =    new    int[stages][];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
79	[BUG]  [BUGGY]  final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  c[i]  =  new  double[y.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  c[i]  =  new  double[y.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  c[i]  =  new  double[y.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y.length];    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
80	[BUG]  [BUGGY]  final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y.length];    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
81	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  -  1];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length  -  1];	  final    double[][]    yDotK    =    new    double[stages    -    1];    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
82	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[stages  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  int[stages  -  1];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[stages  -  1];	  final    double[][]    yDotK    =    new    double[stages    -    1];    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
83	[BUG]  [BUGGY]  final  double[][]  k  =  new  double[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  k  =  new  double[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  k  =  new  double[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[k][];    for(int    i    =    0;    i    <    k;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
84	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[k][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  int[k][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[k][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[k][];    for(int    i    =    0;    i    <    k;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
85	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[k][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[c.length];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[k][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[c.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[k][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[c.length];  }	  final    double[][]    yDotK    =    new    double[k][];    for(int    i    =    0;    i    <    k;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
86	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[	  final    int[][]    yDotK    =    new    int[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
87	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[Y0.length];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[Y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[Y0.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    y0.length;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
88	[BUG]  [BUGGY]  final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  c  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    y0.length;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
89	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    y0.length;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
90	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[c.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[c.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[c.length];  }	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    y0.length;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
91	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[c.length  +  3];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[c.length  +  3];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[c.length  +  3];	  final    double[]    yTmp    =    new    double[c.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
92	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[c.length  +  4];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[c.length  +  4];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[c.length  +  4];	  final    double[]    yTmp    =    new    double[c.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
93	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    y0.length;    ++i)    {    yDotK[i]    =    new    double[y    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
94	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    y0.length;    ++i)    {    yDotK[i]    =    new    double[y    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
95	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  1][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  1][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length  +  1][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    y0.length;    ++i)    {    yDotK[i]    =    new    double[y    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
96	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[c][0];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[c][0];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[c][0];	  final    double[]    yTmp    =    new    double[stages][0];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
97	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages][1];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stages][1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages][1];	  final    double[]    yTmp    =    new    double[stages][0];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
98	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }	  final    int[][]    yDotK    =    new    int[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
99	[BUG]  [BUGGY]  final  int  yTmp  =  new  double[t0.length  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  yTmp  =  new  double[t0.length  -  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  double[t0.length  -  1];	  final    double[]    yTmp    =    new    double[t0.length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
100	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[s.length  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[s.length  -  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[s.length  -  1];	  final    double[]    yTmp    =    new    double[t0.length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
101	[BUG]  [BUGGY]  final  long  yTmp  =  new  long[stack.length];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  long  yTmp  =  new  long[stack.length];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  long  yTmp  =  new  long[stack.length];	  final    int    yTmp    =    new    int[stack.length];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
102	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[c.length  *  2  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[c.length  *  2  +  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[c.length  *  2  +  1];	  final    double[]    yTmp    =    new    double[c.length    *    2];    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
103	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[c.length  *  3];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[c.length  *  3];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[c.length  *  3];	  final    double[]    yTmp    =    new    double[c.length    *    2];    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
104	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
105	[BUG]  [BUGGY]  final  double[][]  c  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  c  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  c  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK  [i]  =  new  double[	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
106	[BUG]  [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	  final    int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
107	[BUG]  [BUGGY]  final  int  i  =  1;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  i  =  1;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  i  =  1;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	  final    int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
108	[BUG]  [BUGGY]  final  int  yTmp  =  new  int[stages.length];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  yTmp  =  new  int[stages.length];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  int[stages.length];	  final    int    yTmp    =    new    int[stack.length];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
109	[BUG]  [BUGGY]  final  for(int  i  =  1;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  for(int  i  =  1;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  for(int  i  =  1;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	  for(int    i    =    1;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
110	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  Stages.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  for(int  i  =  0;  i  <  Stages.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  Stages.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	  for(int    i    =    1;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
111	[BUG]  [BUGGY]  if(c!=  null)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  if(c!=  null)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(c!=  null)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    k;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
112	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  1][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  1][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length  +  1][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    k;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
113	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages.length    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
114	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[y0.length  -  1];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[y0.length  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[y0.length  -  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages.length    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
115	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK[i]  =  new  double[y0.length  -  1];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  for(int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK[i]  =  new  double[y0.length  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK[i]  =  new  double[y0.length  -  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages.length    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
116	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][1];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][1];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages][1];	  final    double[][]    yDotK    =    new    double[stages    -    1];    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
117	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][2];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][2];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages][2];	  final    double[][]    yDotK    =    new    double[stages    -    1];    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
118	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  double[stages][];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  double[stages][];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  double[stages][];	  final    int[][]    yDotK    =    new    int[stages][];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
119	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[stages][0];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  int[stages][0];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[stages][0];	  final    int[][]    yDotK    =    new    int[stages][];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
120	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    y0.length;    ++i)    {    yDotK[i]    =    new    double[y    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
121	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[Y0.length];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[Y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[Y0.length];  }	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    Stages;    ++i)    {    yDotK    [i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
122	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	  for(int    i    =    0;    i    <    c.length;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
123	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	  for(int    i    =    0;    i    <    c.length;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
124	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y.length];    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
125	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[t.length  -  1];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[t.length  -  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[t.length  -  1];	  final    double[]    yTmp    =    new    double[t.length];    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
126	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y1.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y1.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y1.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y.length];    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
127	[BUG]  [BUGGY]  final  int  yTmp  =  new  double[y0.length  +  2];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  yTmp  =  new  double[y0.length  +  2];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  double[y0.length  +  2];	  final    int    yTmp    =    new    double[y0.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
128	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages  +  1][0];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stages  +  1][0];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages  +  1][0];	  final    double[]    yTmp    =    new    double[stages    +    1];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
129	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[	  final    int[][]    yDotK    =    new    int[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
130	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  Stage.length;  ++i)  {  yDotK  [i]  =  new  double[  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  Stage.length;  ++i)  {  yDotK  [i]  =  new  double[  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  Stage.length;  ++i)  {  yDotK  [i]  =  new  double[	  final    int[][]    yDotK    =    new    int[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
131	[BUG]  [BUGGY]  if(stages  >  0)  {  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  if(stages  >  0)  {  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(stages  >  0)  {  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }	  final    int[][]    yDotK    =    new    int[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y.length];    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
132	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }	  final    int[][]    yDotK    =    new    int[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y.length];    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
133	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages  +  1].length;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stages  +  1].length;  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages  +  1].length;	  final    double[]    yTmp    =    new    double[stages].length;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
134	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages-1].length;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stages-1].length;  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages-1].length;	  final    double[]    yTmp    =    new    double[stages].length;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
135	[BUG]  [BUGGY]  final  int  yTmp  =  new  double[stages.length];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  yTmp  =  new  double[stages.length];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  double[stages.length];	  final    int    yTmp    =    new    double[stack.length];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
136	[BUG]  [BUGGY]  final  int  yTmp  =  new  double[stack.length  +  1];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  yTmp  =  new  double[stack.length  +  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  double[stack.length  +  1];	  final    int    yTmp    =    new    double[stack.length];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
137	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[c.length    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
138	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length  -  1];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length  -  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[c.length    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
139	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[y0.length  +  3];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[y0.length  +  3];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[y0.length  +  3];	  final    double[]    yTmp    =    new    double[y0.length    +    2];    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
140	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[j0.length];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[j0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[j0.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    y0.length;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
141	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y	  final    int[][]    yDotK    =    new    int[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
142	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages][2];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stages][2];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages][2];	  final    double[]    yTmp    =    new    double[stages][0];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
143	[BUG]  [BUGGY]  final  double  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	  final    int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
144	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages.length  -  3];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stages.length  -  3];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages.length  -  3];	  final    double[]    yTmp    =    new    double[stages.length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
145	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages.length  -  1]  +  c.length;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stages.length  -  1]  +  c.length;  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages.length  -  1]  +  c.length;	  final    double[]    yTmp    =    new    double[stages.length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
146	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[stages][];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yTmp  =  new  double[stages][];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yTmp  =  new  double[stages][];	  final    double[]    yTmp    =    new    double[stages][];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
147	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[stages][0];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yTmp  =  new  double[stages][0];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yTmp  =  new  double[stages][0];	  final    double[]    yTmp    =    new    double[stages][];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
148	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages  *  1][];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages  *  1][];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages  *  1][];	  final    double[][]    yDotK    =    new    double[stages    +    1][];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
149	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[c.length  *  1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[c.length  *  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[c.length  *  1];	  final    double[]    yTmp    =    new    double[c.length    *    2];    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
150	[BUG]  [BUGGY]  if(stages  >  0)  {  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  if(stages  >  0)  {  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(stages  >  0)  {  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }	  final    int[][]    yDotK    =    new    int[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
151	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[Y0.length];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[Y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[Y0.length];  }	  if(stages    >    1)    {    final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    c.length;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
152	[BUG]  [BUGGY]  if(stages  >  0)  {  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  if(stages  >  0)  {  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(stages  >  0)  {  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	  final    int[][]    yDotK    =    new    int[stages][];    for(int    i    =    0;    i    <    c.length;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
153	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stack.length  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stack.length  -  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stack.length  -  1];	  final    double[]    yTmp    =    new    double[t0.length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
154	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages].length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stages].length);  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages].length);	  final    double[]    yTmp    =    new    double[stages].length;    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
155	[BUG]  [BUGGY]  if(stages  >  1)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  if(stages  >  1)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(stages  >  1)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    Stages;    ++i)    {    yDotK    [i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
156	[BUG]  [BUGGY]  float  yTmp  =  new  double[t0.length];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  float  yTmp  =  new  double[t0.length];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	float  yTmp  =  new  double[t0.length];	  final    int    yTmp    =    new    double[t0.length];    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
157	[BUG]  [BUGGY]  double  yTmp  =  new  double[t0.length];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  double  yTmp  =  new  double[t0.length];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	double  yTmp  =  new  double[t0.length];	  final    int    yTmp    =    new    double[t0.length];    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
158	[BUG]  [BUGGY]  if(c.length  ==  y0)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  if(c.length  ==  y0)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(c.length  ==  y0)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    y0.length;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
159	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages  /  1];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[stages  /  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages  /  1];	  final    double[]    yTmp    =    new    double[stages    +    1];    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
160	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[stages][1];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yTmp  =  new  double[stages][1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yTmp  =  new  double[stages][1];	  final    double[]    yTmp    =    new    double[stages][0];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
161	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  for(int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  stages.length;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages.length    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
162	[BUG]  [BUGGY]  if(stages  >  1)  {  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  if(stages  >  1)  {  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(stages  >  1)  {  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	  final    int[][]    yDotK    =    new    int[stages][];    for(int    i    =    0;    i    <    c.length;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
163	[BUG]  [BUGGY]  if(c.length  ==  0)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  if(c.length  ==  0)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(c.length  ==  0)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
164	[BUG]  [BUGGY]  if(stages  >  0)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  k  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  if(stages  >  0)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  k  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(stages  >  0)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  k  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[stages][];    for(int    k    =    0;    i    <    k;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
165	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  k  =  0;  k  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  k  =  0;  k  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages][];  for(int  k  =  0;  k  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	  final    int[][]    yDotK    =    new    int[stages][];    for(int    i    =    0;    i    <    k;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
166	[BUG]  [BUGGY]  final  double[][]  a  =  new  double[stages  -  1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  a  =  new  double[stages  -  1];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  a  =  new  double[stages  -  1];	  final    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
167	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  1][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length  +  1][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length  +  1][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
168	[BUG]  [BUGGY]  if(c.length  ==  0)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  if(c.length  ==  0)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(c.length  ==  0)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y.length];    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
169	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages  -  2];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages  -  2];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages  -  2];	  final    double[][]    yDotK    =    new    double[stages    -    1];    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
170	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages  -  1]  [0];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages  -  1]  [0];  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages  -  1]  [0];	  final    double[][]    yDotK    =    new    double[stages    -    1];    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
171	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages  -  1],  forward);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[stages  -  1],  forward);  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages  -  1],  forward);	  final    double[][]    yDotK    =    new    double[stages    -    1];    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
172	[BUG]  [BUGGY]  if(c.length  ==  0)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  if(c.length  ==  0)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(c.length  ==  0)  {  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    y0.length;    ++i)    {    yDotK[i]    =    new    double[y    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
173	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[Y0.length];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[Y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[Y0.length];  }	  final    double[][]    yDotK    =    new    double[c.length][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[Y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
174	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y.length];    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
175	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[tack.length  -  1];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  double[]  yTmp  =  new  double[tack.length  -  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[tack.length  -  1];	  final    double[]    yTmp    =    new    double[tack.length];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
176	[BUG]  [BUGGY]  final  int  yTmp  =  new  double[stages.length  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  final  int  yTmp  =  new  double[stages.length  +  1];  [BUGGY]        AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  double[stages.length  +  1];	  final    int    yTmp    =    new    double[y0.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
177	[BUG]  [BUGGY]  if(stages  >  1)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }      [BUGGY]  if(stages  >  1)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]      final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(stages  >  1)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	  final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    y0.length;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
