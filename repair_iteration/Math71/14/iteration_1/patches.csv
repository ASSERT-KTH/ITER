bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[Y0.length];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[Y0.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[Y0.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  final  int  yTmp  =  new  int[stack.length];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  int  yTmp  =  new  int[stack.length];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  int[stack.length];	  final    double[]    yTmp    =    new    double[stack.length];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stack.length  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[]  yTmp  =  new  double[stack.length  +  1];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stack.length  +  1];	  final    double[]    yTmp    =    new    double[stack.length];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
6	[BUG]  [BUGGY]  final  int  yTmp  =  new  double[stack.length];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  int  yTmp  =  new  double[stack.length];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  double[stack.length];	  final    double[]    yTmp    =    new    double[stack.length];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages.length  -  1];  }	      if(stages    >    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[c.length  -  1];  }	      if(stages    >    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
9	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length][];	      final    double[][]    yDotK    =    new    double[stages][];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c][];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[][]  yDotK  =  new  double[c][];  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c][];	      final    double[][]    yDotK    =    new    double[stages][];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[stages][];	      final    double[][]    yDotK    =    new    double[stages][];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[c.length  +  1];  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[]  yTmp  =  new  double[c.length  +  1];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[c.length  +  1];	  final    double[]    yTmp    =    new    double[y0.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[t0.length  +  1];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[]  yTmp  =  new  double[t0.length  +  1];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[t0.length  +  1];	  final    double[]    yTmp    =    new    double[y0.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  final  int  yTmp  =  new  double[y0.length  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  int  yTmp  =  new  double[y0.length  +  1];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  double[y0.length  +  1];	  final    double[]    yTmp    =    new    double[y0.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
15	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[s.length  +  1];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[]  yTmp  =  new  double[s.length  +  1];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[s.length  +  1];	  final    double[]    yTmp    =    new    double[y0.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
16	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages][];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[]  yTmp  =  new  double[stages][];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages][];	  final    double[]    yTmp    =    new    double[stages.length];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
17	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages.length  +  1];  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[]  yTmp  =  new  double[stages.length  +  1];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages.length  +  1];	  final    double[]    yTmp    =    new    double[stages.length];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
18	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages][0];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[]  yTmp  =  new  double[stages][0];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages][0];	  final    double[]    yTmp    =    new    double[stages.length];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	      for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
20	[BUG]  [BUGGY]  final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	      for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
21	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
22	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
23	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
24	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[c.length  -  1];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[]  yTmp  =  new  double[c.length  -  1];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[c.length  -  1];	  final    double[]    yTmp    =    new    double[c.length];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
25	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[c.length  *  2];  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[]  yTmp  =  new  double[c.length  *  2];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[c.length  *  2];	  final    double[]    yTmp    =    new    double[c.length];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    k;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
27	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    k;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
28	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[k][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[][]  yDotK  =  new  double[k][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[k][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    k;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
29	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    c.length;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
30	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    c.length;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
31	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    c.length;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
32	[BUG]  [BUGGY]  final  int  yTmp  =  new  int[t0.length];  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  int  yTmp  =  new  int[t0.length];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  int[t0.length];	  final    double[]    yTmp    =    new    double[t0.length];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
33	[BUG]  [BUGGY]  final  int  yTmp  =  new  double[t0.length];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  int  yTmp  =  new  double[t0.length];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int  yTmp  =  new  double[t0.length];	  final    double[]    yTmp    =    new    double[t0.length];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[c.length][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y.length];    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
35	[BUG]  [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  int[][]  yDotK  =  new  int[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y.length];    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y.length];    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
37	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[tack.length];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[]  yTmp  =  new  double[tack.length];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[tack.length];	  final    double[]    yTmp    =    new    double[stack.length];    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
38	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[y0.length  +  2];  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[]  yTmp  =  new  double[y0.length  +  2];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[y0.length  +  2];	  final    double[]    yTmp    =    new    double[y0.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
39	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
40	[BUG]  [BUGGY]  final  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	      for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
41	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  Stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages  +  1];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[]  yTmp  =  new  double[stages  +  1];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages  +  1];	  final    double[]    yTmp    =    new    double[stages.length];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
43	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[t.length];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[]  yTmp  =  new  double[t.length];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[t.length];	  final    double[]    yTmp    =    new    double[c.length];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][0];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[][]  yDotK  =  new  double[stages][0];  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages][0];	      final    double[][]    yDotK    =    new    double[stages][];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
45	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages  +  1][];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[][]  yDotK  =  new  double[stages  +  1][];  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages  +  1][];	      final    double[][]    yDotK    =    new    double[stages][];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
46	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  k  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  k  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages][];  for(int  k  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    k;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
47	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[t0.length  -  1];  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[]  yTmp  =  new  double[t0.length  -  1];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[t0.length  -  1];	  final    double[]    yTmp    =    new    double[t0.length];    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
48	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages  -  1];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[][]  yDotK  =  new  double[stages  -  1];  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages  -  1];	      if(stages    >    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
49	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  y0.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    c.length;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
50	[BUG]  [BUGGY]  if(stages  >  0)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  if(stages  >  0)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(stages  >  0)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    c.length;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	      for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
52	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[c.length  +  2];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[]  yTmp  =  new  double[c.length  +  2];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[c.length  +  2];	  final    double[]    yTmp    =    new    double[c.length];    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
53	[BUG]  [BUGGY]  if(stages  >  1)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  if(stages  >  1)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(stages  >  1)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    c.length;    ++i)    {    yDotK[i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  if(stages  >  0)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  if(stages  >  0)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(stages  >  0)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y.length];    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
55	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages.length  -  1];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[]  yTmp  =  new  double[stages.length  -  1];  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages.length  -  1];	  final    double[]    yTmp    =    new    double[stages.length];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
56	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages].length;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  final  double[]  yTmp  =  new  double[stages].length;  [BUGGY]      AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages].length;	  final    double[]    yTmp    =    new    double[stages.length];    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
57	[BUG]  [BUGGY]  if(stages  >  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  if(stages  >  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(stages  >  1)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }	      if(stages    >    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK[i]    =    new    double[stages    -    1];    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
58	[BUG]  [BUGGY]  if(stages  >  0)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }    [BUGGY]  if(stages  >  0)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]    final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	if(stages  >  0)  {  final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }	      final    double[][]    yDotK    =    new    double[stages][];    for(int    i    =    0;    i    <    stages;    ++i)    {    yDotK    [i]    =    new    double[y0.length];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
