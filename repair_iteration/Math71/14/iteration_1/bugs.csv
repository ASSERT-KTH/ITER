bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]    final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	    final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
2	[BUG]  [BUGGY]    final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]    final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }  [BUGGY]  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	    final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y.length];  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
3	[BUG]  [BUGGY]    final  double[][]  yDotK  =  new  double[stages][];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]    final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]    final  double[][]  yDotK  =  new  double[stages][];  [BUGGY]  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	    final  double[][]  yDotK  =  new  double[stages][];		non-compiled	[CE]  illegal  start  of  expression	28	None	add
4	[BUG]  [BUGGY]    final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]    final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]    final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y  [BUGGY]  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	    final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y		non-compiled	[CE]  illegal  start  of  expression	28	None	add
5	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[c.length];  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]  final  double[]  yTmp  =  new  double[c.length];  [BUGGY]    AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[c.length];	final  double[]  yTmp  =  new  double[y0.length];  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
6	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[t0.length];  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]  final  double[]  yTmp  =  new  double[t0.length];  [BUGGY]    AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[t0.length];	final  double[]  yTmp  =  new  double[y0.length];  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
7	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stack.length];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]    final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]  final  double[]  yTmp  =  new  double[stack.length];  [BUGGY]    AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stack.length];	final  double[]  yTmp  =  new  double[y0.length];  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
8	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[stages.length];  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]  final  double[]  yTmp  =  new  double[stages.length];  [BUGGY]    AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[stages.length];	final  double[]  yTmp  =  new  double[y0.length];  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
9	[BUG]  [BUGGY]  final  double[]  yTmp  =  new  double[y0.length  +  1];  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]  final  double[]  yTmp  =  new  double[y0.length  +  1];  [BUGGY]    AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	final  double[]  yTmp  =  new  double[y0.length  +  1];	final  double[]  yTmp  =  new  double[y0.length];  	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
10	[BUG]  [BUGGY]    final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]    final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	    final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  c.length;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
11	[BUG]  [BUGGY]    final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]    final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }  [BUGGY]  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	    final  double[][]  yDotK  =  new  double[stages][];  for(int  i  =  0;  i  <  k;  ++i)  {  yDotK[i]  =  new  double[y0.length];  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
12	[BUG]  [BUGGY]    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
13	[BUG]  [BUGGY]    for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  [BUGGY]    for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }  [BUGGY]  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	114	114	2	replace	    for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[i]  =  new  double[stages  -  1];  }		non-compiled	[CE]  illegal  start  of  expression	28	None	add
