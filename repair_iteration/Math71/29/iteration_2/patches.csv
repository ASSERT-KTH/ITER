bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
2	[BUG]  [BUGGY]  long  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  long  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	long  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
3	[BUG]  [BUGGY]  final  int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  final  int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	final  int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
4	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  sum;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  0;  l  <  sum;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  0;  l  <  sum;  ++l)  {	  for(int    l    =    1;    l    <    sum;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
5	[BUG]  [BUGGY]  for(int  l  =  1;  l  <  sum.length;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  1;  l  <  sum.length;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  1;  l  <  sum.length;  ++l)  {	  for(int    l    =    1;    l    <    sum;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
6	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  y0.length;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  1;  j  <  y0.length;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  1;  j  <  y0.length;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  for(int    j    =    0;    j    <    y0.length;    ++j)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
7	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  k;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  0;  j  <  k;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  0;  j  <  k;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  for(int    j    =    0;    j    <    y0.length;    ++j)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
8	[BUG]  [BUGGY]  for(int  k  =  0;  j  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  j  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  j  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  for(int    j    =    0;    j    <    y0.length;    ++j)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
9	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  y0.length;  ++j)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  1;  j  <  y0.length;  ++j)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  1;  j  <  y0.length;  ++j)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    j    =    0;    j    <    y0.length;    ++j)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
10	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++l)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  y0.length;  ++l)  {	  for(int    l    =    1;    k    <    stages;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
11	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  y0.length;  ++k)  {	  for(int    l    =    1;    k    <    stages;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
12	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {	  for(int    l    =    1;    k    <    stages;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
13	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  0;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  0;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  0;  ++l)  {	  for(int    l    =    1;    k    <    stages;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  sum  +=  a[i-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  sum  +=  a[i-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  i  =  0;  i  <  k;  ++i)  {  sum  +=  a[i-1][0]  *  yDotK[0][j];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    sum    +=    a[i-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  sum  +=  a[i-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  sum  +=  a[i-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  sum  +=  a[i-1][0]  *  yDotK[0][j];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    sum    +=    a[i-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  sum  +=  a[i-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  sum  +=  a[i-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  sum  +=  a[i-1][0]  *  yDotK[0][j];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    sum    +=    a[i-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  j  <  stages;  ++i)  {  sum  +=  a[i-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  i  =  0;  j  <  stages;  ++i)  {  sum  +=  a[i-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  i  =  0;  j  <  stages;  ++i)  {  sum  +=  a[i-1][0]  *  yDotK[0][j];  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    sum    +=    a[i-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
18	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  0;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  stages;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  0;  j  <  stages;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  0;  j  <  stages;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    0;    j    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
21	[BUG]  [BUGGY]  for(int  k  =  0;  j  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  j  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  j  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    0;    j    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
22	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  0;  j  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  0;  j  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    0;    j    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
23	[BUG]  [BUGGY]  for(int  k  =  1;  j  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  j  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  j  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    0;    j    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
24	[BUG]  [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
25	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  0;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
26	[BUG]  [BUGGY]  double  stepSize  =  a[k-1][0]  *  yDotK[0][j]  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-1][0]  *  yDotK[0][j]  +  1;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-1][0]  *  yDotK[0][j]  +  1;	  double    stepSize    =    c[k-1][0]    *    yDotK[0][j]    +    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
27	[BUG]  [BUGGY]  double  stepSize  =  y[k-1][0]  *  yDotK[0][j]  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  y[k-1][0]  *  yDotK[0][j]  +  1;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  y[k-1][0]  *  yDotK[0][j]  +  1;	  double    stepSize    =    c[k-1][0]    *    yDotK[0][j]    +    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
28	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
29	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  0;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
30	[BUG]  [BUGGY]  double  stepSize  =  c[k-1][0].doubleValue().doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  c[k-1][0].doubleValue().doubleValue();  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  c[k-1][0].doubleValue().doubleValue();	  double    stepSize    =    c[k-1][0].doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
31	[BUG]  [BUGGY]  double  stepSize  =  c[k-1][0].doubleValue()  *  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  c[k-1][0].doubleValue()  *  1;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  c[k-1][0].doubleValue()  *  1;	  double    stepSize    =    c[k-1][0].doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
32	[BUG]  [BUGGY]  for(int  l  =  1;  k  <  stageSize;  ++k)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  1;  k  <  stageSize;  ++k)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  1;  k  <  stageSize;  ++k)  {	  for(int    k    =    1;    l    <    stageSize;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
33	[BUG]  [BUGGY]  for(int  l  =  1;  k  <  stageSize;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  1;  k  <  stageSize;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  1;  k  <  stageSize;  ++l)  {	  for(int    k    =    1;    l    <    stageSize;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
34	[BUG]  [BUGGY]  for(int  l  =  1;  l  <  stageSize;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  1;  l  <  stageSize;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  1;  l  <  stageSize;  ++l)  {	  for(int    k    =    1;    l    <    stageSize;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
35	[BUG]  [BUGGY]  for(int  l  =  0;  k  <  stages;  ++k)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  0;  k  <  stages;  ++k)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  0;  k  <  stages;  ++k)  {	  for(int    k    =    0;    l    <    stages;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
36	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  stages;  ++k)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  0;  l  <  stages;  ++k)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  0;  l  <  stages;  ++k)  {	  for(int    k    =    0;    l    <    stages;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
37	[BUG]  [BUGGY]  for(int  k  =  0;  l  <  y0.length;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  l  <  y0.length;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  l  <  y0.length;  ++l)  {	  for(int    k    =    0;    l    <    stages;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
38	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  yDotK.length;  ++l)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  0;  l  <  yDotK.length;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  0;  l  <  yDotK.length;  ++l)  {	  for(int    l    =    0;    l    <    y0.length;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
39	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  a.length;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  0;  l  <  a.length;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  0;  l  <  a.length;  ++l)  {	  for(int    l    =    0;    l    <    y0.length;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
40	[BUG]  [BUGGY]  double  stepSize  =  a[k-1][0]  *  yDotK[1][j]  +  sum;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-1][0]  *  yDotK[1][j]  +  sum;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-1][0]  *  yDotK[1][j]  +  sum;	  double    stepSize    =    c[k-1][0]    *    yDotK[1][j]    +    sum;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
41	[BUG]  [BUGGY]  double  stepSize  =  y[k-1][0]  *  yDotK[1][j]  +  sum;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  y[k-1][0]  *  yDotK[1][j]  +  sum;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  y[k-1][0]  *  yDotK[1][j]  +  sum;	  double    stepSize    =    c[k-1][0]    *    yDotK[1][j]    +    sum;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
42	[BUG]  [BUGGY]  double  stepSize  =  yDotK[k-1][0]  *  c[1][j]  +  sum;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  yDotK[k-1][0]  *  c[1][j]  +  sum;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  yDotK[k-1][0]  *  c[1][j]  +  sum;	  double    stepSize    =    c[k-1][0]    *    yDotK[1][j]    +    sum;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
43	[BUG]  [BUGGY]  double  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }	  double    k    =    0;    k    <    stages;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
44	[BUG]  [BUGGY]  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }	  double    k    =    0;    k    <    stages;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
45	[BUG]  [BUGGY]  double  k  =  1;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  k  =  1;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  k  =  1;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }	  double    k    =    0;    k    <    stages;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
46	[BUG]  [BUGGY]  double  stepSize  =  y[k-1][1]  *  yDotK[1][j]  +  sum;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  y[k-1][1]  *  yDotK[1][j]  +  sum;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  y[k-1][1]  *  yDotK[1][j]  +  sum;	  double    stepSize    =    y[k-1][1]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
47	[BUG]  [BUGGY]  sum  +=  a[k-1][0]  *  yTmp[0][j];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  sum  +=  a[k-1][0]  *  yTmp[0][j];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	sum  +=  a[k-1][0]  *  yTmp[0][j];	  sum    +=    a[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
48	[BUG]  [BUGGY]  sum  +=  a[k-1][0]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  sum  +=  a[k-1][0]  *  yDotK[1][j];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	sum  +=  a[k-1][0]  *  yDotK[1][j];	  sum    +=    a[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
49	[BUG]  [BUGGY]  sum  +=  a[y0.length-1][0]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  sum  +=  a[y0.length-1][0]  *  yDotK[0][j];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	sum  +=  a[y0.length-1][0]  *  yDotK[0][j];	  sum    +=    a[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
50	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  stages;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  0;  j  <  stages;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  0;  j  <  stages;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    j    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
51	[BUG]  [BUGGY]  for(int  k  =  1;  j  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  j  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  j  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    j    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
52	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  stages;  ++j)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  0;  j  <  stages;  ++j)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  0;  j  <  stages;  ++j)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    j    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  l  <  stages;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  i  =  0;  l  <  stages;  ++i)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  i  =  0;  l  <  stages;  ++i)  {	  for(int    i    =    1;    l    <    stages;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  1;  l  <  y0.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  i  =  1;  l  <  y0.length;  ++i)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  i  =  1;  l  <  y0.length;  ++i)  {	  for(int    i    =    1;    l    <    stages;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
55	[BUG]  [BUGGY]  for(int  l  =  1;  l  <  y0.length;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  1;  l  <  y0.length;  ++i)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  1;  l  <  y0.length;  ++i)  {	  for(int    i    =    1;    l    <    stages;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
56	[BUG]  [BUGGY]  for(int  l  =  1;  l  <  0;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  1;  l  <  0;  ++i)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  1;  l  <  0;  ++i)  {	  for(int    i    =    1;    l    <    stages;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    1;    k    <    y0.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
58	[BUG]  [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    1;    k    <    y0.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
59	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  yDotK.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  yDotK.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  yDotK.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    1;    k    <    y0.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
60	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    1;    k    <    stages.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
61	[BUG]  [BUGGY]  double  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
62	[BUG]  [BUGGY]  long  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  long  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	long  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
63	[BUG]  [BUGGY]  final  int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  final  int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	final  int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
64	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  k;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  k  <  k;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  k  <  k;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    1;    k    <    0;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
65	[BUG]  [BUGGY]  double  stepSize  =  a[k-1][0]  *  yDotK[0][j]  +  sum;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-1][0]  *  yDotK[0][j]  +  sum;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-1][0]  *  yDotK[0][j]  +  sum;	  double    stepSize    =    c[k-1][0]    *    yDotK[0][j]    +    sum;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
66	[BUG]  [BUGGY]  double  stepSize  =  y[k-1][0]  *  yDotK[0][j]  +  sum;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  y[k-1][0]  *  yDotK[0][j]  +  sum;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  y[k-1][0]  *  yDotK[0][j]  +  sum;	  double    stepSize    =    c[k-1][0]    *    yDotK[0][j]    +    sum;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
67	[BUG]  [BUGGY]  double  stepSize  =  c[k-1][0]  *  yDotK[0][j]  +  sub;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  c[k-1][0]  *  yDotK[0][j]  +  sub;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  c[k-1][0]  *  yDotK[0][j]  +  sub;	  double    stepSize    =    c[k-1][0]    *    yDotK[0][j]    +    sum;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
68	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  1;  j  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  1;  j  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    1;    j    <    0;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
69	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  0;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  1;  j  <  0;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  1;  j  <  0;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    1;    j    <    0;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
70	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  k;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  1;  j  <  k;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  1;  j  <  k;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    1;    j    <    0;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
71	[BUG]  [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
72	[BUG]  [BUGGY]  long  k  =  0;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  long  k  =  0;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	long  k  =  0;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
73	[BUG]  [BUGGY]  double  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
74	[BUG]  [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
75	[BUG]  [BUGGY]  int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
76	[BUG]  [BUGGY]  for(int  l  =  2;  l  <  a.length;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  2;  l  <  a.length;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  2;  l  <  a.length;  ++l)  {	  for(int    l    =    1;    l    <    a.length;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
77	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  k;  ++k)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  k;  ++k)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  k;  ++k)  {	  for(int    l    =    1;    k    <    k;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
78	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  l;  ++k)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  l;  ++k)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  l;  ++k)  {	  for(int    l    =    1;    k    <    k;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
79	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  k;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  k;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  k;  ++l)  {	  for(int    l    =    1;    k    <    k;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
80	[BUG]  [BUGGY]  for(int  l  =  1;  k  <  0;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  1;  k  <  0;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  1;  k  <  0;  ++l)  {	  for(int    k    =    1;    l    <    0;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
81	[BUG]  [BUGGY]  for(int  k  =  1;  l  <  0;  ++k)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  l  <  0;  ++k)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  l  <  0;  ++k)  {	  for(int    k    =    1;    l    <    0;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
82	[BUG]  [BUGGY]  for(int  l  =  1;  k  <  0;  ++k)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  1;  k  <  0;  ++k)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  1;  k  <  0;  ++k)  {	  for(int    k    =    1;    l    <    0;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  1;  l  <  0;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  i  =  1;  l  <  0;  ++i)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  i  =  1;  l  <  0;  ++i)  {	  for(int    k    =    1;    l    <    0;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
84	[BUG]  [BUGGY]  double  stepSize  =  a[k-1][0].doubleValue()  +  sum;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-1][0].doubleValue()  +  sum;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-1][0].doubleValue()  +  sum;	  double    stepSize    =    a[k-1][0].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
85	[BUG]  [BUGGY]  double  stepSize  =  a[k-1][0].doubleValue().doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-1][0].doubleValue().doubleValue();  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-1][0].doubleValue().doubleValue();	  double    stepSize    =    a[k-1][0].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
86	[BUG]  [BUGGY]  double  stepSize  =  a[k-1][0].doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-1][0].doubleValue()  +  1;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-1][0].doubleValue()  +  1;	  double    stepSize    =    a[k-1][0].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
87	[BUG]  [BUGGY]  double  stepSize  =  a[k-1][0]  *  yDotK[1][j]  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-1][0]  *  yDotK[1][j]  +  1;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-1][0]  *  yDotK[1][j]  +  1;	  double    stepSize    =    c[k-1][0]    *    yDotK[1][j]    +    1;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
88	[BUG]  [BUGGY]  double  stepSize  =  y[k-1][0]  *  yDotK[1][j]  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  y[k-1][0]  *  yDotK[1][j]  +  1;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  y[k-1][0]  *  yDotK[1][j]  +  1;	  double    stepSize    =    c[k-1][0]    *    yDotK[1][j]    +    1;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
89	[BUG]  [BUGGY]  for(int  k  =  1;  j  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  j  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  j  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    j    <    stages;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
90	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  0;  j  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  0;  j  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    j    <    stages;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
91	[BUG]  [BUGGY]  for(int  k  =  0;  j  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  j  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  j  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    j    <    stages;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
92	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  yDotK.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  k  <  yDotK.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  k  <  yDotK.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
93	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  stages;  ++j)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  1;  j  <  stages;  ++j)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  1;  j  <  stages;  ++j)  {	  for(int    l    =    1;    j    <    stages;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
94	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  stages;  ++k)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  1;  j  <  stages;  ++k)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  1;  j  <  stages;  ++k)  {	  for(int    l    =    1;    j    <    stages;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
95	[BUG]  [BUGGY]  for(int  l  =  0;  j  <  stages;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  0;  j  <  stages;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  0;  j  <  stages;  ++l)  {	  for(int    l    =    1;    j    <    stages;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
96	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  stages;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  1;  j  <  stages;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  1;  j  <  stages;  ++l)  {	  for(int    l    =    1;    j    <    stages;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
97	[BUG]  [BUGGY]  int  stepSize  =  y[k-1][0]  *  yDotK[1][j]  +  sum;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  stepSize  =  y[k-1][0]  *  yDotK[1][j]  +  sum;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  stepSize  =  y[k-1][0]  *  yDotK[1][j]  +  sum;	  int    stepSize    =    y[k-1][0]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
98	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  c.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  c.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  c.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    k    <    c.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
99	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    k    <    c.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
100	[BUG]  [BUGGY]  double  stepSize  =  sum[k-1][0].doubleValue()  *  c;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  sum[k-1][0].doubleValue()  *  c;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  sum[k-1][0].doubleValue()  *  c;	  double    stepSize    =    c[k-1][0].doubleValue()    *    sum;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
101	[BUG]  [BUGGY]  double  stepSize  =  c[k-1][0].doubleValue()  *  sum  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  c[k-1][0].doubleValue()  *  sum  +  1;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  c[k-1][0].doubleValue()  *  sum  +  1;	  double    stepSize    =    c[k-1][0].doubleValue()    *    sum;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
102	[BUG]  [BUGGY]  double  stepSize  =  sum[c-1][0].doubleValue()  *  k;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  sum[c-1][0].doubleValue()  *  k;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  sum[c-1][0].doubleValue()  *  k;	  double    stepSize    =    c[k-1][0].doubleValue()    *    sum;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
103	[BUG]  [BUGGY]  double  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
104	[BUG]  [BUGGY]  int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
105	[BUG]  [BUGGY]  int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
106	[BUG]  [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
107	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    k    <    k;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
108	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  k;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  k;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  k;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    k    <    k;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
109	[BUG]  [BUGGY]  int  k  =  0;  k  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  0;  k  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  0;  k  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    k    <    k;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
110	[BUG]  [BUGGY]  double  stepSize  =  c[k-2][0].doubleValue()  +  sum;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  c[k-2][0].doubleValue()  +  sum;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  c[k-2][0].doubleValue()  +  sum;	  double    stepSize    =    c[k-2][0].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
111	[BUG]  [BUGGY]  double  stepSize  =  a[k-2][0].doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-2][0].doubleValue();  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-2][0].doubleValue();	  double    stepSize    =    c[k-2][0].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
112	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
113	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
114	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  0;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
115	[BUG]  [BUGGY]  double  k  =  1;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  k  =  1;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  k  =  1;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  double    k    =    0;    k    <    stages;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
116	[BUG]  [BUGGY]  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  double    k    =    0;    k    <    stages;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
117	[BUG]  [BUGGY]  double  stepSize  =  a[k-1][0]  *  yDotK[2][j];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-1][0]  *  yDotK[2][j];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-1][0]  *  yDotK[2][j];	  double    stepSize    =    a[k-1][0]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
118	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    0;    k    <    c.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
119	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  c.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  c.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  c.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    0;    k    <    c.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
120	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    0;    k    <    c.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
121	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  stages.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  stages.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    k    <    stages.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
122	[BUG]  [BUGGY]  int  k  =  0;  k  <  stages.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  0;  k  <  stages.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  0;  k  <  stages.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    k    <    stages.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
123	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages.length;  ++i)  {  sum  +=  a[i-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  i  =  0;  i  <  stages.length;  ++i)  {  sum  +=  a[i-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  i  =  0;  i  <  stages.length;  ++i)  {  sum  +=  a[i-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    k    <    stages.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
124	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  y0.length-1;  ++l)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  0;  l  <  y0.length-1;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  0;  l  <  y0.length-1;  ++l)  {	  for(int    l    =    0;    l    <    k-1;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
125	[BUG]  [BUGGY]  for(int  k  =  0;  l  <  k-1;  ++k)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  l  <  k-1;  ++k)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  l  <  k-1;  ++k)  {	  for(int    l    =    0;    l    <    k-1;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
126	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  k-2;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  0;  l  <  k-2;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  0;  l  <  k-2;  ++l)  {	  for(int    l    =    0;    l    <    k-1;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
127	[BUG]  [BUGGY]  sum  +=  y[k-1][0]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  sum  +=  y[k-1][0]  *  yDotK[0][j];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	sum  +=  y[k-1][0]  *  yDotK[0][j];	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
128	[BUG]  [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
129	[BUG]  [BUGGY]  long  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  long  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	long  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
130	[BUG]  [BUGGY]  final  int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  final  int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	final  int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
131	[BUG]  [BUGGY]  double  stepSize  =  a[k-1][1]  *  yDotK[2][j];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-1][1]  *  yDotK[2][j];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-1][1]  *  yDotK[2][j];	  double    stepSize    =    a[k-1][1]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
132	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  sum;  ++k)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  sum;  ++k)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  sum;  ++k)  {	  for(int    l    =    1;    k    <    stages;    ++k)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
133	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  0;  ++k)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  0;  ++k)  {	  for(int    l    =    1;    k    <    stages;    ++k)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
134	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  a.length;  ++k)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  a.length;  ++k)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  a.length;  ++k)  {	  for(int    l    =    1;    k    <    stages;    ++k)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
135	[BUG]  [BUGGY]  for(int  l  =  1;  k  <  y0.length;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  1;  k  <  y0.length;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  1;  k  <  y0.length;  ++l)  {	  for(int    k    =    1;    l    <    y0.length;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
136	[BUG]  [BUGGY]  for(int  k  =  1;  l  <  y0.length;  ++k)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  l  <  y0.length;  ++k)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  l  <  y0.length;  ++k)  {	  for(int    k    =    1;    l    <    y0.length;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
137	[BUG]  [BUGGY]  double  l  =  a[k-1][0]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  l  =  a[k-1][0]  *  yDotK[0][j];  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  l  =  a[k-1][0]  *  yDotK[0][j];	  double    l    =    c[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
138	[BUG]  [BUGGY]  double  l  =  y[k-1][0]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  l  =  y[k-1][0]  *  yDotK[0][j];  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  l  =  y[k-1][0]  *  yDotK[0][j];	  double    l    =    c[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
139	[BUG]  [BUGGY]  double  l  =  c[k-1][0]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  l  =  c[k-1][0]  *  yDotK[1][j];  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  l  =  c[k-1][0]  *  yDotK[1][j];	  double    l    =    c[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
140	[BUG]  [BUGGY]  double  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  int    k    =    1;    k    <    y0.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
141	[BUG]  [BUGGY]  Integer  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  Integer  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	Integer  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  int    k    =    1;    k    <    y0.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
142	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  yDotK.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  yDotK.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  yDotK.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    1;    k    <    y0.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
143	[BUG]  [BUGGY]  int  stepSize  =  a[k-1][0]  *  yDotK[1][j]  +  sum;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  stepSize  =  a[k-1][0]  *  yDotK[1][j]  +  sum;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  stepSize  =  a[k-1][0]  *  yDotK[1][j]  +  sum;	  int    stepSize    =    a[k-1][0]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
144	[BUG]  [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
145	[BUG]  [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    1;    k    <    y0.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
146	[BUG]  [BUGGY]  double  k  =  a.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  k  =  a.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  k  =  a.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  double    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
147	[BUG]  [BUGGY]  double  k  =  0;  k  <  yDotK.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  k  =  0;  k  <  yDotK.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  k  =  0;  k  <  yDotK.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  double    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
148	[BUG]  [BUGGY]  int  k  =  0;  k  <  stages.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  0;  k  <  stages.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  0;  k  <  stages.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    k    <    stages.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
149	[BUG]  [BUGGY]  for(int  l  =  0;  k  <  k;  ++l)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  0;  k  <  k;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  0;  k  <  k;  ++l)  {	  for(int    k    =    0;    l    <    k;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
150	[BUG]  [BUGGY]  double  stepSize  =  y[0][0]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  y[0][0]  *  yDotK[1][j];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  y[0][0]  *  yDotK[1][j];	  double    stepSize    =    y[k-1][0]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
151	[BUG]  [BUGGY]  double  stepSize  =  sum[k-1][0].doubleValue()  +  c;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  sum[k-1][0].doubleValue()  +  c;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  sum[k-1][0].doubleValue()  +  c;	  double    stepSize    =    c[k-1][0].doubleValue()    +    sum;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
152	[BUG]  [BUGGY]  double  stepSize  =  sum[k-1][0].doubleValue()  +  c.doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  sum[k-1][0].doubleValue()  +  c.doubleValue();  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  sum[k-1][0].doubleValue()  +  c.doubleValue();	  double    stepSize    =    c[k-1][0].doubleValue()    +    sum;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
153	[BUG]  [BUGGY]  for(int  l  =  3;  l  <  y0.length;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  3;  l  <  y0.length;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  3;  l  <  y0.length;  ++l)  {	  for(int    l    =    2;    l    <    y0.length;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
154	[BUG]  [BUGGY]  long  k  =  0;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  long  k  =  0;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	long  k  =  0;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
155	[BUG]  [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	Integer  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
156	[BUG]  [BUGGY]  double  stepSize  =  y[k-1][0].doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  y[k-1][0].doubleValue();  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  y[k-1][0].doubleValue();	  double    stepSize    =    a[k-1][0].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
157	[BUG]  [BUGGY]  double  stepSize  =  a[k-1][1].doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-1][1].doubleValue();  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-1][1].doubleValue();	  double    stepSize    =    a[k-1][0].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
158	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  s.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  k  <  s.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  k  <  s.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    1;    k    <    0;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
159	[BUG]  [BUGGY]  double  stepSize  =  c[k-1][0]  *  yDotK[0][j]  +  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  c[k-1][0]  *  yDotK[0][j]  +  2;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  c[k-1][0]  *  yDotK[0][j]  +  2;	  double    stepSize    =    c[k-1][0]    *    yDotK[0][j]    +    1;    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
160	[BUG]  [BUGGY]  for(int  k  =  0;  l  <  k-1;  ++l)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  l  <  k-1;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  l  <  k-1;  ++l)  {	  for(int    l    =    0;    l    <    k-1;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
161	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  stages-1;  ++l)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  0;  l  <  stages-1;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  0;  l  <  stages-1;  ++l)  {	  for(int    l    =    0;    l    <    k-1;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
162	[BUG]  [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	Integer  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
163	[BUG]  [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	Integer  k  =  0;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
164	[BUG]  [BUGGY]  double  stepSize  =  yTmp[k-1][0]  *  yDotK[1][j]  +  sum;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  yTmp[k-1][0]  *  yDotK[1][j]  +  sum;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  yTmp[k-1][0]  *  yDotK[1][j]  +  sum;	  double    stepSize    =    c[k-1][0]    *    yDotK[1][j]    +    sum;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
165	[BUG]  [BUGGY]  for(int  l  =  0;  k  <  stages;  ++l)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  0;  k  <  stages;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  0;  k  <  stages;  ++l)  {	  for(int    k    =    0;    l    <    stages;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
166	[BUG]  [BUGGY]  for(int  k  =  0;  j  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  j  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  j  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    0;    j    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
167	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  0;  j  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  0;  j  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    0;    j    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
168	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  stages.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  stages.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    0;    k    <    stages.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
169	[BUG]  [BUGGY]  int  stepSize  =  y[k-1][0]  *  yDotK[1][j]  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  stepSize  =  y[k-1][0]  *  yDotK[1][j]  +  1;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  stepSize  =  y[k-1][0]  *  yDotK[1][j]  +  1;	  int    stepSize    =    y[k-1][0]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
170	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  y1;  ++l)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  0;  l  <  y1;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  0;  l  <  y1;  ++l)  {	  for(int    l    =    0;    l    <    stages;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
171	[BUG]  [BUGGY]  Integer  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  Integer  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	Integer  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
172	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[2][j];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[2][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[2][j];  }	  for(int    k    =    1;    k    <    y0.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
173	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  stages;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  0;  l  <  stages;  ++i)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  0;  l  <  stages;  ++i)  {	  for(int    i    =    1;    l    <    stages;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
174	[BUG]  [BUGGY]  double  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  double    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
175	[BUG]  [BUGGY]  double  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }	  double    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
176	[BUG]  [BUGGY]  double  stepSize  =  a[k-1][1]  *  yDotK[1][0];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-1][1]  *  yDotK[1][0];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-1][1]  *  yDotK[1][0];	  double    stepSize    =    a[k-1][1]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
177	[BUG]  [BUGGY]  double  stepSize  =  c[0][0].doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  c[0][0].doubleValue();  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  c[0][0].doubleValue();	  double    stepSize    =    c[k-2][0].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
178	[BUG]  [BUGGY]  double  stepSize  =  c[k-3][0].doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  c[k-3][0].doubleValue();  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  c[k-3][0].doubleValue();	  double    stepSize    =    c[k-2][0].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
179	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  stages;  ++j)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  0;  j  <  stages;  ++j)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  0;  j  <  stages;  ++j)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    0;    j    <    stages;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
180	[BUG]  [BUGGY]  double  stepSize  =  c[k-1][0].doubleValue()  +  sum  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  c[k-1][0].doubleValue()  +  sum  +  1;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  c[k-1][0].doubleValue()  +  sum  +  1;	  double    stepSize    =    c[k-1][0].doubleValue()    +    sum;    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
181	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    0;    k    <    k;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
182	[BUG]  [BUGGY]  double  k  =  0;  k  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  k  =  0;  k  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  k  =  0;  k  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    k    <    k;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
183	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[2][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[2][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[2][j];  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
184	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  k  <  stages.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  k  <  stages.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    1;    k    <    stages.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
185	[BUG]  [BUGGY]  int  k  =  1;  k  <  stages.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  1;  k  <  stages.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  1;  k  <  stages.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    1;    k    <    stages.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
186	[BUG]  [BUGGY]  Integer  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  Integer  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	Integer  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
187	[BUG]  [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	Integer  k  =  0;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
188	[BUG]  [BUGGY]  for(int  l  =  1;  l  <  =  0;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  1;  l  <  =  0;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  1;  l  <  =  0;  ++l)  {	  for(int    l    =    1;    l    <    0;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
189	[BUG]  [BUGGY]  double  stepSize  =  y[k-1][0]  *  yTmp[0][j];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  y[k-1][0]  *  yTmp[0][j];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  y[k-1][0]  *  yTmp[0][j];	  double    stepSize    =    y[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
190	[BUG]  [BUGGY]  Double  stepSize  =  c[k-1][0].doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  Double  stepSize  =  c[k-1][0].doubleValue();  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	Double  stepSize  =  c[k-1][0].doubleValue();	  double    stepSize    =    c[k-1][0].doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
191	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  k.length;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  0;  j  <  k.length;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  0;  j  <  k.length;  ++j)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  for(int    j    =    0;    j    <    y0.length;    ++j)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
192	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y0.length;  ++j)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  j  =  0;  j  <  y0.length;  ++j)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  j  =  0;  j  <  y0.length;  ++j)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    j    =    0;    j    <    y0.length;    ++j)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
193	[BUG]  [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
194	[BUG]  [BUGGY]  for(int  k  =  0;  j  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  j  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  j  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    1;    j    <    0;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
195	[BUG]  [BUGGY]  Integer  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  Integer  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	Integer  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
196	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  a.length;  ++l)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  a.length;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  a.length;  ++l)  {	  for(int    l    =    1;    k    <    stages;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
197	[BUG]  [BUGGY]  for(int  l  =  2;  l  <  sum;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  2;  l  <  sum;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  2;  l  <  sum;  ++l)  {	  for(int    l    =    1;    l    <    sum;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
198	[BUG]  [BUGGY]  double  stepSize  =  y[k-1][1]  *  yDotK[1][0];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  y[k-1][1]  *  yDotK[1][0];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  y[k-1][1]  *  yDotK[1][0];	  double    stepSize    =    y[k-1][1]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
199	[BUG]  [BUGGY]  for(int  k  =  0;  l  <  stageSize;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  l  <  stageSize;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  l  <  stageSize;  ++l)  {	  for(int    k    =    1;    l    <    stageSize;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
200	[BUG]  [BUGGY]  double  stepSize  =  c[k-1][0].doubleValue()  *  sum  +  2;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  c[k-1][0].doubleValue()  *  sum  +  2;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  c[k-1][0].doubleValue()  *  sum  +  2;	  double    stepSize    =    c[k-1][0].doubleValue()    *    sum;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
201	[BUG]  [BUGGY]  double  stepSize  =  a[k-1][0].doubleValue()  *  sum;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-1][0].doubleValue()  *  sum;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-1][0].doubleValue()  *  sum;	  double    stepSize    =    c[k-1][0].doubleValue()    *    sum;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
202	[BUG]  [BUGGY]  double  stepSize  =  a[k-1][0]  *  yTmp[0][j];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-1][0]  *  yTmp[0][j];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-1][0]  *  yTmp[0][j];	  double    stepSize    =    a[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
203	[BUG]  [BUGGY]  double  stepSize  =  c[k-1][0]  *  yDotK[0][j]  +  a[k-1][0];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  c[k-1][0]  *  yDotK[0][j]  +  a[k-1][0];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  c[k-1][0]  *  yDotK[0][j]  +  a[k-1][0];	  double    stepSize    =    c[k-1][0]    *    yDotK[0][j]    +    sum;    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
204	[BUG]  [BUGGY]  double  k  =  1;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  k  =  1;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  k  =  1;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
205	[BUG]  [BUGGY]  int  k  =  1;  k  <  k;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  int  k  =  1;  k  <  k;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	int  k  =  1;  k  <  k;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    1;    k    <    stages;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
206	[BUG]  [BUGGY]  for(int  k  =  0;  j  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  j  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  j  <  k;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	  for(int    k    =    0;    j    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
207	[BUG]  [BUGGY]  double  stepSize  =  c[k-2][0].doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  c[k-2][0].doubleValue()  +  1;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  c[k-2][0].doubleValue()  +  1;	  double    stepSize    =    c[k-2][0].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
208	[BUG]  [BUGGY]  double  k  =  0;  k  <  t0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  k  =  0;  k  <  t0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  k  =  0;  k  <  t0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }	  double    k    =    0;    k    <    stages;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
209	[BUG]  [BUGGY]  double  stepSize  =  c[k-1][0]  *  yDotK[1][j]  /  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  c[k-1][0]  *  yDotK[1][j]  /  1;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  c[k-1][0]  *  yDotK[1][j]  /  1;	  double    stepSize    =    c[k-1][0]    *    yDotK[1][j]    +    1;    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
210	[BUG]  [BUGGY]  double  stepSize  =  a[k-1][2]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-1][2]  *  yDotK[1][j];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-1][2]  *  yDotK[1][j];	  double    stepSize    =    a[k-1][1]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
211	[BUG]  [BUGGY]  for(int  k  =  0;  j  <  k;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  j  <  k;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  j  <  k;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    j    <    stages;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
212	[BUG]  [BUGGY]  double  stepSize  =  y[k-2][0]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  y[k-2][0]  *  yDotK[1][j];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  y[k-2][0]  *  yDotK[1][j];	  double    stepSize    =    y[k-1][0]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
213	[BUG]  [BUGGY]  double  stepSize  =  c[k-1][0].doubleValue()  /  sum;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  c[k-1][0].doubleValue()  /  sum;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  c[k-1][0].doubleValue()  /  sum;	  double    stepSize    =    c[k-1][0].doubleValue()    *    sum;    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
214	[BUG]  [BUGGY]  for(int  l  =  1;  l  <  stages;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  1;  l  <  stages;  ++i)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  1;  l  <  stages;  ++i)  {	  for(int    i    =    1;    l    <    stages;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
215	[BUG]  [BUGGY]  for(int  i  =  1;  l  <  k;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  i  =  1;  l  <  k;  ++i)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  i  =  1;  l  <  k;  ++i)  {	  for(int    i    =    1;    l    <    stages;    ++i)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
216	[BUG]  [BUGGY]  double  stepSize  =  c[k-1][0]  *  yDotK[1][j]  +  a[k-1][0];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  c[k-1][0]  *  yDotK[1][j]  +  a[k-1][0];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  c[k-1][0]  *  yDotK[1][j]  +  a[k-1][0];	  double    stepSize    =    c[k-1][0]    *    yDotK[1][j]    +    sum;    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
217	[BUG]  [BUGGY]  for(int  k  =  0;  l  <  k;  ++k)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  l  <  k;  ++k)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  l  <  k;  ++k)  {	  for(int    k    =    0;    l    <    k;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
218	[BUG]  [BUGGY]  sum  +=  a[k-2][0]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  sum  +=  a[k-2][0]  *  yDotK[0][j];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	sum  +=  a[k-2][0]  *  yDotK[0][j];	  sum    +=    a[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
219	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  nSteps;  ++l)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  0;  l  <  nSteps;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  0;  l  <  nSteps;  ++l)  {	  for(int    l    =    0;    l    <    stages;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
220	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  Y0.length;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  0;  l  <  Y0.length;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  0;  l  <  Y0.length;  ++l)  {	  for(int    l    =    0;    l    <    stages;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
221	[BUG]  [BUGGY]  double  k  =  0;  k  <  stages.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  k  =  0;  k  <  stages.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  k  =  0;  k  <  stages.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    k    <    stages.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
222	[BUG]  [BUGGY]  boolean  k  =  0;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  boolean  k  =  0;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	boolean  k  =  0;  k  <  stages;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
223	[BUG]  [BUGGY]  boolean  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  boolean  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	boolean  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
224	[BUG]  [BUGGY]  char  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  char  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	char  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
225	[BUG]  [BUGGY]  boolean  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  boolean  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	boolean  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
226	[BUG]  [BUGGY]  for(int  k  =  0;  l  <  stages-1;  ++l)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  l  <  stages-1;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  l  <  stages-1;  ++l)  {	  for(int    l    =    0;    l    <    k-1;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
227	[BUG]  [BUGGY]  double  k  =  0;  k  <  t0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  k  =  0;  k  <  t0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  k  =  0;  k  <  t0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  double    k    =    0;    k    <    stages;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
228	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  0;  k  <  stages.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  0;  k  <  stages.length;  ++k)  {  sum  +=  y[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    y[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
229	[BUG]  [BUGGY]  boolean  k  =  0;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  boolean  k  =  0;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	boolean  k  =  0;  k  <  stages;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
230	[BUG]  [BUGGY]  double  l  =  yDotK[k-1][0]  *  c[0][j];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  l  =  yDotK[k-1][0]  *  c[0][j];  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  l  =  yDotK[k-1][0]  *  c[0][j];	  double    l    =    c[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
231	[BUG]  [BUGGY]  for(int  k  =  1;  j  <  0;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  j  <  0;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  j  <  0;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    1;    k    <    0;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
232	[BUG]  [BUGGY]  double  k  =  1;  k  <  0;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  k  =  1;  k  <  0;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  k  =  1;  k  <  0;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  for(int    k    =    1;    k    <    0;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
233	[BUG]  [BUGGY]  boolean  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  boolean  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	boolean  k  =  1;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	  int    k    =    1;    k    <    y0.length;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
234	[BUG]  [BUGGY]  for(int  l  =  1;  l  <  a.length  -  1;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  l  =  1;  l  <  a.length  -  1;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  l  =  1;  l  <  a.length  -  1;  ++l)  {	  for(int    l    =    1;    l    <    a.length;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
235	[BUG]  [BUGGY]  double  stepSize  =  a[k-2][0]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-2][0]  *  yDotK[0][j];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-2][0]  *  yDotK[0][j];	  double    stepSize    =    a[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
236	[BUG]  [BUGGY]  boolean  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  boolean  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	boolean  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  a[k-1][0]  *  yDotK[0][j];  }	  int    k    =    0;    k    <    y0.length;    ++k)    {    sum    +=    a[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
237	[BUG]  [BUGGY]  double  stepSize  =  a[k-1][0].doubleValue()  +  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-1][0].doubleValue()  +  2;  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-1][0].doubleValue()  +  2;	  double    stepSize    =    a[k-1][0].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
238	[BUG]  [BUGGY]  for(int  k  =  1;  l  <  stages;  ++k)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  l  <  stages;  ++k)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  l  <  stages;  ++k)  {	  for(int    k    =    1;    l    <    0;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
239	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  stages;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  stages;  ++l)  {	  for(int    l    =    1;    k    <    k;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
240	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stageSize;  ++l)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  for(int  k  =  1;  k  <  stageSize;  ++l)  {  [BUGGY]      sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	for(int  k  =  1;  k  <  stageSize;  ++l)  {	  for(int    l    =    1;    k    <    k;    ++l)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
241	[BUG]  [BUGGY]  double  stepSize  =  a[k-2][0]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];      [BUGGY]  double  stepSize  =  a[k-2][0]  *  yDotK[1][j];  [BUGGY]      for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }    [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	151	151	2	replace	double  stepSize  =  a[k-2][0]  *  yDotK[1][j];	  double    stepSize    =    a[k-1][0]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
