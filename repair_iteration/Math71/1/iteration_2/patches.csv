bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  -  stepSize);  stepSize  =  Math.abs(dt  -  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.abs(dt    -    stepSize);    stepSize  =  Math.abs(dt  -  stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	52	2	add
2	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  -  stepSize);  stepSize  =  Math.abs(dt  -  stepSize);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  -  stepSize);  stepSize  =  Math.abs(dt  -  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(dt    -    stepSize);    stepSize  =  Math.abs(dt  -  stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	52	2	add
3	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  -  stepSize);  StepHandler  stepSize  =  Math.abs(dt  -  stepSize);  [CE]  bad  operand  types  for  binary  operator  '-'  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  -  stepSize);  StepHandler  stepSize  =  Math.abs(dt  -  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(dt    -    stepSize);    StepHandler  stepSize  =  Math.abs(dt  -  stepSize);	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '-'	52	None	add
4	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  -  stepSize);  stepSize  =  Math.abs(dt  -  stepSize));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  -  stepSize);  stepSize  =  Math.abs(dt  -  stepSize));  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(dt    -    stepSize);    stepSize  =  Math.abs(dt  -  stepSize));	  timeout    	non-compiled	[CE]  ';'  expected	52	None	add
5	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  -  stepSize);  phaseSize  =  Math.abs(dt  -  stepSize);  [CE]  cannot  find  symbol  phaseSize  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  -  stepSize);  phaseSize  =  Math.abs(dt  -  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(dt    -    stepSize);    phaseSize  =  Math.abs(dt  -  stepSize);	  timeout    	non-compiled	[CE]  cannot  find  symbol  phaseSize	52	None	add
6	[BUG]  [BUGGY]  loop  =   "Steps: "  +  dt;  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Steps: "  +  dt;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Steps: "  +  dt;	  loop    =       "Steps:   ";    	non-compiled	[CE]  incompatible  types	37	None	replace
7	[BUG]  [BUGGY]  loop  =   "Steps: "  +  dt.toString();  [CE]  double  cannot  be  dereferenced  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Steps: "  +  dt.toString();  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Steps: "  +  dt.toString();	  loop    =       "Steps:   ";    	non-compiled	[CE]  double  cannot  be  dereferenced	37	None	replace
8	[BUG]  [BUGGY]  StepHandler  handler  =  prototype.getInstance();  stepSize  =  Math.abs(dt);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  StepHandler  handler  =  prototype.getInstance();  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	StepHandler  handler  =  prototype.getInstance();  stepSize  =  Math.abs(dt);	          stepSize    =    Math.abs(dt);    StepHandler    handler    =    prototype.getInstance();    stepSize    =    Math.abs(dt);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
9	[BUG]  [BUGGY]  handler  =  prototype.getInstance();  stepSize  =  Math.abs(dt);  [CE]  cannot  find  symbol  handler  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  handler  =  prototype.getInstance();  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	handler  =  prototype.getInstance();  stepSize  =  Math.abs(dt);	          stepSize    =    Math.abs(dt);    StepHandler    handler    =    prototype.getInstance();    stepSize    =    Math.abs(dt);    	non-compiled	[CE]  cannot  find  symbol  handler	89	None	replace
10	[BUG]  [BUGGY]  StepHandler  handler  =  prototype.getInstance();  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  StepHandler  handler  =  prototype.getInstance();  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	StepHandler  handler  =  prototype.getInstance();	          stepSize    =    Math.abs(dt);    StepHandler    handler    =    prototype.getInstance();    stepSize    =    Math.abs(dt);    	non-compiled	[CE]  cannot  find  symbol	89	None	replace
11	[BUG]  [BUGGY]  StepHandler  handler  =  getStepInterpolator(t0,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  StepHandler  handler  =  getStepInterpolator(t0,  dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	StepHandler  handler  =  getStepInterpolator(t0,  dt,  stepSize);	          stepSize    =    Math.abs(dt);    StepHandler    handler    =    getStepInterpolator(t0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
12	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt);  StepHandler  handler  =  getStepInterpolator(t0,  dt,  stepStart);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt);  StepHandler  handler  =  getStepInterpolator(t0,  dt,  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt);  StepHandler  handler  =  getStepInterpolator(t0,  dt,  stepStart);	          stepSize    =    Math.abs(dt);    StepHandler    handler    =    getStepInterpolator(t0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	107	None	replace
13	[BUG]  [BUGGY]  processStep(t0,  dt,  stepSize,  yTmp);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  processStep(t0,  dt,  stepSize,  yTmp);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	processStep(t0,  dt,  stepSize,  yTmp);	  loop    =    true;    processStep(t0,    dt,    stepSize,    yTmp);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
14	[BUG]  [BUGGY]  loop  =  false;  processStep(t0,  dt,  stepSize,  yTmp);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  processStep(t0,  dt,  stepSize,  yTmp);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  processStep(t0,  dt,  stepSize,  yTmp);	  loop    =    true;    processStep(t0,    dt,    stepSize,    yTmp);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
15	[BUG]  [BUGGY]  ensureCapacity(t0,  dt,  stepSize,  yTmp);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  ensureCapacity(t0,  dt,  stepSize,  yTmp);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	ensureCapacity(t0,  dt,  stepSize,  yTmp);	  loop    =    true;    processStep(t0,    dt,    stepSize,    yTmp);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
16	[BUG]  [BUGGY]  t0  =  t;  processStep(t0,  dt,  stepSize,  yTmp);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  t0  =  t;  processStep(t0,  dt,  stepSize,  yTmp);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	t0  =  t;  processStep(t0,  dt,  stepSize,  yTmp);	  loop    =    true;    processStep(t0,    dt,    stepSize,    yTmp);    	non-compiled	[CE]  cannot  find  symbol	99	None	replace
17	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  stepSize  =  Math.max(stepStart,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.max(stepStart,    dt);    stepSize  =  Math.max(stepStart,  dt);	  timeout    	compilable	  [FE]  AssertionFailedError  	90	2	add
18	[BUG]  [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  stepSize  =  Math.max(stepStart,  dt);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  stepSize  =  Math.max(stepStart,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(stepStart,    dt);    stepSize  =  Math.max(stepStart,  dt);	  timeout    	compilable	  [FE]  AssertionFailedError  	90	2	add
19	[BUG]  [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  StepHandler  stepSize  =  Math.max(stepStart,  dt);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  StepHandler  stepSize  =  Math.max(stepStart,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(stepStart,    dt);    StepHandler  stepSize  =  Math.max(stepStart,  dt);	  timeout    	non-compiled	[CE]  incompatible  types	90	None	add
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  stepSize  =  Math.min(stepStart,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.max(stepStart,    dt);    stepSize  =  Math.min(stepStart,  dt);	  timeout    	compilable	  [FE]  AssertionFailedError  	90	2	add
21	[BUG]  [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  stepSize  =  Math.min(stepStart,  dt);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  stepSize  =  Math.min(stepStart,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(stepStart,    dt);    stepSize  =  Math.min(stepStart,  dt);	  timeout    	compilable	  [FE]  AssertionFailedError  	90	2	add
22	[BUG]  [BUGGY]  loop  =  false;  dt  =  System.currentTimeMillis()  -  dt;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  dt  =  System.currentTimeMillis()  -  dt;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  dt  =  System.currentTimeMillis()  -  dt;	  loop    =    false;    timeout    =    System.currentTimeMillis()    -    dt;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	55	None	replace
23	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  stepSize  =  System.currentTimeMillis()  -  dt;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	loop  =  false;  stepSize  =  System.currentTimeMillis()  -  dt;	  loop    =    false;    timeout    =    System.currentTimeMillis()    -    dt;    	compilable	  [FE]  AssertionFailedError  	55	2	replace
24	[BUG]  [BUGGY]  loop  =  false;  stepSize  =  System.currentTimeMillis()  -  dt;  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  stepSize  =  System.currentTimeMillis()  -  dt;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  stepSize  =  System.currentTimeMillis()  -  dt;	  loop    =    false;    timeout    =    System.currentTimeMillis()    -    dt;    	compilable	  [FE]  AssertionFailedError  	55	2	replace
25	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  0);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.max(dt,  0);	  stepSize    =    Math.min(dt,    stepStart);    timeout    	compilable	timeout	24	1	replace
26	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  0);  timeout  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  0);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(dt,  0);	  stepSize    =    Math.min(dt,    stepStart);    timeout    	compilable	timeout	24	1	replace
27	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  y);  [CE]  no  suitable  method  found  for  min(double,double[])  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  y);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(dt,  y);	  stepSize    =    Math.min(dt,    stepStart);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double[])	24	None	replace
28	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  dt.length);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  dt.length);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(dt,  dt.length);	  stepSize    =    Math.min(dt,    stepStart);    timeout    	non-compiled	[CE]  double  cannot  be  dereferenced	24	None	replace
29	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  StepHandler  handler  =  getStepInterpolator();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  StepHandler  handler  =  getStepInterpolator();  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(dt,  stepSize);  StepHandler  handler  =  getStepInterpolator();	          stepSize    =    Math.min(stepSize,    dt);    StepHandler    handler    =    getStepInterpolator();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
30	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  StepHandler  handler  =  getStepInterpolator();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  StepHandler  handler  =  getStepInterpolator();  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(stepStart,  dt);  StepHandler  handler  =  getStepInterpolator();	          stepSize    =    Math.min(stepSize,    dt);    StepHandler    handler    =    getStepInterpolator();    	non-compiled	[CE]  cannot  find  symbol	101	None	replace
31	[BUG]  [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  phaseSize  =  Math.max(stepSize,  dt);  [CE]  cannot  find  symbol  phaseSize  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  phaseSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(stepStart,  dt);  phaseSize  =  Math.max(stepSize,  dt);	          stepSize    =    Math.max(stepSize,    dt);    phaseSize    =    Math.max(stepSize,    dt);    	non-compiled	[CE]  cannot  find  symbol  phaseSize	17	None	replace
32	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.max(stepStart,  dt);  stepSize  =  Math.max(stepSize,  dt);	          stepSize    =    Math.max(stepSize,    dt);    phaseSize    =    Math.max(stepSize,    dt);    	compilable	timeout	17	1	replace
33	[BUG]  [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  stepSize  =  Math.max(stepSize,  dt);  timeout  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(stepStart,  dt);  stepSize  =  Math.max(stepSize,  dt);	          stepSize    =    Math.max(stepSize,    dt);    phaseSize    =    Math.max(stepSize,    dt);    	compilable	timeout	17	1	replace
34	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.min(stepStart,  dt);  stepSize  =  Math.max(stepSize,  dt);	          stepSize    =    Math.max(stepSize,    dt);    phaseSize    =    Math.max(stepSize,    dt);    	compilable	timeout	17	1	replace
35	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  stepSize  =  Math.max(stepSize,  dt);  timeout  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(stepStart,  dt);  stepSize  =  Math.max(stepSize,  dt);	          stepSize    =    Math.max(stepSize,    dt);    phaseSize    =    Math.max(stepSize,    dt);    	compilable	timeout	17	1	replace
36	[BUG]  [BUGGY]  LoopTraversal.traverse(interpolator,  dt,  stepSize);  [CE]  cannot  find  symbol  LoopTraversal  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(interpolator,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(interpolator,  dt,  stepSize);	  LoopTraversal.traverse(interpolator,    dt,    rki);    	non-compiled	[CE]  cannot  find  symbol  LoopTraversal	86	None	replace
37	[BUG]  [BUGGY]  LoopTraversal.traverse(interpolator,  dt,  prototype);  [CE]  cannot  find  symbol  LoopTraversal  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(interpolator,  dt,  prototype);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(interpolator,  dt,  prototype);	  LoopTraversal.traverse(interpolator,    dt,    rki);    	non-compiled	[CE]  cannot  find  symbol  LoopTraversal	86	None	replace
38	[BUG]  [BUGGY]  LoopTraversal.traverse(interpolator,  dt,  stepStart);  [CE]  cannot  find  symbol  LoopTraversal  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(interpolator,  dt,  stepStart);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(interpolator,  dt,  stepStart);	  LoopTraversal.traverse(interpolator,    dt,    rki);    	non-compiled	[CE]  cannot  find  symbol  LoopTraversal	86	None	replace
39	[BUG]  [BUGGY]  LoopTraversal.traverse(interpolator,  dt,  phase);  [CE]  cannot  find  symbol  phase  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(interpolator,  dt,  phase);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(interpolator,  dt,  phase);	  LoopTraversal.traverse(interpolator,    dt,    rki);    	non-compiled	[CE]  cannot  find  symbol  phase	86	None	replace
40	[BUG]  [BUGGY]  loop  =  false;  processStep(interpolator,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  processStep(interpolator,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  processStep(interpolator,  dt,  stepSize);	  loop    =    true;    processStep(interpolator,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
41	[BUG]  [BUGGY]  processStep(interpolator,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  processStep(interpolator,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	processStep(interpolator,  dt,  stepSize);	  loop    =    true;    processStep(interpolator,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
42	[BUG]  [BUGGY]  stepSize  =  true;  processStep(interpolator,  dt,  stepSize);  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  true;  processStep(interpolator,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  true;  processStep(interpolator,  dt,  stepSize);	  loop    =    true;    processStep(interpolator,    dt,    stepSize);    	non-compiled	[CE]  incompatible  types	73	None	replace
43	[BUG]  [BUGGY]  processStep(interpolator,  stepSize,  dt);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  processStep(interpolator,  stepSize,  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	processStep(interpolator,  stepSize,  dt);	  loop    =    true;    processStep(interpolator,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
44	[BUG]  [BUGGY]  LoopTraversal.traverse(manager,   "Step ",  dt);  [CE]  cannot  find  symbol  LoopTraversal  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(manager,   "Step ",  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(manager,   "Step ",  dt);	  LoopTraversal.traverse(interpolator,   "Step   ",    dt);    	non-compiled	[CE]  cannot  find  symbol  LoopTraversal	87	None	replace
45	[BUG]  [BUGGY]  LoopTraversal.traverse(interpolator,  dt, "Step ");  [CE]  cannot  find  symbol  LoopTraversal  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(interpolator,  dt, "Step ");  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(interpolator,  dt, "Step ");	  LoopTraversal.traverse(interpolator,   "Step   ",    dt);    	non-compiled	[CE]  cannot  find  symbol  LoopTraversal	87	None	replace
46	[BUG]  [BUGGY]  LoopTraversal.traverse(interpolator,   "Step: "  +  dt);  [CE]  cannot  find  symbol  LoopTraversal  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(interpolator,   "Step: "  +  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(interpolator,   "Step: "  +  dt);	  LoopTraversal.traverse(interpolator,   "Step   ",    dt);    	non-compiled	[CE]  cannot  find  symbol  LoopTraversal	87	None	replace
47	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(stepSize);  stepSize  =  Math.abs(stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.abs(stepSize);  stepSize  =  Math.abs(stepStart);	          stepSize    =    Math.abs(stepStart);    dt    =    Math.abs(stepStart);    	compilable	timeout	61	1	replace
48	[BUG]  [BUGGY]  stepSize  =  Math.abs(stepSize);  stepSize  =  Math.abs(stepStart);  timeout  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(stepSize);  stepSize  =  Math.abs(stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(stepSize);  stepSize  =  Math.abs(stepStart);	          stepSize    =    Math.abs(stepStart);    dt    =    Math.abs(stepStart);    	compilable	timeout	61	1	replace
49	[BUG]  [BUGGY]  stepSize  =  Math.abs(stepSize);  dt  =  Math.abs(stepStart);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(stepSize);  dt  =  Math.abs(stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(stepSize);  dt  =  Math.abs(stepStart);	          stepSize    =    Math.abs(stepStart);    dt    =    Math.abs(stepStart);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	61	None	replace
50	[BUG]  [BUGGY]  timeout  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(stepStart);	          stepSize    =    Math.abs(stepStart);    dt    =    Math.abs(stepStart);    	compilable	timeout	61	1	replace
51	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(stepStart);  timeout  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(stepStart);	          stepSize    =    Math.abs(stepStart);    dt    =    Math.abs(stepStart);    	compilable	timeout	61	1	replace
52	[BUG]  [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize,  y);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize,  y);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  processStep(t0,  dt,  stepSize,  y);	  loop    =    true;    processStep(t0,    dt,    stepSize,    rki);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
53	[BUG]  [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize,  k);  [CE]  cannot  find  symbol  k  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize,  k);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  processStep(t0,  dt,  stepSize,  k);	  loop    =    true;    processStep(t0,    dt,    stepSize,    rki);    	non-compiled	[CE]  cannot  find  symbol  k	75	None	replace
54	[BUG]  [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize,  a);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize,  a);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  processStep(t0,  dt,  stepSize,  a);	  loop    =    true;    processStep(t0,    dt,    stepSize,    rki);    	non-compiled	[CE]  cannot  find  symbol	75	None	replace
55	[BUG]  [BUGGY]  processStep(t0,  dt,  stepSize,  k);  [CE]  cannot  find  symbol  k  [FE]                      AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  processStep(t0,  dt,  stepSize,  k);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	processStep(t0,  dt,  stepSize,  k);	  loop    =    true;    processStep(t0,    dt,    stepSize,    rki);    	non-compiled	[CE]  cannot  find  symbol  k	75	None	replace
56	[BUG]  [BUGGY]  Looper  loop  =  new  Looper(dt);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  loop  =  new  Looper(dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  loop  =  new  Looper(dt);	  Looper    loop    =    null;    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
57	[BUG]  [BUGGY]  Looper  loop  =  new  Looper(dt,  1);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  loop  =  new  Looper(dt,  1);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  loop  =  new  Looper(dt,  1);	  Looper    loop    =    null;    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
58	[BUG]  [BUGGY]  dt  =  this.manager.getEventTime()  -  this.stepSize;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dt  =  this.manager.getEventTime()  -  this.stepSize;  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  this.manager.getEventTime()  -  this.stepSize;	  dt    =    manager.getEventTime()    -    this.stepSize;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	96	None	replace
59	[BUG]  [BUGGY]  dt  =  manager.getEventTime()  -  this.stepStart;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dt  =  manager.getEventTime()  -  this.stepStart;  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  manager.getEventTime()  -  this.stepStart;	  dt    =    manager.getEventTime()    -    this.stepSize;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	96	None	replace
60	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  -  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.abs(dt  -  dt);	  stepSize    =    Math.abs(dt    -    stepSize);    timeout    	compilable	timeout	53	1	replace
61	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  -  dt);  timeout  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  -  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt  -  dt);	  stepSize    =    Math.abs(dt    -    stepSize);    timeout    	compilable	timeout	53	1	replace
62	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  -  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.abs(dt  -  1);	  stepSize    =    Math.abs(dt    -    stepSize);    timeout    	compilable	timeout	53	1	replace
63	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  -  1);  timeout  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  -  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt  -  1);	  stepSize    =    Math.abs(dt    -    stepSize);    timeout    	compilable	timeout	53	1	replace
64	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  /  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.abs(dt  /  stepSize);	  stepSize    =    Math.abs(dt    -    stepSize);    timeout    	compilable	timeout	53	1	replace
65	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  /  stepSize);  timeout  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  /  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt  /  stepSize);	  stepSize    =    Math.abs(dt    -    stepSize);    timeout    	compilable	timeout	53	1	replace
66	[BUG]  [BUGGY]  timeout  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  -  2);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.abs(dt  -  2);	  stepSize    =    Math.abs(dt    -    stepSize);    timeout    	compilable	timeout	53	1	replace
67	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  -  2);  timeout  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  -  2);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt  -  2);	  stepSize    =    Math.abs(dt    -    stepSize);    timeout    	compilable	timeout	53	1	replace
68	[BUG]  [BUGGY]  Looper  l  =  false;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  l  =  false;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  l  =  false;	  Looper    l    =    true;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
69	[BUG]  [BUGGY]  Looper  l  =  null;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  l  =  null;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  l  =  null;	  Looper    l    =    true;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
70	[BUG]  [BUGGY]  Looper  l  =  new  Looper();  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  l  =  new  Looper();  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  l  =  new  Looper();	  Looper    l    =    true;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
71	[BUG]  [BUGGY]  Looper  l  =  new  Looper(dt,  1);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  l  =  new  Looper(dt,  1);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  l  =  new  Looper(dt,  1);	  Looper    l    =    true;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
72	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  double  stepSize  =  Math.abs(stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	double  stepSize  =  Math.abs(stepStart);	          stepSize    =    Math.abs(stepStart);    int    stepSize    =    Math.abs(stepStart);    	compilable	timeout	60	1	replace
73	[BUG]  [BUGGY]  double  stepSize  =  Math.abs(stepStart);  timeout  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  double  stepSize  =  Math.abs(stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	double  stepSize  =  Math.abs(stepStart);	          stepSize    =    Math.abs(stepStart);    int    stepSize    =    Math.abs(stepStart);    	compilable	timeout	60	1	replace
74	[BUG]  [BUGGY]  int  stepSize  =  Math.abs(stepStart);  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  int  stepSize  =  Math.abs(stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	int  stepSize  =  Math.abs(stepStart);	          stepSize    =    Math.abs(stepStart);    int    stepSize    =    Math.abs(stepStart);    	non-compiled	[CE]  possible  loss  of  precision	60	None	replace
75	[BUG]  [BUGGY]  int  stepSize  =  Math.abs(dt);  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  int  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	int  stepSize  =  Math.abs(dt);	          stepSize    =    Math.abs(stepStart);    int    stepSize    =    Math.abs(stepStart);    	non-compiled	[CE]  possible  loss  of  precision	60	None	replace
76	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  StepHandler  handler  =  prototype.getInstance();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  StepHandler  handler  =  prototype.getInstance();  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(dt,  stepSize);  StepHandler  handler  =  prototype.getInstance();	          stepSize    =    Math.min(stepSize,    dt);    StepHandler    handler    =    prototype.getInstance();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
77	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  StepHandler  handler  =  prototype.getInstance();  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  StepHandler  handler  =  prototype.getInstance();  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(stepStart,  dt);  StepHandler  handler  =  prototype.getInstance();	          stepSize    =    Math.min(stepSize,    dt);    StepHandler    handler    =    prototype.getInstance();    	non-compiled	[CE]  cannot  find  symbol	77	None	replace
78	[BUG]  [BUGGY]  stepSize  =  Math.max(stepSize,  dt,  k);  [CE]  cannot  find  symbol  k  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepSize,  dt,  k);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(stepSize,  dt,  k);	          stepSize    =    Math.max(stepSize,    dt);    StepHandler    stepSize    =    Math.max(stepSize,    dt);    	non-compiled	[CE]  cannot  find  symbol  k	15	None	replace
79	[BUG]  [BUGGY]  StepHandler  stepSize  =  Math.max(stepSize,  dt,  k);  [CE]  cannot  find  symbol  k  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  StepHandler  stepSize  =  Math.max(stepSize,  dt,  k);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	StepHandler  stepSize  =  Math.max(stepSize,  dt,  k);	          stepSize    =    Math.max(stepSize,    dt);    StepHandler    stepSize    =    Math.max(stepSize,    dt);    	non-compiled	[CE]  cannot  find  symbol  k	15	None	replace
80	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.max(dt,  dt);	  stepSize    =    Math.min(dt,    stepSize);    timeout    	compilable	timeout	22	1	replace
81	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  dt);  timeout  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(dt,  dt);	  stepSize    =    Math.min(dt,    stepSize);    timeout    	compilable	timeout	22	1	replace
82	[BUG]  [BUGGY]  loop  =   "Step: "  +  dt;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step: "  +  dt;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step: "  +  dt;	  loop    =       "Step:   ";    	non-compiled	[CE]  incompatible  types	38	None	replace
83	[BUG]  [BUGGY]  loop  =   "Step: "  +  dt.toString();  [CE]  double  cannot  be  dereferenced  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step: "  +  dt.toString();  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step: "  +  dt.toString();	  loop    =       "Step:   ";    	non-compiled	[CE]  double  cannot  be  dereferenced	38	None	replace
84	[BUG]  [BUGGY]  loop  =   "Step: "  +  stepSize;  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step: "  +  stepSize;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step: "  +  stepSize;	  loop    =       "Step:   ";    	non-compiled	[CE]  incompatible  types	38	None	replace
85	[BUG]  [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  StepHandler  handler  =  getStepInterpolator();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  StepHandler  handler  =  getStepInterpolator();  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(stepStart,  dt);  StepHandler  handler  =  getStepInterpolator();	          stepSize    =    Math.max(stepSize,    dt);    StepHandler    handler    =    getStepInterpolator();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
86	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  StepHandler  handler  =  getStepInterpolator();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  StepHandler  handler  =  getStepInterpolator();  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(dt,  stepSize);  StepHandler  handler  =  getStepInterpolator();	          stepSize    =    Math.max(stepSize,    dt);    StepHandler    handler    =    getStepInterpolator();    	non-compiled	[CE]  cannot  find  symbol	102	None	replace
87	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt));  StepHandler  handler  =  getStepInterpolator(interpolator);  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt));  StepHandler  handler  =  getStepInterpolator(interpolator);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt));  StepHandler  handler  =  getStepInterpolator(interpolator);	          stepSize    =    Math.abs(dt);    StepHandler    handler    =    getStepInterpolator(interpolator);    	non-compiled	[CE]  ';'  expected	109	None	replace
88	[BUG]  [BUGGY]  StepHandler  handler  =  getStepInterpolator(interpolator);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  StepHandler  handler  =  getStepInterpolator(interpolator);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	StepHandler  handler  =  getStepInterpolator(interpolator);	          stepSize    =    Math.abs(dt);    StepHandler    handler    =    getStepInterpolator(interpolator);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
89	[BUG]  [BUGGY]  if(dt  <  =  Math.abs(dt))  {  loop  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  if(dt  <  =  Math.abs(dt))  {  loop  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	if(dt  <  =  Math.abs(dt))  {  loop  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  loop    =    true;    loop    =    true;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
90	[BUG]  [BUGGY]  if(dt  <  =  Math.abs(dt))  {  loop  =  true;  }  else  {  throw  new  RungeKuttaStepInterpolatorException( " ");  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  if(dt  <  =  Math.abs(dt))  {  loop  =  true;  }  else  {  throw  new  RungeKuttaStepInterpolatorException( " ");  }  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	if(dt  <  =  Math.abs(dt))  {  loop  =  true;  }  else  {  throw  new  RungeKuttaStepInterpolatorException( " ");  }	  loop    =    true;    loop    =    true;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
91	[BUG]  [BUGGY]  if(dt  <  =  Math.abs(dt))  {  loop  =  true;  }  else  {  System.arraycopy(dt,  0,  dt,  dt,  dt);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  if(dt  <  =  Math.abs(dt))  {  loop  =  true;  }  else  {  System.arraycopy(dt,  0,  dt,  dt,  dt);  }  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	if(dt  <  =  Math.abs(dt))  {  loop  =  true;  }  else  {  System.arraycopy(dt,  0,  dt,  dt,  dt);  }	  loop    =    true;    loop    =    true;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
92	[BUG]  [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  StepSize  =  Math.max(stepSize,  dt);  [CE]  cannot  find  symbol  StepSize  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  StepSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(stepStart,  dt);  StepSize  =  Math.max(stepSize,  dt);	          stepSize    =    Math.max(stepSize,    dt);    StepSize    =    Math.max(stepSize,    dt);    	non-compiled	[CE]  cannot  find  symbol  StepSize	68	None	replace
93	[BUG]  [BUGGY]  StepSize  =  Math.max(stepStart,  dt);  [CE]  cannot  find  symbol  StepSize  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  StepSize  =  Math.max(stepStart,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	StepSize  =  Math.max(stepStart,  dt);	          stepSize    =    Math.max(stepSize,    dt);    StepSize    =    Math.max(stepSize,    dt);    	non-compiled	[CE]  cannot  find  symbol  StepSize	68	None	replace
94	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  StepSize  =  Math.max(stepSize,  dt);  [CE]  cannot  find  symbol  StepSize  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  StepSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(dt,  stepStart);  StepSize  =  Math.max(stepSize,  dt);	          stepSize    =    Math.max(stepSize,    dt);    StepSize    =    Math.max(stepSize,    dt);    	non-compiled	[CE]  cannot  find  symbol  StepSize	68	None	replace
95	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(dt,  t0,  stepSize);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(dt,  t0,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(dt,  t0,  stepSize);	  loop    =    new    BasicStepInterpolator(t0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
96	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  y);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  y);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  dt,  y);	  loop    =    new    BasicStepInterpolator(t0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
97	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  stepSize,  y);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  stepSize,  y);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  dt,  stepSize,  y);	  loop    =    new    BasicStepInterpolator(t0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
98	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  stepSize,  rki);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  stepSize,  rki);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  dt,  stepSize,  rki);	  loop    =    new    BasicStepInterpolator(t0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
99	[BUG]  [BUGGY]  Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize= "  +  stepSize  + ") ";  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize= "  +  stepSize  + ") ";  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize= "  +  stepSize  + ") ";	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ",    stepSize=   "    +    stepSize    +   ")   ";    	non-compiled	[CE]  cannot  find  symbol	34	None	replace
100	[BUG]  [BUGGY]  Loop  loop  =  interpolator.evaluateStep( "  +  dt  + ",  stepSize= "  +  stepSize  + ") ";  [CE]  unclosed  string  literal  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Loop  loop  =  interpolator.evaluateStep( "  +  dt  + ",  stepSize= "  +  stepSize  + ") ";  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Loop  loop  =  interpolator.evaluateStep( "  +  dt  + ",  stepSize= "  +  stepSize  + ") ";	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ",    stepSize=   "    +    stepSize    +   ")   ";    	non-compiled	[CE]  unclosed  string  literal	34	None	replace
101	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  -  stepStart);  stepSize  =  Math.abs(dt  -  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.abs(dt    -    stepStart);    stepSize  =  Math.abs(dt  -  stepStart);	  timeout    	compilable	  [FE]  AssertionFailedError  	105	2	add
102	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  -  stepStart);  stepSize  =  Math.abs(dt  -  stepStart);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  -  stepStart);  stepSize  =  Math.abs(dt  -  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(dt    -    stepStart);    stepSize  =  Math.abs(dt  -  stepStart);	  timeout    	compilable	  [FE]  AssertionFailedError  	105	2	add
103	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  -  stepStart);  StepHandler  stepSize  =  Math.abs(dt  -  stepStart);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  -  stepStart);  StepHandler  stepSize  =  Math.abs(dt  -  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(dt    -    stepStart);    StepHandler  stepSize  =  Math.abs(dt  -  stepStart);	  timeout    	non-compiled	[CE]  incompatible  types	105	None	add
104	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  -  stepStart);  stepSize  =  Math.abs(dt  -  stepStart));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  -  stepStart);  stepSize  =  Math.abs(dt  -  stepStart));  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(dt    -    stepStart);    stepSize  =  Math.abs(dt  -  stepStart));	  timeout    	non-compiled	[CE]  ';'  expected	105	None	add
105	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  -  stepStart);  phaseSize  =  Math.abs(dt  -  stepStart);  [CE]  cannot  find  symbol  phaseSize  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  -  stepStart);  phaseSize  =  Math.abs(dt  -  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(dt    -    stepStart);    phaseSize  =  Math.abs(dt  -  stepStart);	  timeout    	non-compiled	[CE]  cannot  find  symbol  phaseSize	105	None	add
106	[BUG]  [BUGGY]  dt  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dt  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  Math.abs(dt);  stepSize  =  Math.abs(dt);	          stepSize    =    Math.abs(dt);    dt    =    Math.abs(dt);    stepSize    =    Math.abs(dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	88	None	replace
107	[BUG]  [BUGGY]  stepSize  =  Math.abs(stepStart);  dt  =  Math.abs(dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(stepStart);  dt  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(stepStart);  dt  =  Math.abs(dt);	          stepSize    =    Math.abs(dt);    dt    =    Math.abs(dt);    stepSize    =    Math.abs(dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	88	None	replace
108	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  StepSize  =  Math.min(stepSize,  dt);  [CE]  cannot  find  symbol  StepSize  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  StepSize  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(stepStart,  dt);  StepSize  =  Math.min(stepSize,  dt);	          stepSize    =    Math.min(stepSize,    dt);    StepSize    =    Math.min(stepSize,    dt);    	non-compiled	[CE]  cannot  find  symbol  StepSize	76	None	replace
109	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  StepSize  =  Math.min(stepSize,  dt);  [CE]  cannot  find  symbol  StepSize  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  StepSize  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(dt,  stepStart);  StepSize  =  Math.min(stepSize,  dt);	          stepSize    =    Math.min(stepSize,    dt);    StepSize    =    Math.min(stepSize,    dt);    	non-compiled	[CE]  cannot  find  symbol  StepSize	76	None	replace
110	[BUG]  [BUGGY]  StepSize  =  Math.min(stepStart,  dt);  [CE]  cannot  find  symbol  StepSize  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  StepSize  =  Math.min(stepStart,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	StepSize  =  Math.min(stepStart,  dt);	          stepSize    =    Math.min(stepSize,    dt);    StepSize    =    Math.min(stepSize,    dt);    	non-compiled	[CE]  cannot  find  symbol  StepSize	76	None	replace
111	[BUG]  [BUGGY]  stepSize  =  Math.max(stepSize,  dt);  StepSize  =  Math.min(stepSize,  dt);  [CE]  cannot  find  symbol  StepSize  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepSize,  dt);  StepSize  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(stepSize,  dt);  StepSize  =  Math.min(stepSize,  dt);	          stepSize    =    Math.min(stepSize,    dt);    StepSize    =    Math.min(stepSize,    dt);    	non-compiled	[CE]  cannot  find  symbol  StepSize	76	None	replace
112	[BUG]  [BUGGY]  loop  =  false;  processStep(manager,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  processStep(manager,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  processStep(manager,  dt,  stepSize);	  loop    =    true;    processStep(manager,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
113	[BUG]  [BUGGY]  processStep(manager,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  processStep(manager,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	processStep(manager,  dt,  stepSize);	  loop    =    true;    processStep(manager,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
114	[BUG]  [BUGGY]  loop  =  false;  processStep(dt,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  processStep(dt,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  processStep(dt,  dt,  stepSize);	  loop    =    true;    processStep(manager,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	74	None	replace
115	[BUG]  [BUGGY]  loop  =  false;  dt  =  Math.max(dt,  stepSize);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  dt  =  Math.max(dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  dt  =  Math.max(dt,  stepSize);	  loop    =    false;    dt    =    Math.max(dt,    dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	104	None	replace
116	[BUG]  [BUGGY]  dt  =  Math.max(dt,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dt  =  Math.max(dt,  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  Math.max(dt,  dt);	  loop    =    false;    dt    =    Math.max(dt,    dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	104	None	replace
117	[BUG]  [BUGGY]  loop  =  true;  dt  =  Math.max(dt,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  dt  =  Math.max(dt,  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  dt  =  Math.max(dt,  dt);	  loop    =    false;    dt    =    Math.max(dt,    dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	104	None	replace
118	[BUG]  [BUGGY]  StepHandler  handler  =  getStepInterpolator();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  StepHandler  handler  =  getStepInterpolator();  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	StepHandler  handler  =  getStepInterpolator();	          stepSize    =    Math.abs(dt);    StepHandler    handler    =    getStepInterpolator();    	non-compiled	[CE]  cannot  find  symbol	108	None	replace
119	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt));  StepHandler  handler  =  getStepInterpolator();  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt));  StepHandler  handler  =  getStepInterpolator();  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt));  StepHandler  handler  =  getStepInterpolator();	          stepSize    =    Math.abs(dt);    StepHandler    handler    =    getStepInterpolator();    	non-compiled	[CE]  ';'  expected	108	None	replace
120	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ",  b,  a);  [CE]  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ",  b,  a);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ",  b,  a);	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ")   ",    a);    	non-compiled	[CE]  	111	None	replace
121	[BUG]  [BUGGY]  dt  =  Math.min(stepSize,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dt  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  Math.min(stepSize,  dt);	          stepSize    =    Math.min(stepSize,    dt);    dt    =    Math.min(stepSize,    dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	49	None	replace
122	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  dt  =  Math.min(stepSize,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  dt  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(stepStart,  dt);  dt  =  Math.min(stepSize,  dt);	          stepSize    =    Math.min(stepSize,    dt);    dt    =    Math.min(stepSize,    dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	49	None	replace
123	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  dt  =  Math.min(stepSize,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  dt  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(dt,  stepSize);  dt  =  Math.min(stepSize,  dt);	          stepSize    =    Math.min(stepSize,    dt);    dt    =    Math.min(stepSize,    dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	49	None	replace
124	[BUG]  [BUGGY]  dt  =  manager.getEventTime()  -  stepEnd;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dt  =  manager.getEventTime()  -  stepEnd;  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  manager.getEventTime()  -  stepEnd;	  dt    =    manager.getEventTime()    +    stepEnd;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	6	None	replace
125	[BUG]  [BUGGY]  dt  =  manager.getEventTime()  *  stepEnd;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dt  =  manager.getEventTime()  *  stepEnd;  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  manager.getEventTime()  *  stepEnd;	  dt    =    manager.getEventTime()    +    stepEnd;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	6	None	replace
126	[BUG]  [BUGGY]  StepHandler  stepSize  =  Math.min(stepSize,  dt);  [CE]  no  suitable  method  found  for  min(StepHandler,double)  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  StepHandler  stepSize  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	StepHandler  stepSize  =  Math.min(stepSize,  dt);	          stepSize    =    Math.min(stepSize,    dt);    StepHandler    stepSize    =    Math.min(stepSize,    dt);    	non-compiled	[CE]  no  suitable  method  found  for  min(StepHandler,double)	47	None	replace
127	[BUG]  [BUGGY]  StepHandler  stepSize  =  Math.min(dt,  stepSize);  [CE]  no  suitable  method  found  for  min(double,StepHandler)  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  StepHandler  stepSize  =  Math.min(dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	StepHandler  stepSize  =  Math.min(dt,  stepSize);	          stepSize    =    Math.min(stepSize,    dt);    StepHandler    stepSize    =    Math.min(stepSize,    dt);    	non-compiled	[CE]  no  suitable  method  found  for  min(double,StepHandler)	47	None	replace
128	[BUG]  [BUGGY]  stepSize  =  Math.min(math.abs(dt),  stepStart);  [CE]  cannot  find  symbol  math  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(math.abs(dt),  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(math.abs(dt),  stepStart);	  stepSize    =    Math.max(dt,    stepStart);    timeout    	non-compiled	[CE]  cannot  find  symbol  math	32	None	replace
129	[BUG]  [BUGGY]  dt  =  manager.getEventTime()  /  stepSize;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dt  =  manager.getEventTime()  /  stepSize;  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  manager.getEventTime()  /  stepSize;	  dt    =    manager.getEventTime()    *    stepSize;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	5	None	replace
130	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  yTmp);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  yTmp);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  yTmp);	  loop    =    new    BasicStepInterpolator(t0,    dt,    a,    yTmp);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
131	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  yTmp,  a,  dt);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  yTmp,  a,  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  yTmp,  a,  dt);	  loop    =    new    BasicStepInterpolator(t0,    dt,    a,    yTmp);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
132	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  y,  a);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  y,  a);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  dt,  y,  a);	  loop    =    new    BasicStepInterpolator(t0,    dt,    a,    yTmp);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
133	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  a,  yDotK);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  a,  yDotK);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  dt,  a,  yDotK);	  loop    =    new    BasicStepInterpolator(t0,    dt,    a,    yTmp);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
134	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize: "  +  stepStart);  [CE]  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize: "  +  stepStart);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize: "  +  stepStart);	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ",    stepSize:   "    +    stepSize);    	non-compiled	[CE]  	18	None	replace
135	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  +  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.abs(dt  +  stepStart);	  stepSize    =    Math.abs(dt    +    stepSize);    timeout    	compilable	timeout	51	1	replace
136	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  +  stepStart);  timeout  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  +  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt  +  stepStart);	  stepSize    =    Math.abs(dt    +    stepSize);    timeout    	compilable	timeout	51	1	replace
137	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.abs(dt  +  1);	  stepSize    =    Math.abs(dt    +    stepSize);    timeout    	compilable	timeout	51	1	replace
138	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  +  1);  timeout  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt  +  1);	  stepSize    =    Math.abs(dt    +    stepSize);    timeout    	compilable	timeout	51	1	replace
139	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  +  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.abs(dt  +  dt);	  stepSize    =    Math.abs(dt    +    stepSize);    timeout    	compilable	timeout	51	1	replace
140	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  +  dt);  timeout  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  +  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt  +  dt);	  stepSize    =    Math.abs(dt    +    stepSize);    timeout    	compilable	timeout	51	1	replace
141	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  dt  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.max(dt,  dt  +  1);	  stepSize    =    Math.max(stepSize,    dt    +    1);    timeout    	compilable	timeout	93	1	replace
142	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  dt  +  1);  timeout  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  dt  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(dt,  dt  +  1);	  stepSize    =    Math.max(stepSize,    dt    +    1);    timeout    	compilable	timeout	93	1	replace
143	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepSize  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.max(dt,  stepSize  +  1);	  stepSize    =    Math.max(stepSize,    dt    +    1);    timeout    	compilable	timeout	93	1	replace
144	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepSize  +  1);  timeout  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepSize  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(dt,  stepSize  +  1);	  stepSize    =    Math.max(stepSize,    dt    +    1);    timeout    	compilable	timeout	93	1	replace
145	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepSize,  dt  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.min(stepSize,  dt  +  1);	  stepSize    =    Math.max(stepSize,    dt    +    1);    timeout    	compilable	timeout	93	1	replace
146	[BUG]  [BUGGY]  stepSize  =  Math.min(stepSize,  dt  +  1);  timeout  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepSize,  dt  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(stepSize,  dt  +  1);	  stepSize    =    Math.max(stepSize,    dt    +    1);    timeout    	compilable	timeout	93	1	replace
147	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  stepSize  =  Math.max(dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.max(dt,    stepSize);    stepSize  =  Math.max(dt,  stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	25	2	add
148	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  stepSize  =  Math.max(dt,  stepSize);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  stepSize  =  Math.max(dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(dt,    stepSize);    stepSize  =  Math.max(dt,  stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	25	2	add
149	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  StepHandler  stepSize  =  Math.max(dt,  stepSize);  [CE]  no  suitable  method  found  for  max(double,StepHandler)  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  StepHandler  stepSize  =  Math.max(dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(dt,    stepSize);    StepHandler  stepSize  =  Math.max(dt,  stepSize);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  max(double,StepHandler)	25	None	add
150	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  stepSize  =  Math.min(dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.max(dt,    stepSize);    stepSize  =  Math.min(dt,  stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	25	2	add
151	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  stepSize  =  Math.min(dt,  stepSize);  [FE]  AssertionFailedError  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  stepSize  =  Math.min(dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(dt,    stepSize);    stepSize  =  Math.min(dt,  stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	25	2	add
152	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt);  StepHandler  handler  =  prototype.getInstance();  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt);  StepHandler  handler  =  prototype.getInstance();  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt);  StepHandler  handler  =  prototype.getInstance();	          stepSize    =    Math.abs(stepStart);    StepHandler    handler    =    prototype.getInstance();    	non-compiled	[CE]  cannot  find  symbol	84	None	replace
153	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	                stepSize        =        Math.abs(stepStart);        stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);	  	compilable	  [FE]  AssertionFailedError  	82	2	add
154	[BUG]  [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(stepStart);        stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);	  	compilable	  [FE]  AssertionFailedError  	82	2	add
155	[BUG]  [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  StepHandler  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  StepHandler  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(stepStart);        stepSize    =    Math.abs(dt);    StepHandler  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);	  	non-compiled	[CE]  incompatible  types	82	None	add
156	[BUG]  [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  int  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  int  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(stepStart);        stepSize    =    Math.abs(dt);    int  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);	  	non-compiled	[CE]  possible  loss  of  precision	82	None	add
157	[BUG]  [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  dt  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]          AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  dt  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(stepStart);        stepSize    =    Math.abs(dt);    dt  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	82	None	add
158	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	                stepSize        =        Math.min(stepSize,        dt);        stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	45	2	add
159	[BUG]  [BUGGY]          stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.min(stepSize,        dt);        stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	45	2	add
160	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	                stepSize        =        Math.min(stepSize,        dt);        stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	45	2	add
161	[BUG]  [BUGGY]          stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.min(stepSize,        dt);        stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	45	2	add
162	[BUG]  [BUGGY]          stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  StepHandler  stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  [CE]  no  suitable  method  found  for  min(StepHandler,double)  [FE]        AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  StepHandler  stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.min(stepSize,        dt);        stepSize    =    Math.min(stepSize,    dt);    StepHandler  stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);	  	non-compiled	[CE]  no  suitable  method  found  for  min(StepHandler,double)	45	None	add
163	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	                stepSize        =        Math.min(stepSize,        dt);        stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	45	2	add
164	[BUG]  [BUGGY]          stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.min(stepSize,        dt);        stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	45	2	add
165	[BUG]  [BUGGY]  loop  =  false;  dt  =  System.currentTimeMillis()  +  stepSize;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  dt  =  System.currentTimeMillis()  +  stepSize;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  dt  =  System.currentTimeMillis()  +  stepSize;	  loop    =    false;    timeout    =    System.currentTimeMillis()    +    stepSize;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	56	None	replace
166	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  stepSize  =  System.currentTimeMillis()  +  stepSize;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	loop  =  false;  stepSize  =  System.currentTimeMillis()  +  stepSize;	  loop    =    false;    timeout    =    System.currentTimeMillis()    +    stepSize;    	compilable	  [FE]  AssertionFailedError  	56	2	replace
167	[BUG]  [BUGGY]  loop  =  false;  stepSize  =  System.currentTimeMillis()  +  stepSize;  [FE]  AssertionFailedError  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  stepSize  =  System.currentTimeMillis()  +  stepSize;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  stepSize  =  System.currentTimeMillis()  +  stepSize;	  loop    =    false;    timeout    =    System.currentTimeMillis()    +    stepSize;    	compilable	  [FE]  AssertionFailedError  	56	2	replace
168	[BUG]  [BUGGY]  loop  =  false;  timeout  =  System.currentTimeMillis()  +  dt;  [CE]  cannot  find  symbol  timeout  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  timeout  =  System.currentTimeMillis()  +  dt;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  timeout  =  System.currentTimeMillis()  +  dt;	  loop    =    false;    timeout    =    System.currentTimeMillis()    +    stepSize;    	non-compiled	[CE]  cannot  find  symbol  timeout	56	None	replace
169	[BUG]  [BUGGY]  loop  =   "Step "  +  dt);  [CE]  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step "  +  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step "  +  dt);	  loop    =       "Step   ",    dt);    	non-compiled	[CE]  	112	None	replace
170	[BUG]  [BUGGY]  loop  =   "Step: "  +  dt);  [CE]  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step: "  +  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step: "  +  dt);	  loop    =       "Step   ",    dt);    	non-compiled	[CE]  	112	None	replace
171	[BUG]  [BUGGY]  Looper  loop  =  new  Looper(dt,  false);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  loop  =  new  Looper(dt,  false);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  loop  =  new  Looper(dt,  false);	  Looper    loop    =    new    Looper(dt,    true);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
172	[BUG]  [BUGGY]  Looper  loop  =  new  Looper(dt,  true,  stepSize);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  loop  =  new  Looper(dt,  true,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  loop  =  new  Looper(dt,  true,  stepSize);	  Looper    loop    =    new    Looper(dt,    true);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
173	[BUG]  [BUGGY]  Looper  loop  =  new  Looper(dt,  null);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  loop  =  new  Looper(dt,  null);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  loop  =  new  Looper(dt,  null);	  Looper    loop    =    new    Looper(dt,    true);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
174	[BUG]  [BUGGY]  Looper  loop  =  new  Looper(dt,  true,  rki);  [CE]  cannot  find  symbol  [FE]                            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  loop  =  new  Looper(dt,  true,  rki);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  loop  =  new  Looper(dt,  true,  rki);	  Looper    loop    =    new    Looper(dt,    true);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
175	[BUG]  [BUGGY]  dt  =  Math.max(stepSize,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dt  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  Math.max(stepSize,  dt);	          stepSize    =    Math.max(stepSize,    dt);    dt    =    Math.max(stepSize,    dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	16	None	replace
176	[BUG]  [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  dt  =  Math.max(stepSize,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  dt  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(stepStart,  dt);  dt  =  Math.max(stepSize,  dt);	          stepSize    =    Math.max(stepSize,    dt);    dt    =    Math.max(stepSize,    dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	16	None	replace
177	[BUG]  [BUGGY]  stepSize  =  Math.max(stepSize,  t);  dt  =  Math.max(stepSize,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepSize,  t);  dt  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(stepSize,  t);  dt  =  Math.max(stepSize,  dt);	          stepSize    =    Math.max(stepSize,    dt);    dt    =    Math.max(stepSize,    dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	16	None	replace
178	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  stepSize  =  Math.abs(dt  +  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.abs(dt    +    stepSize);    stepSize  =  Math.abs(dt  +  stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	50	2	add
179	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  stepSize  =  Math.abs(dt  +  stepSize);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  stepSize  =  Math.abs(dt  +  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(dt    +    stepSize);    stepSize  =  Math.abs(dt  +  stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	50	2	add
180	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  StepHandler  stepSize  =  Math.abs(dt  +  stepSize);  [CE]  bad  operand  types  for  binary  operator  '+'  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  StepHandler  stepSize  =  Math.abs(dt  +  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(dt    +    stepSize);    StepHandler  stepSize  =  Math.abs(dt  +  stepSize);	  timeout    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '+'	50	None	add
181	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  phaseSize  =  Math.abs(dt  +  stepSize);  [CE]  cannot  find  symbol  phaseSize  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  phaseSize  =  Math.abs(dt  +  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(dt    +    stepSize);    phaseSize  =  Math.abs(dt  +  stepSize);	  timeout    	non-compiled	[CE]  cannot  find  symbol  phaseSize	50	None	add
182	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  dt  =  Math.abs(dt  +  stepSize);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  dt  =  Math.abs(dt  +  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(dt    +    stepSize);    dt  =  Math.abs(dt  +  stepSize);	  timeout    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	50	None	add
183	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  stepSize  =  Math.max(dt,  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.max(dt,    stepStart);    stepSize  =  Math.max(dt,  stepStart);	  timeout    	compilable	  [FE]  AssertionFailedError  	31	2	add
184	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  stepSize  =  Math.max(dt,  stepStart);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  stepSize  =  Math.max(dt,  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(dt,    stepStart);    stepSize  =  Math.max(dt,  stepStart);	  timeout    	compilable	  [FE]  AssertionFailedError  	31	2	add
185	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  StepHandler  stepSize  =  Math.max(dt,  stepStart);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  StepHandler  stepSize  =  Math.max(dt,  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(dt,    stepStart);    StepHandler  stepSize  =  Math.max(dt,  stepStart);	  timeout    	non-compiled	[CE]  incompatible  types	31	None	add
186	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  stepSize  =  Math.min(dt,  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.max(dt,    stepStart);    stepSize  =  Math.min(dt,  stepStart);	  timeout    	compilable	  [FE]  AssertionFailedError  	31	2	add
187	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  stepSize  =  Math.min(dt,  stepStart);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  stepSize  =  Math.min(dt,  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(dt,    stepStart);    stepSize  =  Math.min(dt,  stepStart);	  timeout    	compilable	  [FE]  AssertionFailedError  	31	2	add
188	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  stepSize  =  Math.min(dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.min(dt,    stepSize);    stepSize  =  Math.min(dt,  stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	21	2	add
189	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  stepSize  =  Math.min(dt,  stepSize);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  stepSize  =  Math.min(dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(dt,    stepSize);    stepSize  =  Math.min(dt,  stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	21	2	add
190	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  StepHandler  stepSize  =  Math.min(dt,  stepSize);  [CE]  no  suitable  method  found  for  min(double,StepHandler)  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  StepHandler  stepSize  =  Math.min(dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(dt,    stepSize);    StepHandler  stepSize  =  Math.min(dt,  stepSize);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  min(double,StepHandler)	21	None	add
191	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  stepSize  =  Math.max(dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.min(dt,    stepSize);    stepSize  =  Math.max(dt,  stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	21	2	add
192	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  stepSize  =  Math.max(dt,  stepSize);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  stepSize  =  Math.max(dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(dt,    stepSize);    stepSize  =  Math.max(dt,  stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	21	2	add
193	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  phaseSize  =  Math.min(dt,  stepSize);  [CE]  cannot  find  symbol  phaseSize  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  phaseSize  =  Math.min(dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(dt,    stepSize);    phaseSize  =  Math.min(dt,  stepSize);	  timeout    	non-compiled	[CE]  cannot  find  symbol  phaseSize	21	None	add
194	[BUG]  [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(dt,  t0,  stepSize);  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(dt,  t0,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  RungeKuttaStepInterpolator(dt,  t0,  stepSize);	  loop    =    new    RungeKuttaStepInterpolator(t0,    dt,    stepSize);    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	3	None	replace
195	[BUG]  [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  dt,  stepSize);  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  dt,  stepSize);	  loop    =    new    RungeKuttaStepInterpolator(t0,    dt,    stepSize);    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	3	None	replace
196	[BUG]  [BUGGY]  Looper  loop  =  new  RungeKuttaStepInterpolator(dt,  t0,  stepSize);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  loop  =  new  RungeKuttaStepInterpolator(dt,  t0,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  loop  =  new  RungeKuttaStepInterpolator(dt,  t0,  stepSize);	  loop    =    new    RungeKuttaStepInterpolator(t0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	3	None	replace
197	[BUG]  [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  y);  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]                        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  y);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  y);	  loop    =    new    RungeKuttaStepInterpolator(t0,    dt,    stepSize);    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	3	None	replace
198	[BUG]  [BUGGY]  dt  =  Math.abs(dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dt  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  Math.abs(dt);	          stepSize    =    Math.abs(dt);    dt    =    Math.abs(dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	11	None	replace
199	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt);  dt  =  Math.abs(stepSize);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt);  dt  =  Math.abs(stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt);  dt  =  Math.abs(stepSize);	          stepSize    =    Math.abs(dt);    dt    =    Math.abs(dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	11	None	replace
200	[BUG]  [BUGGY]  dt  =  Math.abs(dt)-  stepSize;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dt  =  Math.abs(dt)-  stepSize;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  Math.abs(dt)-  stepSize;	  loop    =    false;    dt    =    Math.abs(dt)-    stepSize;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	81	None	replace
201	[BUG]  [BUGGY]  loop  =  true;  dt  =  Math.abs(dt)-  stepSize;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  dt  =  Math.abs(dt)-  stepSize;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  dt  =  Math.abs(dt)-  stepSize;	  loop    =    false;    dt    =    Math.abs(dt)-    stepSize;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	81	None	replace
202	[BUG]  [BUGGY]  loop  =  false;  dt  =  Math.abs(dt)/  stepSize;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  dt  =  Math.abs(dt)/  stepSize;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  dt  =  Math.abs(dt)/  stepSize;	  loop    =    false;    dt    =    Math.abs(dt)-    stepSize;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	81	None	replace
203	[BUG]  [BUGGY]  Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  +  stepSize  +   ") ";  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  +  stepSize  +   ") ";  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  +  stepSize  +   ") ";	  Loop    loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ")   ";    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
204	[BUG]  [BUGGY]  Loop  loop  =   "Step  Interpolator.evaluateStep( "  +  dt  + ") ";  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Loop  loop  =   "Step  Interpolator.evaluateStep( "  +  dt  + ") ";  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Loop  loop  =   "Step  Interpolator.evaluateStep( "  +  dt  + ") ";	  Loop    loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ")   ";    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
205	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  y,  stepSize);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  y,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  dt,  y,  stepSize);	  loop    =    new    BasicStepInterpolator(t0,    y0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
206	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(dt,  y0,  t0,  stepSize);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(dt,  y0,  t0,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(dt,  y0,  t0,  stepSize);	  loop    =    new    BasicStepInterpolator(t0,    y0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
207	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  stepSize,  rki);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  stepSize,  rki);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  stepSize,  rki);	  loop    =    new    BasicStepInterpolator(t0,    y0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
208	[BUG]  [BUGGY]  Looper  lt  =  false;  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  lt  =  false;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  lt  =  false;	  Looper    loop    =    false;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
209	[BUG]  [BUGGY]  Looper  li  =  false;  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  li  =  false;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  li  =  false;	  Looper    loop    =    false;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
210	[BUG]  [BUGGY]  Looper  lb  =  false;  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  lb  =  false;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  lb  =  false;	  Looper    loop    =    false;    	non-compiled	[CE]  cannot  find  symbol	64	None	replace
211	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.min(dt,  dt);	  stepSize    =    Math.max(dt,    stepSize);    timeout    	compilable	timeout	26	1	replace
212	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  dt);  timeout  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(dt,  dt);	  stepSize    =    Math.max(dt,    stepSize);    timeout    	compilable	timeout	26	1	replace
213	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  double  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	double  stepSize  =  Math.abs(dt);	          stepSize    =    Math.abs(dt);    int    stepSize    =    Math.abs(dt);    	compilable	timeout	10	1	replace
214	[BUG]  [BUGGY]  double  stepSize  =  Math.abs(dt);  timeout  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  double  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	double  stepSize  =  Math.abs(dt);	          stepSize    =    Math.abs(dt);    int    stepSize    =    Math.abs(dt);    	compilable	timeout	10	1	replace
215	[BUG]  [BUGGY]  dtSize  =  Math.abs(dt);  [CE]  cannot  find  symbol  dtSize  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dtSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dtSize  =  Math.abs(dt);	          stepSize    =    Math.abs(dt);    int    stepSize    =    Math.abs(dt);    	non-compiled	[CE]  cannot  find  symbol  dtSize	10	None	replace
216	[BUG]  [BUGGY]  stepSize  =  Math.min(stepSize,  dt));  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepSize,  dt));  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(stepSize,  dt));	          stepSize    =    Math.max(stepSize,    dt);    stepSize    =    Math.max(stepSize,    dt));    	non-compiled	[CE]  ';'  expected	69	None	replace
217	[BUG]  [BUGGY]  stepSize  =  Math.max(stepStart,  dt));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepStart,  dt));  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(stepStart,  dt));	          stepSize    =    Math.max(stepSize,    dt);    stepSize    =    Math.max(stepSize,    dt));    	non-compiled	[CE]  ';'  expected	69	None	replace
218	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt));  [CE]  ';'  expected  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt));  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(stepStart,  dt));	          stepSize    =    Math.max(stepSize,    dt);    stepSize    =    Math.max(stepSize,    dt));    	non-compiled	[CE]  ';'  expected	69	None	replace
219	[BUG]  [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(dt);  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  RungeKuttaStepInterpolator(dt);	  loop    =    new    RungeKuttaStepInterpolator();    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	1	None	replace
220	[BUG]  [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(dt,  stepSize);  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  RungeKuttaStepInterpolator(dt,  stepSize);	  loop    =    new    RungeKuttaStepInterpolator();    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	1	None	replace
221	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.max(stepSize,    dt);    stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	                stepSize        =        Math.max(stepSize,        dt);        stepSize    =    Math.max(stepSize,    dt);    stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	13	2	add
222	[BUG]  [BUGGY]          stepSize    =    Math.max(stepSize,    dt);    stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.max(stepSize,    dt);    stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.max(stepSize,        dt);        stepSize    =    Math.max(stepSize,    dt);    stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	13	2	add
223	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.max(stepSize,    dt);    stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	                stepSize        =        Math.max(stepSize,        dt);        stepSize    =    Math.max(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	13	2	add
224	[BUG]  [BUGGY]          stepSize    =    Math.max(stepSize,    dt);    stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.max(stepSize,    dt);    stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.max(stepSize,        dt);        stepSize    =    Math.max(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	13	2	add
225	[BUG]  [BUGGY]          stepSize    =    Math.max(stepSize,    dt);    stepSize  =  Math.max(stepSize,  dt);  StepHandler  stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  [CE]  no  suitable  method  found  for  max(StepHandler,double)  [FE]        AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.max(stepSize,    dt);    stepSize  =  Math.max(stepSize,  dt);  StepHandler  stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.max(stepSize,        dt);        stepSize    =    Math.max(stepSize,    dt);    StepHandler  stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);	  	non-compiled	[CE]  no  suitable  method  found  for  max(StepHandler,double)	13	None	add
226	[BUG]  [BUGGY]          stepSize    =    Math.max(stepSize,    dt);    stepSize  =  Math.max(stepSize,  dt);  dt  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]          AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.max(stepSize,    dt);    stepSize  =  Math.max(stepSize,  dt);  dt  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.max(stepSize,        dt);        stepSize    =    Math.max(stepSize,    dt);    dt  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	13	None	add
227	[BUG]  [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize,  stepSize);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  processStep(t0,  dt,  stepSize,  stepSize);	  loop    =    true;    processStep(t0,    dt,    rki,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
228	[BUG]  [BUGGY]  loop  =  true;  processStep(t0,  dt,  y,  stepSize);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  processStep(t0,  dt,  y,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  processStep(t0,  dt,  y,  stepSize);	  loop    =    true;    processStep(t0,    dt,    rki,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
229	[BUG]  [BUGGY]  processStep(t0,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]                        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  processStep(t0,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	processStep(t0,  dt,  stepSize);	  loop    =    true;    processStep(t0,    dt,    rki,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
230	[BUG]  [BUGGY]  processStep(t0,  dt,  y,  stepSize);  [CE]  cannot  find  symbol  [FE]                          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  processStep(t0,  dt,  y,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	processStep(t0,  dt,  y,  stepSize);	  loop    =    true;    processStep(t0,    dt,    rki,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
231	[BUG]  [BUGGY]  StepHandler  stepSize  =  Math.abs(dt);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  StepHandler  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	StepHandler  stepSize  =  Math.abs(dt);	          stepSize    =    Math.abs(dt);    StepHandler    stepSize    =    Math.abs(dt);    	non-compiled	[CE]  incompatible  types	9	None	replace
232	[BUG]  [BUGGY]  StepHandler  stepSize  =  Math.abs(dt,  dt);  [CE]  no  suitable  method  found  for  abs(double,double)  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  StepHandler  stepSize  =  Math.abs(dt,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	StepHandler  stepSize  =  Math.abs(dt,  dt);	          stepSize    =    Math.abs(dt);    StepHandler    stepSize    =    Math.abs(dt);    	non-compiled	[CE]  no  suitable  method  found  for  abs(double,double)	9	None	replace
233	[BUG]  [BUGGY]  loop  =  Math.min(dt,  stepSize);  [CE]  incompatible  types  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  Math.min(dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  Math.min(dt,  stepSize);	  loop    =    dt;    	non-compiled	[CE]  incompatible  types	4	None	replace
234	[BUG]  [BUGGY]  loop  =  Math.max(dt,  stepSize);  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  Math.max(dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  Math.max(dt,  stepSize);	  loop    =    dt;    	non-compiled	[CE]  incompatible  types	4	None	replace
235	[BUG]  [BUGGY]  loop  =  Math.abs(dt)+  stepSize;  [CE]  incompatible  types  [FE]                        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  Math.abs(dt)+  stepSize;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  Math.abs(dt)+  stepSize;	  loop    =    dt;    	non-compiled	[CE]  incompatible  types	4	None	replace
236	[BUG]  [BUGGY]  loop  =  Math.pow(10,  dt);  [CE]  incompatible  types  [FE]                          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  Math.pow(10,  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  Math.pow(10,  dt);	  loop    =    dt;    	non-compiled	[CE]  incompatible  types	4	None	replace
237	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt);  stepSize  =  Math.max(0,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.max(0,    dt);    stepSize  =  Math.max(0,  dt);	  timeout    	compilable	  [FE]  AssertionFailedError  	62	2	add
238	[BUG]  [BUGGY]  stepSize  =  Math.max(0,  dt);  stepSize  =  Math.max(0,  dt);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt);  stepSize  =  Math.max(0,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(0,    dt);    stepSize  =  Math.max(0,  dt);	  timeout    	compilable	  [FE]  AssertionFailedError  	62	2	add
239	[BUG]  [BUGGY]  stepSize  =  Math.max(0,  dt);  StepHandler  stepSize  =  Math.max(0,  dt);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt);  StepHandler  stepSize  =  Math.max(0,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(0,    dt);    StepHandler  stepSize  =  Math.max(0,  dt);	  timeout    	non-compiled	[CE]  incompatible  types	62	None	add
240	[BUG]  [BUGGY]  stepSize  =  Math.max(0,  dt);  dt  =  Math.max(0,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt);  dt  =  Math.max(0,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(0,    dt);    dt  =  Math.max(0,  dt);	  timeout    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	62	None	add
241	[BUG]  [BUGGY]  stepSize  =  Math.max(0,  dt);  phaseSize  =  Math.max(0,  dt);  [CE]  cannot  find  symbol  phaseSize  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt);  phaseSize  =  Math.max(0,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(0,    dt);    phaseSize  =  Math.max(0,  dt);	  timeout    	non-compiled	[CE]  cannot  find  symbol  phaseSize	62	None	add
242	[BUG]  [BUGGY]  loop  =  false;  dt  =  manager.getEventTime()  -  stepSize;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  dt  =  manager.getEventTime()  -  stepSize;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  dt  =  manager.getEventTime()  -  stepSize;	  loop    =    false;    dt    =    manager.getEventTime()    -    stepStart;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	103	None	replace
243	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  stepSize  =  Math.min(dt,  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.min(dt,    stepStart);    stepSize  =  Math.min(dt,  stepStart);	  timeout    	compilable	  [FE]  AssertionFailedError  	23	2	add
244	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  stepSize  =  Math.min(dt,  stepStart);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  stepSize  =  Math.min(dt,  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(dt,    stepStart);    stepSize  =  Math.min(dt,  stepStart);	  timeout    	compilable	  [FE]  AssertionFailedError  	23	2	add
245	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  StepHandler  stepSize  =  Math.min(dt,  stepStart);  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  StepHandler  stepSize  =  Math.min(dt,  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(dt,    stepStart);    StepHandler  stepSize  =  Math.min(dt,  stepStart);	  timeout    	non-compiled	[CE]  incompatible  types	23	None	add
246	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  stepSize  =  Math.max(dt,  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.min(dt,    stepStart);    stepSize  =  Math.max(dt,  stepStart);	  timeout    	compilable	  [FE]  AssertionFailedError  	23	2	add
247	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  stepSize  =  Math.max(dt,  stepStart);  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  stepSize  =  Math.max(dt,  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(dt,    stepStart);    stepSize  =  Math.max(dt,  stepStart);	  timeout    	compilable	  [FE]  AssertionFailedError  	23	2	add
248	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  phaseSize  =  Math.min(dt,  stepStart);  [CE]  cannot  find  symbol  phaseSize  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  phaseSize  =  Math.min(dt,  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(dt,    stepStart);    phaseSize  =  Math.min(dt,  stepStart);	  timeout    	non-compiled	[CE]  cannot  find  symbol  phaseSize	23	None	add
249	[BUG]  [BUGGY]  loop  =  false;  processStep(t0,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  processStep(t0,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  processStep(t0,  dt,  stepSize);	  loop    =    true;    processStep(t0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
250	[BUG]  [BUGGY]  t0  =  dt;  processStep(t0,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  t0  =  dt;  processStep(t0,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	t0  =  dt;  processStep(t0,  dt,  stepSize);	  loop    =    true;    processStep(t0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
251	[BUG]  [BUGGY]  ensureCapacity(t0,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  ensureCapacity(t0,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	ensureCapacity(t0,  dt,  stepSize);	  loop    =    true;    processStep(t0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
252	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.max(0,  dt  +  1);	  stepSize    =    Math.max(0,    dt);    timeout    	compilable	timeout	63	1	replace
253	[BUG]  [BUGGY]  stepSize  =  Math.max(0,  dt  +  1);  timeout  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(0,  dt  +  1);	  stepSize    =    Math.max(0,    dt);    timeout    	compilable	timeout	63	1	replace
254	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(0,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.min(0,  dt);	  stepSize    =    Math.max(0,    dt);    timeout    	compilable	timeout	63	1	replace
255	[BUG]  [BUGGY]  stepSize  =  Math.min(0,  dt);  timeout  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(0,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(0,  dt);	  stepSize    =    Math.max(0,    dt);    timeout    	compilable	timeout	63	1	replace
256	[BUG]  [BUGGY]  timeout  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt  +  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.max(0,  dt  +  stepSize);	  stepSize    =    Math.max(0,    dt);    timeout    	compilable	timeout	63	1	replace
257	[BUG]  [BUGGY]  stepSize  =  Math.max(0,  dt  +  stepSize);  timeout  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt  +  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(0,  dt  +  stepSize);	  stepSize    =    Math.max(0,    dt);    timeout    	compilable	timeout	63	1	replace
258	[BUG]  [BUGGY]  timeout  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt  -  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.max(0,  dt  -  1);	  stepSize    =    Math.max(0,    dt);    timeout    	compilable	timeout	63	1	replace
259	[BUG]  [BUGGY]  stepSize  =  Math.max(0,  dt  -  1);  timeout  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt  -  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(0,  dt  -  1);	  stepSize    =    Math.max(0,    dt);    timeout    	compilable	timeout	63	1	replace
260	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  nextStep,  stepSize,   "  +  stepSize);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  nextStep,  stepSize,   "  +  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  nextStep,  stepSize,   "  +  stepSize);	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ",    stepSize,       "    +    stepSize);    	non-compiled	[CE]  	19	None	replace
261	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepStart,   "  +  stepSize);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepStart,   "  +  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepStart,   "  +  stepSize);	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ",    stepSize,       "    +    stepSize);    	non-compiled	[CE]  	19	None	replace
262	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize: "  +  stepSize  + ") ";  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize: "  +  stepSize  + ") ";  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize: "  +  stepSize  + ") ";	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ",       "    +    stepSize    +       ")   ";    	non-compiled	[CE]  incompatible  types	33	None	replace
263	[BUG]  [BUGGY]  dt  =  manager.getEventTime()  -  stepSize  +  1;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dt  =  manager.getEventTime()  -  stepSize  +  1;  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  manager.getEventTime()  -  stepSize  +  1;	  dt    =    manager.getEventTime()    -    stepStart    +    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	80	None	replace
264	[BUG]  [BUGGY]  dt  =  manager.getEventTime()  -  this.stepSize  +  1;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dt  =  manager.getEventTime()  -  this.stepSize  +  1;  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  manager.getEventTime()  -  this.stepSize  +  1;	  dt    =    manager.getEventTime()    -    stepStart    +    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	80	None	replace
265	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepSize,  dt  +  1);  stepSize  =  Math.max(stepSize,  dt  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.max(stepSize,    dt    +    1);    stepSize  =  Math.max(stepSize,  dt  +  1);	  timeout    	compilable	  [FE]  AssertionFailedError  	92	2	add
266	[BUG]  [BUGGY]  stepSize  =  Math.max(stepSize,  dt  +  1);  stepSize  =  Math.max(stepSize,  dt  +  1);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepSize,  dt  +  1);  stepSize  =  Math.max(stepSize,  dt  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(stepSize,    dt    +    1);    stepSize  =  Math.max(stepSize,  dt  +  1);	  timeout    	compilable	  [FE]  AssertionFailedError  	92	2	add
267	[BUG]  [BUGGY]  stepSize  =  Math.max(stepSize,  dt  +  1);  stepSize  =  Math.max(stepSize,  dt  +  1));  [CE]  ';'  expected  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepSize,  dt  +  1);  stepSize  =  Math.max(stepSize,  dt  +  1));  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(stepSize,    dt    +    1);    stepSize  =  Math.max(stepSize,  dt  +  1));	  timeout    	non-compiled	[CE]  ';'  expected	92	None	add
268	[BUG]  [BUGGY]  stepSize  =  Math.max(stepSize,  dt  +  1);  StepHandler  stepSize  =  Math.max(stepSize,  dt  +  1);  [CE]  no  suitable  method  found  for  max(StepHandler,double)  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepSize,  dt  +  1);  StepHandler  stepSize  =  Math.max(stepSize,  dt  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(stepSize,    dt    +    1);    StepHandler  stepSize  =  Math.max(stepSize,  dt  +  1);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  max(StepHandler,double)	92	None	add
269	[BUG]  [BUGGY]  LoopTraversal.traverse(manager,  dt,  new  RungeKuttaStepInterpolator());  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(manager,  dt,  new  RungeKuttaStepInterpolator());  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(manager,  dt,  new  RungeKuttaStepInterpolator());	  LoopTraversal.traverse(interpolator,    dt,    new    RungeKuttaStepInterpolator());    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	85	None	replace
270	[BUG]  [BUGGY]  LoopTraversal.traverse(interpolator,  dt,  new  RungeKuttaStepInterpolator(),  prototype);  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(interpolator,  dt,  new  RungeKuttaStepInterpolator(),  prototype);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(interpolator,  dt,  new  RungeKuttaStepInterpolator(),  prototype);	  LoopTraversal.traverse(interpolator,    dt,    new    RungeKuttaStepInterpolator());    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	85	None	replace
271	[BUG]  [BUGGY]  LoopTraversal.traverse(prototype,  dt,  new  RungeKuttaStepInterpolator());  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(prototype,  dt,  new  RungeKuttaStepInterpolator());  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(prototype,  dt,  new  RungeKuttaStepInterpolator());	  LoopTraversal.traverse(interpolator,    dt,    new    RungeKuttaStepInterpolator());    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	85	None	replace
272	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(stepSize);  stepSize  =  Math.abs(stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.abs(stepSize);    stepSize  =  Math.abs(stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	94	2	add
273	[BUG]  [BUGGY]  stepSize  =  Math.abs(stepSize);  stepSize  =  Math.abs(stepSize);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(stepSize);  stepSize  =  Math.abs(stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(stepSize);    stepSize  =  Math.abs(stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	94	2	add
274	[BUG]  [BUGGY]  stepSize  =  Math.abs(stepSize);  StepHandler  stepSize  =  Math.abs(stepSize);  [CE]  no  suitable  method  found  for  abs(StepHandler)  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(stepSize);  StepHandler  stepSize  =  Math.abs(stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(stepSize);    StepHandler  stepSize  =  Math.abs(stepSize);	  timeout    	non-compiled	[CE]  no  suitable  method  found  for  abs(StepHandler)	94	None	add
275	[BUG]  [BUGGY]  stepSize  =  Math.abs(stepSize);  phaseSize  =  Math.abs(stepSize);  [CE]  cannot  find  symbol  phaseSize  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(stepSize);  phaseSize  =  Math.abs(stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(stepSize);    phaseSize  =  Math.abs(stepSize);	  timeout    	non-compiled	[CE]  cannot  find  symbol  phaseSize	94	None	add
276	[BUG]  [BUGGY]  stepSize  =  Math.abs(stepSize);  dt  =  Math.abs(stepSize);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(stepSize);  dt  =  Math.abs(stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(stepSize);    dt  =  Math.abs(stepSize);	  timeout    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	94	None	add
277	[BUG]  [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(dt,  prototype);  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(dt,  prototype);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  RungeKuttaStepInterpolator(dt,  prototype);	  loop    =    new    RungeKuttaStepInterpolator(dt,    rki);    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	2	None	replace
278	[BUG]  [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(dt,  y);  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(dt,  y);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  RungeKuttaStepInterpolator(dt,  y);	  loop    =    new    RungeKuttaStepInterpolator(dt,    rki);    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	2	None	replace
279	[BUG]  [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(dt,  proto);  [CE]  cannot  find  symbol  proto  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(dt,  proto);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  RungeKuttaStepInterpolator(dt,  proto);	  loop    =    new    RungeKuttaStepInterpolator(dt,    rki);    	non-compiled	[CE]  cannot  find  symbol  proto	2	None	replace
280	[BUG]  [BUGGY]  loop  =  true;  processStep(dt,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  processStep(dt,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  processStep(dt,  dt,  stepSize);	  loop    =    true;    processStep(rki,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
281	[BUG]  [BUGGY]  processStep(dt,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  processStep(dt,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	processStep(dt,  dt,  stepSize);	  loop    =    true;    processStep(rki,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
282	[BUG]  [BUGGY]  Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize: "  +  stepSize  + ") ";  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize: "  +  stepSize  + ") ";  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize: "  +  stepSize  + ") ";	  Loop    loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ",       "    +    stepSize    +       ")   ";    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
283	[BUG]  [BUGGY]  dt  =  manager.getEventTime()  /  stepStart;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dt  =  manager.getEventTime()  /  stepStart;  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  manager.getEventTime()  /  stepStart;	  dt    =    manager.getEventTime()    *    stepStart;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	12	None	replace
284	[BUG]  [BUGGY]  stepSize  =  Math.abs(stepSize);  StepHandler  handler  =  getStepInterpolator();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(stepSize);  StepHandler  handler  =  getStepInterpolator();  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(stepSize);  StepHandler  handler  =  getStepInterpolator();	          stepSize    =    Math.abs(stepStart);    StepHandler    handler    =    getStepInterpolator();    	non-compiled	[CE]  cannot  find  symbol	98	None	replace
285	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  y,  k);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  y,  k);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  dt,  y,  k);	  loop    =    new    BasicStepInterpolator(t0,    y0,    dt,    k);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
286	[BUG]  [BUGGY]  Loop  loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Loop  loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Loop  loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  stepSize);	  loop    =    new    BasicStepInterpolator(t0,    y0,    dt,    k);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
287	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(dt,  y0,  t0,  k);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(dt,  y0,  t0,  k);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(dt,  y0,  t0,  k);	  loop    =    new    BasicStepInterpolator(t0,    y0,    dt,    k);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
288	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  stepSize  =  Math.min(stepStart,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.min(stepStart,    dt);    stepSize  =  Math.min(stepStart,  dt);	  timeout    	compilable	  [FE]  AssertionFailedError  	78	2	add
289	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  stepSize  =  Math.min(stepStart,  dt);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  stepSize  =  Math.min(stepStart,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(stepStart,    dt);    stepSize  =  Math.min(stepStart,  dt);	  timeout    	compilable	  [FE]  AssertionFailedError  	78	2	add
290	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  StepHandler  stepSize  =  Math.min(stepStart,  dt);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  StepHandler  stepSize  =  Math.min(stepStart,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(stepStart,    dt);    StepHandler  stepSize  =  Math.min(stepStart,  dt);	  timeout    	non-compiled	[CE]  incompatible  types	78	None	add
291	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  stepSize  =  Math.max(stepStart,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.min(stepStart,    dt);    stepSize  =  Math.max(stepStart,  dt);	  timeout    	compilable	  [FE]  AssertionFailedError  	78	2	add
292	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  stepSize  =  Math.max(stepStart,  dt);  [FE]  AssertionFailedError  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  stepSize  =  Math.max(stepStart,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(stepStart,    dt);    stepSize  =  Math.max(stepStart,  dt);	  timeout    	compilable	  [FE]  AssertionFailedError  	78	2	add
293	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  phaseSize  =  Math.min(stepStart,  dt);  [CE]  cannot  find  symbol  phaseSize  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  phaseSize  =  Math.min(stepStart,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(stepStart,    dt);    phaseSize  =  Math.min(stepStart,  dt);	  timeout    	non-compiled	[CE]  cannot  find  symbol  phaseSize	78	None	add
294	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop    =    true;    loop  =  true;  loop  =  true;  loop  =  true;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	loop        =        true;        loop    =    true;    loop  =  true;  loop  =  true;	  	compilable	  [FE]  AssertionFailedError  	39	2	add
295	[BUG]  [BUGGY]  loop    =    true;    loop  =  true;  loop  =  true;  loop  =  true;  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop    =    true;    loop  =  true;  loop  =  true;  loop  =  true;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop        =        true;        loop    =    true;    loop  =  true;  loop  =  true;	  	compilable	  [FE]  AssertionFailedError  	39	2	add
296	[BUG]  [BUGGY]  loop    =    true;    loop  =  true;  dt  =  manager.getEventTime()  -  stepStart;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]      AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop    =    true;    loop  =  true;  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop        =        true;        loop    =    true;    dt  =  manager.getEventTime()  -  stepStart;	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	39	None	add
297	[BUG]  [BUGGY]  loop    =    true;    loop  =  true;  dt  =  manager.getEventTime();  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]        AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop    =    true;    loop  =  true;  dt  =  manager.getEventTime();  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop        =        true;        loop    =    true;    dt  =  manager.getEventTime();	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	39	None	add
298	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop    =    true;    loop  =  true;  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	loop        =        true;        loop    =    true;    stepSize  =  Math.max(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
299	[BUG]  [BUGGY]  loop    =    true;    loop  =  true;  stepSize  =  Math.max(stepSize,  dt);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop    =    true;    loop  =  true;  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop        =        true;        loop    =    true;    stepSize  =  Math.max(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
300	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop    =    true;    loop  =  true;  stepSize  =  Math.abs(dt)-  stepSize;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	loop        =        true;        loop    =    true;    stepSize  =  Math.abs(dt)-  stepSize;	  	compilable	  [FE]  AssertionFailedError  	39	2	add
301	[BUG]  [BUGGY]  loop    =    true;    loop  =  true;  stepSize  =  Math.abs(dt)-  stepSize;  [FE]  AssertionFailedError  [FE]            AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop    =    true;    loop  =  true;  stepSize  =  Math.abs(dt)-  stepSize;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop        =        true;        loop    =    true;    stepSize  =  Math.abs(dt)-  stepSize;	  	compilable	  [FE]  AssertionFailedError  	39	2	add
302	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  /  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.abs(dt  /  stepStart);	  stepSize    =    Math.abs(dt    -    stepStart);    timeout    	compilable	timeout	106	1	replace
303	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  /  stepStart);  timeout  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  /  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt  /  stepStart);	  stepSize    =    Math.abs(dt    -    stepStart);    timeout    	compilable	timeout	106	1	replace
304	[BUG]  [BUGGY]  loop  =   "Step "  +  dt.toString();  [CE]  double  cannot  be  dereferenced  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step "  +  dt.toString();  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step "  +  dt.toString();	  loop    =       "Step   "    +    dt;    	non-compiled	[CE]  double  cannot  be  dereferenced	36	None	replace
305	[BUG]  [BUGGY]  loop  =   "Step "  +  dt.getValue();  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step "  +  dt.getValue();  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step "  +  dt.getValue();	  loop    =       "Step   "    +    dt;    	non-compiled	[CE]  double  cannot  be  dereferenced	36	None	replace
306	[BUG]  [BUGGY]  loop  =  false;  dt  =  System.currentTimeMillis();  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  dt  =  System.currentTimeMillis();  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  dt  =  System.currentTimeMillis();	  loop    =    false;    timeout    =    System.currentTimeMillis();    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	54	None	replace
307	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  stepSize  =  System.currentTimeMillis();  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	loop  =  false;  stepSize  =  System.currentTimeMillis();	  loop    =    false;    timeout    =    System.currentTimeMillis();    	compilable	  [FE]  AssertionFailedError  	54	2	replace
308	[BUG]  [BUGGY]  loop  =  false;  stepSize  =  System.currentTimeMillis();  [FE]  AssertionFailedError  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  stepSize  =  System.currentTimeMillis();  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  stepSize  =  System.currentTimeMillis();	  loop    =    false;    timeout    =    System.currentTimeMillis();    	compilable	  [FE]  AssertionFailedError  	54	2	replace
309	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	                stepSize        =        Math.abs(dt);        stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);	  	compilable	  [FE]  AssertionFailedError  	7	2	add
310	[BUG]  [BUGGY]          stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(dt);        stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);	  	compilable	  [FE]  AssertionFailedError  	7	2	add
311	[BUG]  [BUGGY]          stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);  StepHandler  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);  StepHandler  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(dt);        stepSize    =    Math.abs(dt);    StepHandler  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);	  	non-compiled	[CE]  incompatible  types	7	None	add
312	[BUG]  [BUGGY]          stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);  int  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);  int  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(dt);        stepSize    =    Math.abs(dt);    int  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);	  	non-compiled	[CE]  possible  loss  of  precision	7	None	add
313	[BUG]  [BUGGY]          stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);  dt  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]          AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);  dt  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(dt);        stepSize    =    Math.abs(dt);    dt  =  Math.abs(dt);  stepSize  =  Math.abs(dt);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	7	None	add
314	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  +  stepStart  +   ") ";  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  +  stepStart  +   ") ";  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  +  stepStart  +   ") ";	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +    stepSize    +   ")   ";    	non-compiled	[CE]  incompatible  types	28	None	replace
315	[BUG]  [BUGGY]  processStep(dt,  t0,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  processStep(dt,  t0,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	processStep(dt,  t0,  dt,  stepSize);	  loop    =    true;    processStep(rki,    t0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
316	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	                stepSize        =        Math.abs(stepStart);        stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);	  	compilable	  [FE]  AssertionFailedError  	57	2	add
317	[BUG]  [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(stepStart);        stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);	  	compilable	  [FE]  AssertionFailedError  	57	2	add
318	[BUG]  [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  StepHandler  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  StepHandler  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(stepStart);        stepSize    =    Math.abs(stepStart);    StepHandler  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);	  	non-compiled	[CE]  incompatible  types	57	None	add
319	[BUG]  [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  int  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  int  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(stepStart);        stepSize    =    Math.abs(stepStart);    int  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);	  	non-compiled	[CE]  possible  loss  of  precision	57	None	add
320	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	                stepSize        =        Math.abs(stepStart);        stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(stepStart);	  	compilable	  [FE]  AssertionFailedError  	57	2	add
321	[BUG]  [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(stepStart);  [FE]  AssertionFailedError  [FE]          AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(stepStart);        stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(stepStart);	  	compilable	  [FE]  AssertionFailedError  	57	2	add
322	[BUG]  [BUGGY]  dt  =  manager.getEventTime()  +  1;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dt  =  manager.getEventTime()  +  1;  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  manager.getEventTime()  +  1;	  dt    =    manager.getEventTime()    -    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	29	None	replace
323	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize= "  +  stepStart);  [CE]  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize= "  +  stepStart);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize= "  +  stepStart);	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ",    stepSize=   "    +    stepSize);    	non-compiled	[CE]  	20	None	replace
324	[BUG]  [BUGGY]  double  stepSize  =  Math.min(stepSize,  dt);  [CE]  variable  stepSize  might  not  have  been  initialized  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  double  stepSize  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	double  stepSize  =  Math.min(stepSize,  dt);	          stepSize    =    Math.min(stepSize,    dt);    int    stepSize    =    Math.min(stepSize,    dt);    	non-compiled	[CE]  variable  stepSize  might  not  have  been  initialized	48	None	replace
325	[BUG]  [BUGGY]  int  stepSize  =  Math.min(stepSize,  dt);  [CE]  possible  loss  of  precision  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  int  stepSize  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	int  stepSize  =  Math.min(stepSize,  dt);	          stepSize    =    Math.min(stepSize,    dt);    int    stepSize    =    Math.min(stepSize,    dt);    	non-compiled	[CE]  possible  loss  of  precision	48	None	replace
326	[BUG]  [BUGGY]  long  stepSize  =  Math.min(stepSize,  dt);  [CE]  possible  loss  of  precision  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  long  stepSize  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	long  stepSize  =  Math.min(stepSize,  dt);	          stepSize    =    Math.min(stepSize,    dt);    int    stepSize    =    Math.min(stepSize,    dt);    	non-compiled	[CE]  possible  loss  of  precision	48	None	replace
327	[BUG]  [BUGGY]  int  stepSize  =  Math.min(dt,  stepStart);  [CE]  possible  loss  of  precision  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  int  stepSize  =  Math.min(dt,  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	int  stepSize  =  Math.min(dt,  stepStart);	          stepSize    =    Math.min(stepSize,    dt);    int    stepSize    =    Math.min(stepSize,    dt);    	non-compiled	[CE]  possible  loss  of  precision	48	None	replace
328	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  stepStart);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  stepStart);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  stepStart);	  loop    =    new    BasicStepInterpolator(t0,    y0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
329	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  y0,  stepSize);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  y0,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  dt,  y0,  stepSize);	  loop    =    new    BasicStepInterpolator(t0,    y0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
330	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  stepSize,  k);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  stepSize,  k);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  stepSize,  k);	  loop    =    new    BasicStepInterpolator(t0,    y0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	70	None	replace
331	[BUG]  [BUGGY]  int  stepSize  =  Math.min(stepStart,  dt);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  int  stepSize  =  Math.min(stepStart,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	int  stepSize  =  Math.min(stepStart,  dt);	          stepSize    =    Math.min(stepSize,    dt);    int    stepSize    =    Math.min(stepSize,    dt);    	non-compiled	[CE]  possible  loss  of  precision	48	None	replace
332	[BUG]  [BUGGY]  stepSize  =  Math.abs(stepSize);  StepHandler  handler  =  prototype.getInstance();  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(stepSize);  StepHandler  handler  =  prototype.getInstance();  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(stepSize);    StepHandler  handler  =  prototype.getInstance();	  timeout    	non-compiled	[CE]  cannot  find  symbol	94	None	add
333	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  StepSize  =  Math.max(stepSize,  dt);  [CE]  cannot  find  symbol  StepSize  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  StepSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(stepStart,  dt);  StepSize  =  Math.max(stepSize,  dt);	          stepSize    =    Math.max(stepSize,    dt);    StepSize    =    Math.max(stepSize,    dt);    	non-compiled	[CE]  cannot  find  symbol  StepSize	68	None	replace
334	[BUG]  [BUGGY]  Loop  loop  =  interpolator.evaluateStep(t0  +  dt  + ",   "  +  stepSize  + ") ";  [CE]  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Loop  loop  =  interpolator.evaluateStep(t0  +  dt  + ",   "  +  stepSize  + ") ";  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Loop  loop  =  interpolator.evaluateStep(t0  +  dt  + ",   "  +  stepSize  + ") ";	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ",       "    +    stepSize    +       ")   ";    	non-compiled	[CE]  	33	None	replace
335	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  StepHandler  handler  =  interfaces.get(dt,  stepStart);  [CE]  cannot  find  symbol  interfaces  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  StepHandler  handler  =  interfaces.get(dt,  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(dt,    stepStart);    StepHandler  handler  =  interfaces.get(dt,  stepStart);	  timeout    	non-compiled	[CE]  cannot  find  symbol  interfaces	23	None	add
336	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  StepHandler  handler  =  interfaces.get(dt);  [CE]  cannot  find  symbol  interfaces  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  StepHandler  handler  =  interfaces.get(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(dt,    stepStart);    StepHandler  handler  =  interfaces.get(dt);	  timeout    	non-compiled	[CE]  cannot  find  symbol  interfaces	23	None	add
337	[BUG]  [BUGGY]  LoopTraversal.traverse(interpolator,   "Steps: ",  dt);  [CE]  cannot  find  symbol  LoopTraversal  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(interpolator,   "Steps: ",  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(interpolator,   "Steps: ",  dt);	  LoopTraversal.traverse(interpolator,   "Step   ",    dt);    	non-compiled	[CE]  cannot  find  symbol  LoopTraversal	87	None	replace
338	[BUG]  [BUGGY]  dt  =  manager.getEventTime()  -  stepStart  +  2;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dt  =  manager.getEventTime()  -  stepStart  +  2;  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  manager.getEventTime()  -  stepStart  +  2;	  dt    =    manager.getEventTime()    -    stepStart    +    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	80	None	replace
339	[BUG]  [BUGGY]  stepSize  =  Math.max(stepSize,  y0);  dt  =  Math.max(stepSize,  dt);  [CE]  no  suitable  method  found  for  max(double,double[])  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepSize,  y0);  dt  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(stepSize,  y0);  dt  =  Math.max(stepSize,  dt);	          stepSize    =    Math.max(stepSize,    dt);    dt    =    Math.max(stepSize,    dt);    	non-compiled	[CE]  no  suitable  method  found  for  max(double,double[])	16	None	replace
340	[BUG]  [BUGGY]  stepSize  =  Math.max(stepSize,  t0);  dt  =  Math.max(stepSize,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepSize,  t0);  dt  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(stepSize,  t0);  dt  =  Math.max(stepSize,  dt);	          stepSize    =    Math.max(stepSize,    dt);    dt    =    Math.max(stepSize,    dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	16	None	replace
341	[BUG]  [BUGGY]  Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",   "  +  y  + ") ";  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",   "  +  y  + ") ";  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",   "  +  y  + ") ";	  Loop    loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ",       "    +    dt    +   ")   ";    	non-compiled	[CE]  cannot  find  symbol	35	None	replace
342	[BUG]  [BUGGY]  stepSize  =  Math.max(0,  dt);  StepHandler  handler  =  interfaces.get(dt);  [CE]  cannot  find  symbol  interfaces  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt);  StepHandler  handler  =  interfaces.get(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(0,    dt);    StepHandler  handler  =  interfaces.get(dt);	  timeout    	non-compiled	[CE]  cannot  find  symbol  interfaces	62	None	add
343	[BUG]  [BUGGY]  stepSize  =  Math.max(0,  dt);  StepHandler  handler  =  interfaces.get(dt,  stepSize);  [CE]  cannot  find  symbol  interfaces  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt);  StepHandler  handler  =  interfaces.get(dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(0,    dt);    StepHandler  handler  =  interfaces.get(dt,  stepSize);	  timeout    	non-compiled	[CE]  cannot  find  symbol  interfaces	62	None	add
344	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  nextStep: "  +  nextStep);  [CE]  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  nextStep: "  +  nextStep);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  nextStep: "  +  nextStep);	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ",    stepSize:   "    +    stepSize);    	non-compiled	[CE]  	18	None	replace
345	[BUG]  [BUGGY]  stepSize  =  Math.max(stepSize,  dt  +  1);  StepSize  =  Math.max(stepSize,  dt  +  1);  [CE]  cannot  find  symbol  StepSize  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepSize,  dt  +  1);  StepSize  =  Math.max(stepSize,  dt  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(stepSize,    dt    +    1);    StepSize  =  Math.max(stepSize,  dt  +  1);	  timeout    	non-compiled	[CE]  cannot  find  symbol  StepSize	92	None	add
346	[BUG]  [BUGGY]          stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt;  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(dt);        stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt;	  	non-compiled	[CE]  ')'  expected	7	None	add
347	[BUG]  [BUGGY]  loop  =  false;  dt  =  Math.abs(dt)-  stepStart;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  dt  =  Math.abs(dt)-  stepStart;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  dt  =  Math.abs(dt)-  stepStart;	  loop    =    false;    dt    =    Math.abs(dt)-    stepSize;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	81	None	replace
348	[BUG]  [BUGGY]  stepSize  =  Math.abs(stepStart);  dt  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(stepStart);  dt  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(stepStart);  dt  =  Math.abs(dt);  stepSize  =  Math.abs(dt);	          stepSize    =    Math.abs(dt);    dt    =    Math.abs(dt);    stepSize    =    Math.abs(dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	88	None	replace
349	[BUG]  [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  stepSize  =  Math.max(stepStart,  dt));  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  stepSize  =  Math.max(stepStart,  dt));  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(stepStart,    dt);    stepSize  =  Math.max(stepStart,  dt));	  timeout    	non-compiled	[CE]  ';'  expected	90	None	add
350	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  if(dt  >  0)  {  loop  =  true;  loop  =  true;  }  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	if(dt  >  0)  {  loop  =  true;  loop  =  true;  }	  loop    =    true;    loop    =    true;    	compilable	timeout	40	1	replace
351	[BUG]  [BUGGY]  if(dt  >  0)  {  loop  =  true;  loop  =  true;  }  timeout  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  if(dt  >  0)  {  loop  =  true;  loop  =  true;  }  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	if(dt  >  0)  {  loop  =  true;  loop  =  true;  }	  loop    =    true;    loop    =    true;    	compilable	timeout	40	1	replace
352	[BUG]  [BUGGY]  if(dt  >  lastStep)  {  loop  =  true;  loop  =  true;  }  [CE]  bad  operand  types  for  binary  operator  '>'  [FE]      AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  if(dt  >  lastStep)  {  loop  =  true;  loop  =  true;  }  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	if(dt  >  lastStep)  {  loop  =  true;  loop  =  true;  }	  loop    =    true;    loop    =    true;    	non-compiled	[CE]  bad  operand  types  for  binary  operator  '>'	40	None	replace
353	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  if(dt  >  0.0)  {  loop  =  true;  loop  =  true;  }  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	if(dt  >  0.0)  {  loop  =  true;  loop  =  true;  }	  loop    =    true;    loop    =    true;    	compilable	timeout	40	1	replace
354	[BUG]  [BUGGY]  if(dt  >  0.0)  {  loop  =  true;  loop  =  true;  }  timeout  [FE]        AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  if(dt  >  0.0)  {  loop  =  true;  loop  =  true;  }  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	if(dt  >  0.0)  {  loop  =  true;  loop  =  true;  }	  loop    =    true;    loop    =    true;    	compilable	timeout	40	1	replace
355	[BUG]  [BUGGY]  loop  =   "Step:  lastStep "  +  dt;  [CE]  incompatible  types  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step:  lastStep "  +  dt;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step:  lastStep "  +  dt;	  loop    =       "Step   "    +    dt;    	non-compiled	[CE]  incompatible  types	36	None	replace
356	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  a,  yTmp);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  a,  yTmp);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  y0,  a,  yTmp);	  loop    =    new    BasicStepInterpolator(t0,    dt,    a,    yTmp);    	non-compiled	[CE]  cannot  find  symbol	110	None	replace
357	[BUG]  [BUGGY]  LoopTraversal.traverse(getEventsManager(),  dt,  new  RungeKuttaStepInterpolator());  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(getEventsManager(),  dt,  new  RungeKuttaStepInterpolator());  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(getEventsManager(),  dt,  new  RungeKuttaStepInterpolator());	  LoopTraversal.traverse(interpolator,    dt,    new    RungeKuttaStepInterpolator());    	non-compiled	[CE]  cannot  find  symbol	85	None	replace
358	[BUG]  [BUGGY]  LoopTraversal.traverse(interpolator, "Steps: ");  [CE]  cannot  find  symbol  LoopTraversal  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(interpolator, "Steps: ");  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(interpolator, "Steps: ");	  loop    =       "Steps:   ";    	non-compiled	[CE]  cannot  find  symbol  LoopTraversal	37	None	replace
359	[BUG]  [BUGGY]  loop  =   "Steps: "  +  t0;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Steps: "  +  t0;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Steps: "  +  t0;	  loop    =       "Steps:   ";    	non-compiled	[CE]  incompatible  types	37	None	replace
360	[BUG]  [BUGGY]  loop  =   "Step: "  +  t0;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step: "  +  t0;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step: "  +  t0;	  loop    =       "Step:   ";    	non-compiled	[CE]  incompatible  types	38	None	replace
361	[BUG]  [BUGGY]  LoopTraversal.traverse(interpolator, "Step: ");  [CE]  cannot  find  symbol  LoopTraversal  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(interpolator, "Step: ");  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(interpolator, "Step: ");	  loop    =       "Step:   ";    	non-compiled	[CE]  cannot  find  symbol  LoopTraversal	38	None	replace
362	[BUG]  [BUGGY]  stepSize  =  Math.abs(step);  dt  =  Math.abs(dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(step);  dt  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(step);  dt  =  Math.abs(dt);	          stepSize    =    Math.abs(dt);    dt    =    Math.abs(dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	11	None	replace
363	[BUG]  [BUGGY]  t0  =  t;  processStep(t0,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  t0  =  t;  processStep(t0,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	t0  =  t;  processStep(t0,  dt,  stepSize);	  loop    =    true;    processStep(t0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	43	None	replace
364	[BUG]  [BUGGY]  Looper  loop  =  new  Looper(t0,  true);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  loop  =  new  Looper(t0,  true);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  loop  =  new  Looper(t0,  true);	  Looper    loop    =    new    Looper(dt,    true);    	non-compiled	[CE]  cannot  find  symbol	67	None	replace
365	[BUG]  [BUGGY]  Looper  loop  =  new  Looper(t0);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  loop  =  new  Looper(t0);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  loop  =  new  Looper(t0);	  Looper    loop    =    new    Looper();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
366	[BUG]  [BUGGY]  Looper  loop  =  new  Looper(interpolator);  [CE]  cannot  find  symbol  [FE]                      AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  loop  =  new  Looper(interpolator);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  loop  =  new  Looper(interpolator);	  Looper    loop    =    new    Looper();    	non-compiled	[CE]  cannot  find  symbol	66	None	replace
367	[BUG]  [BUGGY]  Looper  l  =  new  Looper(dt,  true);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  l  =  new  Looper(dt,  true);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  l  =  new  Looper(dt,  true);	  Looper    l    =    true;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
368	[BUG]  [BUGGY]  Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",   "  +  stepStart  +   ") ";  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",   "  +  stepStart  +   ") ";  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",   "  +  stepStart  +   ") ";	  Loop    loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ",       "    +    stepSize    +       ")   ";    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
369	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt  +  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.max(0,  dt  +  stepStart);	  stepSize    =    Math.max(0,    dt);    timeout    	compilable	timeout	63	1	replace
370	[BUG]  [BUGGY]  stepSize  =  Math.max(0,  dt  +  stepStart);  timeout  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt  +  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(0,  dt  +  stepStart);	  stepSize    =    Math.max(0,    dt);    timeout    	compilable	timeout	63	1	replace
371	[BUG]  [BUGGY]  dtSize  =  Math.abs(dt);  StepHandler  handler  =  prototype.getInstance();  stepSize  =  Math.abs(dtSize);  [CE]  cannot  find  symbol  dtSize  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dtSize  =  Math.abs(dt);  StepHandler  handler  =  prototype.getInstance();  stepSize  =  Math.abs(dtSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dtSize  =  Math.abs(dt);  StepHandler  handler  =  prototype.getInstance();  stepSize  =  Math.abs(dtSize);	          stepSize    =    Math.abs(dt);    StepHandler    handler    =    prototype.getInstance();    stepSize    =    Math.abs(dt);    	non-compiled	[CE]  cannot  find  symbol  dtSize	89	None	replace
372	[BUG]  [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(interpolator);  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(interpolator);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  RungeKuttaStepInterpolator(interpolator);	  loop    =    new    RungeKuttaStepInterpolator();    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	1	None	replace
373	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ",  a,  b);  [CE]  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ",  a,  b);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ",  a,  b);	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ")   ",    a);    	non-compiled	[CE]  	111	None	replace
374	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ",  rki);  [CE]  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ",  rki);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ",  rki);	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ")   ",    a);    	non-compiled	[CE]  	111	None	replace
375	[BUG]  [BUGGY]  loop  =  Math.max(loopSize,  dt);  [CE]  cannot  find  symbol  loopSize  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  Math.max(loopSize,  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  Math.max(loopSize,  dt);	  loop    =    dt;    	non-compiled	[CE]  cannot  find  symbol  loopSize	4	None	replace
376	[BUG]  [BUGGY]  loop  =  Math.abs(dt);  [CE]  incompatible  types  [FE]                      AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  Math.abs(dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  Math.abs(dt);	  loop    =    dt;    	non-compiled	[CE]  incompatible  types	4	None	replace
377	[BUG]  [BUGGY]  loop  =  Math.max(loop,  dt);  [CE]  no  suitable  method  found  for  max(boolean,double)  [FE]                        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  Math.max(loop,  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  Math.max(loop,  dt);	  loop    =    dt;    	non-compiled	[CE]  no  suitable  method  found  for  max(boolean,double)	4	None	replace
378	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  StepHandler  handler  =  interfaces.get(dt);  [CE]  cannot  find  symbol  interfaces  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  StepHandler  handler  =  interfaces.get(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(dt,    stepStart);    StepHandler  handler  =  interfaces.get(dt);	  timeout    	non-compiled	[CE]  cannot  find  symbol  interfaces	31	None	add
379	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  stepSize  =  Math.max(dt,  stepStart));  [CE]  ';'  expected  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  stepSize  =  Math.max(dt,  stepStart));  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(dt,    stepStart);    stepSize  =  Math.max(dt,  stepStart));	  timeout    	non-compiled	[CE]  ';'  expected	31	None	add
380	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  StepSize  =  Math.min(dt,  stepSize);  [CE]  cannot  find  symbol  StepSize  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  StepSize  =  Math.min(dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(dt,    stepSize);    StepSize  =  Math.min(dt,  stepSize);	  timeout    	non-compiled	[CE]  cannot  find  symbol  StepSize	21	None	add
381	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  StepHandler  handler  =  interfaces.get(dt);  [CE]  cannot  find  symbol  interfaces  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  StepHandler  handler  =  interfaces.get(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(dt,    stepSize);    StepHandler  handler  =  interfaces.get(dt);	  timeout    	non-compiled	[CE]  cannot  find  symbol  interfaces	21	None	add
382	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  stepSize  =  Math.min(stepStart,  dt));  [CE]  ';'  expected  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  stepSize  =  Math.min(stepStart,  dt));  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(stepStart,    dt);    stepSize  =  Math.min(stepStart,  dt));	  timeout    	non-compiled	[CE]  ';'  expected	78	None	add
383	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  StepHandler  handler  =  interfaces.get(dt);  [CE]  cannot  find  symbol  interfaces  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  StepHandler  handler  =  interfaces.get(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(stepStart,    dt);    StepHandler  handler  =  interfaces.get(dt);	  timeout    	non-compiled	[CE]  cannot  find  symbol  interfaces	78	None	add
384	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  stepSize  =  Math.abs(dt  -  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.abs(dt    +    stepSize);    stepSize  =  Math.abs(dt  -  stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	50	2	add
385	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  stepSize  =  Math.abs(dt  -  stepSize);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  stepSize  =  Math.abs(dt  -  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(dt    +    stepSize);    stepSize  =  Math.abs(dt  -  stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	50	2	add
386	[BUG]  [BUGGY]  loop  =  true;  processStep(interpolator,  dt,  stepSize  +  1);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  processStep(interpolator,  dt,  stepSize  +  1);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  processStep(interpolator,  dt,  stepSize  +  1);	  loop    =    true;    processStep(interpolator,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	73	None	replace
387	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  y0,  k);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  y0,  k);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  dt,  y0,  k);	  loop    =    new    BasicStepInterpolator(t0,    y0,    dt,    k);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
388	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepStart,  dt  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.max(stepStart,  dt  +  1);	  stepSize    =    Math.max(stepSize,    dt    +    1);    timeout    	compilable	timeout	93	1	replace
389	[BUG]  [BUGGY]  stepSize  =  Math.max(stepStart,  dt  +  1);  timeout  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepStart,  dt  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(stepStart,  dt  +  1);	  stepSize    =    Math.max(stepSize,    dt    +    1);    timeout    	compilable	timeout	93	1	replace
390	[BUG]  [BUGGY]  loop  =  false;  dt  =  Math.max(len,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  dt  =  Math.max(len,  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  dt  =  Math.max(len,  dt);	  loop    =    false;    dt    =    Math.max(dt,    dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	104	None	replace
391	[BUG]  [BUGGY]  loop  =  false;  dt  =  Math.max(dt,  y0);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  dt  =  Math.max(dt,  y0);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  dt  =  Math.max(dt,  y0);	  loop    =    false;    dt    =    Math.max(dt,    dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	104	None	replace
392	[BUG]  [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt;  [CE]  ')'  expected  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt;  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(stepStart);        stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt;	  	non-compiled	[CE]  ')'  expected	82	None	add
393	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  y0);  [CE]  no  suitable  method  found  for  min(double,double[])  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  y0);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(dt,  y0);	  stepSize    =    Math.max(dt,    stepStart);    timeout    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double[])	32	None	replace
394	[BUG]  [BUGGY]  Loop  loop  =   "Step  interpreter.evaluateStep( "  +  dt  + ") ";  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Loop  loop  =   "Step  interpreter.evaluateStep( "  +  dt  + ") ";  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Loop  loop  =   "Step  interpreter.evaluateStep( "  +  dt  + ") ";	  Loop    loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ")   ";    	non-compiled	[CE]  cannot  find  symbol	27	None	replace
395	[BUG]  [BUGGY]  loop  =  true;  processStep(dt,  t0,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  processStep(dt,  t0,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  processStep(dt,  t0,  dt,  stepSize);	  loop    =    true;    processStep(rki,    t0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	42	None	replace
396	[BUG]  [BUGGY]  stepSize  =  true;  processStep(t0,  dt,  stepSize);  [CE]  incompatible  types  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  true;  processStep(t0,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  true;  processStep(t0,  dt,  stepSize);	  loop    =    true;    processStep(rki,    t0,    dt,    stepSize);    	non-compiled	[CE]  incompatible  types	42	None	replace
397	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  stepStart);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  stepStart);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  dt,  stepStart);	  loop    =    new    BasicStepInterpolator(t0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
398	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  stepSize);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  y0,  stepSize);	  loop    =    new    BasicStepInterpolator(t0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	71	None	replace
399	[BUG]  [BUGGY]  stepSize  =  Math.min(stepSize,  y0);  dt  =  Math.min(stepSize,  dt);  [CE]  no  suitable  method  found  for  min(double,double[])  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepSize,  y0);  dt  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(stepSize,  y0);  dt  =  Math.min(stepSize,  dt);	          stepSize    =    Math.min(stepSize,    dt);    dt    =    Math.min(stepSize,    dt);    	non-compiled	[CE]  no  suitable  method  found  for  min(double,double[])	49	None	replace
400	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop    =    true;    loop  =  true;  stepSize  =  Math.abs(stepStart);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	loop        =        true;        loop    =    true;    stepSize  =  Math.abs(stepStart);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
401	[BUG]  [BUGGY]  loop    =    true;    loop  =  true;  stepSize  =  Math.abs(stepStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop    =    true;    loop  =  true;  stepSize  =  Math.abs(stepStart);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop        =        true;        loop    =    true;    stepSize  =  Math.abs(stepStart);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
402	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop    =    true;    loop  =  true;  stepSize  =  Math.min(stepSize,  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	loop        =        true;        loop    =    true;    stepSize  =  Math.min(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
403	[BUG]  [BUGGY]  loop    =    true;    loop  =  true;  stepSize  =  Math.min(stepSize,  dt);  [FE]  AssertionFailedError  [FE]      AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop    =    true;    loop  =  true;  stepSize  =  Math.min(stepSize,  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop        =        true;        loop    =    true;    stepSize  =  Math.min(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	39	2	add
404	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop    =    true;    loop  =  true;  stepSize  =  Math.abs(stepStart)/  dt;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	loop        =        true;        loop    =    true;    stepSize  =  Math.abs(stepStart)/  dt;	  	compilable	  [FE]  AssertionFailedError  	39	2	add
405	[BUG]  [BUGGY]  loop    =    true;    loop  =  true;  stepSize  =  Math.abs(stepStart)/  dt;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop    =    true;    loop  =  true;  stepSize  =  Math.abs(stepStart)/  dt;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop        =        true;        loop    =    true;    stepSize  =  Math.abs(stepStart)/  dt;	  	compilable	  [FE]  AssertionFailedError  	39	2	add
406	[BUG]  [BUGGY]  dt  =  manager.getEventTime()  -  2;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  dt  =  manager.getEventTime()  -  2;  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  manager.getEventTime()  -  2;	  dt    =    manager.getEventTime()    -    1;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	29	None	replace
407	[BUG]  [BUGGY]  loop  =  true;  dt  =  manager.getEventTime()  -  stepStart;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  dt  =  manager.getEventTime()  -  stepStart;	  loop    =    false;    dt    =    manager.getEventTime()    -    stepStart;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	103	None	replace
408	[BUG]  [BUGGY]  loop  =  false;  dt  =  manager.getEventTime()  -  1;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  dt  =  manager.getEventTime()  -  1;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  dt  =  manager.getEventTime()  -  1;	  loop    =    false;    dt    =    manager.getEventTime()    -    stepStart;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	103	None	replace
409	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  StepSize  =  Math.max(dt,  stepSize);  [CE]  cannot  find  symbol  StepSize  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  StepSize  =  Math.max(dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(dt,    stepSize);    StepSize  =  Math.max(dt,  stepSize);	  timeout    	non-compiled	[CE]  cannot  find  symbol  StepSize	25	None	add
410	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  StepHandler  handler  =  interfaces.get(dt);  [CE]  cannot  find  symbol  interfaces  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  StepHandler  handler  =  interfaces.get(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(dt,    stepSize);    StepHandler  handler  =  interfaces.get(dt);	  timeout    	non-compiled	[CE]  cannot  find  symbol  interfaces	25	None	add
411	[BUG]  [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(dt,  y0);  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(dt,  y0);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  RungeKuttaStepInterpolator(dt,  y0);	  loop    =    new    RungeKuttaStepInterpolator(dt,    rki);    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	2	None	replace
412	[BUG]  [BUGGY]  loop  =   "Steps: "  +  dt);  [CE]  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Steps: "  +  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Steps: "  +  dt);	  loop    =       "Step   ",    dt);    	non-compiled	[CE]  	112	None	replace
413	[BUG]  [BUGGY]  StepHandler  stepSize  =  Math.max(stepSize,  dt);  [CE]  no  suitable  method  found  for  max(StepHandler,double)  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  StepHandler  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	StepHandler  stepSize  =  Math.max(stepSize,  dt);	          stepSize    =    Math.max(stepSize,    dt);    StepHandler    stepSize    =    Math.max(stepSize,    dt);    	non-compiled	[CE]  no  suitable  method  found  for  max(StepHandler,double)	15	None	replace
414	[BUG]  [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  stepStart);  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  stepStart);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  stepStart);	  loop    =    new    RungeKuttaStepInterpolator(t0,    dt,    stepSize);    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	3	None	replace
415	[BUG]  [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  i);  [CE]  cannot  find  symbol  i  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  i);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  i);	  loop    =    new    RungeKuttaStepInterpolator(t0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol  i	3	None	replace
416	[BUG]  [BUGGY]  loop  =  true;  processStep(t0,  dt,  a,  stepSize);  [CE]  cannot  find  symbol  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  processStep(t0,  dt,  a,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  processStep(t0,  dt,  a,  stepSize);	  loop    =    true;    processStep(t0,    dt,    rki,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	44	None	replace
417	[BUG]  [BUGGY]  loop  =  true;  processStep(t0,  dt,  y1,  stepSize);  [CE]  cannot  find  symbol  y1  [FE]                      AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  processStep(t0,  dt,  y1,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  processStep(t0,  dt,  y1,  stepSize);	  loop    =    true;    processStep(t0,    dt,    rki,    stepSize);    	non-compiled	[CE]  cannot  find  symbol  y1	44	None	replace
418	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize=' "  +  stepSize  + ") ";  [CE]  incompatible  types  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize=' "  +  stepSize  + ") ";  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize=' "  +  stepSize  + ") ";	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ",    stepSize=   "    +    stepSize    +   ")   ";    	non-compiled	[CE]  incompatible  types	34	None	replace
419	[BUG]  [BUGGY]  StepHandler  stepSize  =  Math.abs(stepStart);  [CE]  incompatible  types  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  StepHandler  stepSize  =  Math.abs(stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	StepHandler  stepSize  =  Math.abs(stepStart);	          stepSize    =    Math.abs(stepStart);    StepHandler    stepSize    =    Math.abs(stepStart);    	non-compiled	[CE]  incompatible  types	59	None	replace
420	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  +   ",  nextStep,   "  +  stepSize);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  +   ",  nextStep,   "  +  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  +   ",  nextStep,   "  +  stepSize);	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ",    stepSize,       "    +    stepSize);    	non-compiled	[CE]  	19	None	replace
421	[BUG]  [BUGGY]  loop  =  true;  processStep(prototype,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  processStep(prototype,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  processStep(prototype,  dt,  stepSize);	  loop    =    true;    processStep(rki,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
422	[BUG]  [BUGGY]  loop  =  true;  processStep(r,  dt,  stepSize);  [CE]  cannot  find  symbol  r  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  processStep(r,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  processStep(r,  dt,  stepSize);	  loop    =    true;    processStep(rki,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol  r	41	None	replace
423	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt);  dt  =  Math.abs(stepStart);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt);  dt  =  Math.abs(stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt);  dt  =  Math.abs(stepStart);	          stepSize    =    Math.abs(stepStart);    dt    =    Math.abs(stepStart);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	61	None	replace
424	[BUG]  [BUGGY]          stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  StepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  [CE]  cannot  find  symbol  StepSize  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);  StepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.min(stepSize,        dt);        stepSize    =    Math.min(stepSize,    dt);    StepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);	  	non-compiled	[CE]  cannot  find  symbol  StepSize	45	None	add
425	[BUG]  [BUGGY]  LoopTraversal.traverse(interpolator,  dt,  this);  [CE]  cannot  find  symbol  LoopTraversal  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(interpolator,  dt,  this);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(interpolator,  dt,  this);	  LoopTraversal.traverse(interpolator,    dt,    rki);    	non-compiled	[CE]  cannot  find  symbol  LoopTraversal	86	None	replace
426	[BUG]  [BUGGY]  loop  =  Math.max(dt,  dt.length);  [CE]  double  cannot  be  dereferenced  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  Math.max(dt,  dt.length);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  Math.max(dt,  dt.length);	  loop    =    dt;    	non-compiled	[CE]  double  cannot  be  dereferenced	4	None	replace
427	[BUG]  [BUGGY]  stepSize  =  Math.abs(stepStart);  dt  =  Math.abs(stepSize);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(stepStart);  dt  =  Math.abs(stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(stepStart);  dt  =  Math.abs(stepSize);	          stepSize    =    Math.abs(stepStart);    dt    =    Math.abs(stepStart);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	61	None	replace
428	[BUG]  [BUGGY]  stepSize  =  Math.min(math.abs(dt));  [CE]  cannot  find  symbol  math  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(math.abs(dt));  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(math.abs(dt));	          stepSize    =    Math.abs(stepStart);    stepSize    =    Math.abs(stepStart);    	non-compiled	[CE]  cannot  find  symbol  math	58	None	replace
429	[BUG]  [BUGGY]  loop  =  false;  this.lastStep  =  System.currentTimeMillis();  [CE]  cannot  find  symbol  lastStep  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  this.lastStep  =  System.currentTimeMillis();  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  this.lastStep  =  System.currentTimeMillis();	  loop    =    false;    timeout    =    System.currentTimeMillis();    	non-compiled	[CE]  cannot  find  symbol  lastStep	54	None	replace
430	[BUG]  [BUGGY]  loop  =  false;  this.nextStep  =  System.currentTimeMillis();  [CE]  cannot  find  symbol  nextStep  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  this.nextStep  =  System.currentTimeMillis();  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  this.nextStep  =  System.currentTimeMillis();	  loop    =    false;    timeout    =    System.currentTimeMillis();    	non-compiled	[CE]  cannot  find  symbol  nextStep	54	None	replace
431	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  dt  =  Math.max(stepSize,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  dt  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(dt,  stepSize);  dt  =  Math.max(stepSize,  dt);	          stepSize    =    Math.max(stepSize,    dt);    dt    =    Math.max(stepSize,    dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	16	None	replace
432	[BUG]  [BUGGY]  stepSize  =  Math.max(0,  dt);  StepHandler  rki  =  prototype.getStepHandler();  stepSize  =  Math.max(0,  dt);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt);  StepHandler  rki  =  prototype.getStepHandler();  stepSize  =  Math.max(0,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(0,    dt);    StepHandler  rki  =  prototype.getStepHandler();  stepSize  =  Math.max(0,  dt);	  timeout    	non-compiled	[CE]  cannot  find  symbol	62	None	add
433	[BUG]  [BUGGY]  stepSize  =  Math.max(0,  dt);  StepHandler  rki  =  prototype.getRawStepInterpolator();  stepSize  =  Math.max(0,  dt);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt);  StepHandler  rki  =  prototype.getRawStepInterpolator();  stepSize  =  Math.max(0,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(0,    dt);    StepHandler  rki  =  prototype.getRawStepInterpolator();  stepSize  =  Math.max(0,  dt);	  timeout    	non-compiled	[CE]  cannot  find  symbol	62	None	add
434	[BUG]  [BUGGY]  stepSize  =  Math.max(0,  dt);  StepHandler  rki  =  prototype.getRawTickHandler();  stepSize  =  Math.max(0,  dt);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(0,  dt);  StepHandler  rki  =  prototype.getRawTickHandler();  stepSize  =  Math.max(0,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(0,    dt);    StepHandler  rki  =  prototype.getRawTickHandler();  stepSize  =  Math.max(0,  dt);	  timeout    	non-compiled	[CE]  cannot  find  symbol	62	None	add
435	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(stepSize);  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.abs(stepSize);    stepSize  =  Math.abs(dt);	  timeout    	compilable	  [FE]  AssertionFailedError  	94	2	add
436	[BUG]  [BUGGY]  stepSize  =  Math.abs(stepSize);  stepSize  =  Math.abs(dt);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(stepSize);  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(stepSize);    stepSize  =  Math.abs(dt);	  timeout    	compilable	  [FE]  AssertionFailedError  	94	2	add
437	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  stepSize  =  Math.abs(dt  /  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.abs(dt    +    stepSize);    stepSize  =  Math.abs(dt  /  stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	50	2	add
438	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  stepSize  =  Math.abs(dt  /  stepSize);  [FE]  AssertionFailedError  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  stepSize  =  Math.abs(dt  /  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.abs(dt    +    stepSize);    stepSize  =  Math.abs(dt  /  stepSize);	  timeout    	compilable	  [FE]  AssertionFailedError  	50	2	add
439	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(1,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.max(1,  dt);	  stepSize    =    Math.max(0,    dt);    timeout    	compilable	timeout	63	1	replace
440	[BUG]  [BUGGY]  stepSize  =  Math.max(1,  dt);  timeout  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(1,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(1,  dt);	  stepSize    =    Math.max(0,    dt);    timeout    	compilable	timeout	63	1	replace
441	[BUG]  [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  stepSize,  y);  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  stepSize,  y);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  stepSize,  y);	  loop    =    new    RungeKuttaStepInterpolator(t0,    dt,    stepSize);    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	3	None	replace
442	[BUG]  [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  y.length);  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  y.length);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  y.length);	  loop    =    new    RungeKuttaStepInterpolator(t0,    dt,    stepSize);    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	3	None	replace
443	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  phaseSize  =  Math.max(stepSize,  dt);  [CE]  cannot  find  symbol  phaseSize  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  phaseSize  =  Math.max(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(stepStart,  dt);  phaseSize  =  Math.max(stepSize,  dt);	          stepSize    =    Math.max(stepSize,    dt);    phaseSize    =    Math.max(stepSize,    dt);    	non-compiled	[CE]  cannot  find  symbol  phaseSize	17	None	replace
444	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepSize,  dt  +  1);  stepSize  =  Math.max(stepSize,  dt  +  2);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize    =    Math.max(stepSize,    dt    +    1);    stepSize  =  Math.max(stepSize,  dt  +  2);	  timeout    	compilable	  [FE]  AssertionFailedError  	92	2	add
445	[BUG]  [BUGGY]  stepSize  =  Math.max(stepSize,  dt  +  1);  stepSize  =  Math.max(stepSize,  dt  +  2);  [FE]  AssertionFailedError  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepSize,  dt  +  1);  stepSize  =  Math.max(stepSize,  dt  +  2);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(stepSize,    dt    +    1);    stepSize  =  Math.max(stepSize,  dt  +  2);	  timeout    	compilable	  [FE]  AssertionFailedError  	92	2	add
446	[BUG]  [BUGGY]  stepSize  =  Math.abs(stepStart);  StepHandler  handler  =  getStepInterpolator(interpolator);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(stepStart);  StepHandler  handler  =  getStepInterpolator(interpolator);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(stepStart);  StepHandler  handler  =  getStepInterpolator(interpolator);	          stepSize    =    Math.abs(dt);    StepHandler    handler    =    getStepInterpolator(interpolator);    	non-compiled	[CE]  cannot  find  symbol	109	None	replace
447	[BUG]  [BUGGY]  loop  =  true;  processStep(t0,  dt,  nextStep,  stepSize);  [CE]  cannot  find  symbol  nextStep  [FE]                    AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  processStep(t0,  dt,  nextStep,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  processStep(t0,  dt,  nextStep,  stepSize);	  loop    =    true;    processStep(t0,    dt,    rki,    stepSize);    	non-compiled	[CE]  cannot  find  symbol  nextStep	44	None	replace
448	[BUG]  [BUGGY]  timeout  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  dt  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.min(dt,  dt  +  1);	  stepSize    =    Math.max(stepSize,    dt    +    1);    timeout    	compilable	timeout	93	1	replace
449	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  dt  +  1);  timeout  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  dt  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(dt,  dt  +  1);	  stepSize    =    Math.max(stepSize,    dt    +    1);    timeout    	compilable	timeout	93	1	replace
450	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	                stepSize        =        Math.abs(stepStart);        stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);	  	compilable	  [FE]  AssertionFailedError  	82	2	add
451	[BUG]  [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(stepStart);        stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);	  	compilable	  [FE]  AssertionFailedError  	82	2	add
452	[BUG]  [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.Ab(dt);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.Ab(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(stepStart);        stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(stepStart);  stepSize  =  Math.Ab(dt);	  	non-compiled	[CE]  cannot  find  symbol	82	None	add
453	[BUG]  [BUGGY]  StepHandler  stepSize  =  Math.max(stepSize,  dt  +  1);  [CE]  no  suitable  method  found  for  max(StepHandler,double)  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  StepHandler  stepSize  =  Math.max(stepSize,  dt  +  1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	StepHandler  stepSize  =  Math.max(stepSize,  dt  +  1);	          stepSize    =    Math.max(stepSize,    dt);    StepHandler    stepSize    =    Math.max(stepSize,    dt);    	non-compiled	[CE]  no  suitable  method  found  for  max(StepHandler,double)	15	None	replace
454	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ",  y);  [CE]  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ",  y);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ",  y);	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ")   ",    a);    	non-compiled	[CE]  	111	None	replace
455	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  y1);  [CE]  cannot  find  symbol  y1  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  y1);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(dt,  y1);	  stepSize    =    Math.min(dt,    stepStart);    timeout    	non-compiled	[CE]  cannot  find  symbol  y1	24	None	replace
456	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  *  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.abs(dt  *  stepSize);	  stepSize    =    Math.abs(dt    +    stepSize);    timeout    	compilable	timeout	51	1	replace
457	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  *  stepSize);  timeout  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt  *  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt  *  stepSize);	  stepSize    =    Math.abs(dt    +    stepSize);    timeout    	compilable	timeout	51	1	replace
458	[BUG]  [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);  phaseSize  =  Math.abs(stepStart);  [CE]  cannot  find  symbol  phaseSize  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);  phaseSize  =  Math.abs(stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(stepStart);        stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  phaseSize  =  Math.abs(stepStart);	  	non-compiled	[CE]  cannot  find  symbol  phaseSize	57	None	add
459	[BUG]  [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepEnd);  [CE]  cannot  find  symbol  stepEnd  [FE]      AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]          stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepEnd);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	                stepSize        =        Math.abs(stepStart);        stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepEnd);	  	non-compiled	[CE]  cannot  find  symbol  stepEnd	57	None	add
460	[BUG]  [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize,  nextStep);  [CE]  cannot  find  symbol  nextStep  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize,  nextStep);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  processStep(t0,  dt,  stepSize,  nextStep);	  loop    =    true;    processStep(t0,    dt,    stepSize,    yTmp);    	non-compiled	[CE]  cannot  find  symbol  nextStep	99	None	replace
461	[BUG]  [BUGGY]  stepSize  =  t0.doubleValue();  processStep(t0,  dt,  stepSize,  yTmp);  [CE]  double  cannot  be  dereferenced  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  t0.doubleValue();  processStep(t0,  dt,  stepSize,  yTmp);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  t0.doubleValue();  processStep(t0,  dt,  stepSize,  yTmp);	  loop    =    true;    processStep(t0,    dt,    stepSize,    yTmp);    	non-compiled	[CE]  double  cannot  be  dereferenced	99	None	replace
462	[BUG]  [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize,  y1);  [CE]  cannot  find  symbol  y1  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize,  y1);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  processStep(t0,  dt,  stepSize,  y1);	  loop    =    true;    processStep(t0,    dt,    stepSize,    rki);    	non-compiled	[CE]  cannot  find  symbol  y1	75	None	replace
463	[BUG]  [BUGGY]  Looper  loop  =  interfacesManager.getLooper();  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  loop  =  interfacesManager.getLooper();  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  loop  =  interfacesManager.getLooper();	  Looper    loop    =    null;    	non-compiled	[CE]  cannot  find  symbol	65	None	replace
464	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  stepSize,  dt);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  stepSize,  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  y0,  stepSize,  dt);	  loop    =    new    BasicStepInterpolator(t0,    y0,    dt,    k);    	non-compiled	[CE]  cannot  find  symbol	72	None	replace
465	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  phaseSize  =  Math.max(dt,  stepSize);  [CE]  cannot  find  symbol  phaseSize  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  phaseSize  =  Math.max(dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(dt,    stepSize);    phaseSize  =  Math.max(dt,  stepSize);	  timeout    	non-compiled	[CE]  cannot  find  symbol  phaseSize	25	None	add
466	[BUG]  [BUGGY]  float  stepSize  =  Math.min(stepSize,  dt);  [CE]  possible  loss  of  precision  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  float  stepSize  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	float  stepSize  =  Math.min(stepSize,  dt);	          stepSize    =    Math.min(stepSize,    dt);    int    stepSize    =    Math.min(stepSize,    dt);    	non-compiled	[CE]  possible  loss  of  precision	48	None	replace
467	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  StepHandler  handler  =  interface.getStepHandler();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  StepHandler  handler  =  interface.getStepHandler();  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(dt,    stepStart);    StepHandler  handler  =  interface.getStepHandler();	  timeout    	non-compiled	[CE]  illegal  start  of  expression	23	None	add
468	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  StepHandler  handler  =  interface.getStepHandler(dt);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  StepHandler  handler  =  interface.getStepHandler(dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(dt,    stepStart);    StepHandler  handler  =  interface.getStepHandler(dt);	  timeout    	non-compiled	[CE]  illegal  start  of  expression	23	None	add
469	[BUG]  [BUGGY]  if(dt  <  =  Math.abs(stepSize))  {  loop  =  true;  }  else  {  throw  new  RungeKuttaStepInterpolatorException( " ");  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  if(dt  <  =  Math.abs(stepSize))  {  loop  =  true;  }  else  {  throw  new  RungeKuttaStepInterpolatorException( " ");  }  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	if(dt  <  =  Math.abs(stepSize))  {  loop  =  true;  }  else  {  throw  new  RungeKuttaStepInterpolatorException( " ");  }	  loop    =    true;    loop    =    true;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
470	[BUG]  [BUGGY]  if(dt  <  =  Math.abs(stepSize))  {  loop  =  true;  }  else  {  stepSize  =  dt;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  if(dt  <  =  Math.abs(stepSize))  {  loop  =  true;  }  else  {  stepSize  =  dt;  }  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	if(dt  <  =  Math.abs(stepSize))  {  loop  =  true;  }  else  {  stepSize  =  dt;  }	  loop    =    true;    loop    =    true;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
471	[BUG]  [BUGGY]  if(dt  <  =  Math.abs(stepSize))  {  loop  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  if(dt  <  =  Math.abs(stepSize))  {  loop  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	if(dt  <  =  Math.abs(stepSize))  {  loop  =  true;  }  else  {  throw  new  IllegalArgumentException( " ");  }	  loop    =    true;    loop    =    true;    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
472	[BUG]  [BUGGY]  loop  =  true;  processStep(interpolator,  dt,  stepSize,  nextStep);  [CE]  cannot  find  symbol  nextStep  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  processStep(interpolator,  dt,  stepSize,  nextStep);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  processStep(interpolator,  dt,  stepSize,  nextStep);	  loop    =    true;    processStep(interpolator,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol  nextStep	73	None	replace
473	[BUG]  [BUGGY]  LoopTraversal.traverse(interpolator,  a,  dt);  [CE]  cannot  find  symbol  LoopTraversal  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(interpolator,  a,  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(interpolator,  a,  dt);	  LoopTraversal.traverse(interpolator,   "Step   ",    dt);    	non-compiled	[CE]  cannot  find  symbol  LoopTraversal	87	None	replace
474	[BUG]  [BUGGY]  loop  =  false;  this.lastStep  =  System.currentTimeMillis()  -  dt;  [CE]  cannot  find  symbol  lastStep  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  this.lastStep  =  System.currentTimeMillis()  -  dt;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  this.lastStep  =  System.currentTimeMillis()  -  dt;	  loop    =    false;    timeout    =    System.currentTimeMillis()    -    dt;    	non-compiled	[CE]  cannot  find  symbol  lastStep	55	None	replace
475	[BUG]  [BUGGY]  stepSize  =  Math.min(mapping,  dt);  StepSize  =  Math.min(stepSize,  dt);  [CE]  cannot  find  symbol  mapping  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(mapping,  dt);  StepSize  =  Math.min(stepSize,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(mapping,  dt);  StepSize  =  Math.min(stepSize,  dt);	          stepSize    =    Math.min(stepSize,    dt);    StepSize    =    Math.min(stepSize,    dt);    	non-compiled	[CE]  cannot  find  symbol  mapping	76	None	replace
476	[BUG]  [BUGGY]  stepSize  =  Math.min(mapping,  dt);  [CE]  cannot  find  symbol  mapping  [FE]    AssertionFailedError    [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(mapping,  dt);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(mapping,  dt);	          stepSize    =    Math.max(stepSize,    dt);    stepSize    =    Math.max(stepSize,    dt);    	non-compiled	[CE]  cannot  find  symbol  mapping	14	None	replace
477	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt);  StepHandler  handler  =  getStepInterpolator(t0,  dt,  stepEnd);  [CE]  cannot  find  symbol  stepEnd  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.abs(dt);  StepHandler  handler  =  getStepInterpolator(t0,  dt,  stepEnd);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt);  StepHandler  handler  =  getStepInterpolator(t0,  dt,  stepEnd);	          stepSize    =    Math.abs(dt);    StepHandler    handler    =    getStepInterpolator(t0,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol  stepEnd	107	None	replace
478	[BUG]  [BUGGY]  loop  =   "Steps: ",  dt);  [CE]  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Steps: ",  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Steps: ",  dt);	  loop    =       "Steps:   ";    	non-compiled	[CE]  	37	None	replace
479	[BUG]  [BUGGY]  loop  =   "Steps: "  +  stepSize;  [CE]  incompatible  types  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Steps: "  +  stepSize;  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Steps: "  +  stepSize;	  loop    =       "Steps:   ";    	non-compiled	[CE]  incompatible  types	37	None	replace
480	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  +  stepSize  +  1) ";  [CE]  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  +  stepSize  +  1) ";  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  +  stepSize  +  1) ";	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +    stepSize    +   ")   ";    	non-compiled	[CE]  	28	None	replace
481	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  dt  =  Math.min(dt,  stepSize);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  dt  =  Math.min(dt,  stepSize);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(dt,    stepSize);    dt  =  Math.min(dt,  stepSize);	  timeout    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	21	None	add
482	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  StepHandler  handler  =  interface.getStepHandler();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  StepHandler  handler  =  interface.getStepHandler();  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(dt,    stepSize);    StepHandler  handler  =  interface.getStepHandler();	  timeout    	non-compiled	[CE]  illegal  start  of  expression	21	None	add
483	[BUG]  [BUGGY]  loop  =  true;  processStep(y0,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  true;  processStep(y0,  dt,  stepSize);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;  processStep(y0,  dt,  stepSize);	  loop    =    true;    processStep(rki,    dt,    stepSize);    	non-compiled	[CE]  cannot  find  symbol	41	None	replace
484	[BUG]  [BUGGY]  loop  =  false;  dt  =  Math.max(stepSize,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  dt  =  Math.max(stepSize,  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  dt  =  Math.max(stepSize,  dt);	  loop    =    false;    dt    =    Math.max(dt,    dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	104	None	replace
485	[BUG]  [BUGGY]  loop  =  false;  dt  =  Math.max(y0,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =  false;  dt  =  Math.max(y0,  dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  dt  =  Math.max(y0,  dt);	  loop    =    false;    dt    =    Math.max(dt,    dt);    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	104	None	replace
486	[BUG]  [BUGGY]  LoopTraversal.traverse(this,  dt,  new  RungeKuttaStepInterpolator());  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(this,  dt,  new  RungeKuttaStepInterpolator());  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(this,  dt,  new  RungeKuttaStepInterpolator());	  LoopTraversal.traverse(interpolator,    dt,    new    RungeKuttaStepInterpolator());    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	85	None	replace
487	[BUG]  [BUGGY]  LoopTraversal.traverse(compiler,  dt,  new  RungeKuttaStepInterpolator());  [CE]  cannot  find  symbol  compiler  [FE]              AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  LoopTraversal.traverse(compiler,  dt,  new  RungeKuttaStepInterpolator());  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(compiler,  dt,  new  RungeKuttaStepInterpolator());	  LoopTraversal.traverse(interpolator,    dt,    new    RungeKuttaStepInterpolator());    	non-compiled	[CE]  cannot  find  symbol  compiler	85	None	replace
488	[BUG]  [BUGGY]  Loop  loop  =   "Step  Interpolator.evaluateStep( "  +  dt  + ",   "  +  stepSize  +   ") ";  [CE]  cannot  find  symbol  [FE]            AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Loop  loop  =   "Step  Interpolator.evaluateStep( "  +  dt  + ",   "  +  stepSize  +   ") ";  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Loop  loop  =   "Step  Interpolator.evaluateStep( "  +  dt  + ",   "  +  stepSize  +   ") ";	  Loop    loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ",       "    +    stepSize    +       ")   ";    	non-compiled	[CE]  cannot  find  symbol	97	None	replace
489	[BUG]  [BUGGY]  Looper  l  =  new  Looper(dt);  [CE]  cannot  find  symbol  [FE]                AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  Looper  l  =  new  Looper(dt);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  l  =  new  Looper(dt);	  Looper    l    =    true;    	non-compiled	[CE]  cannot  find  symbol	100	None	replace
490	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  StepHandler  handler  =  interface.getStepHandler();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  StepHandler  handler  =  interface.getStepHandler();  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.min(stepStart,    dt);    StepHandler  handler  =  interface.getStepHandler();	  timeout    	non-compiled	[CE]  illegal  start  of  expression	78	None	add
491	[BUG]  [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  StepHandler  handler  =  interface.getStepHandler();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  StepHandler  handler  =  interface.getStepHandler();  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(stepStart,    dt);    StepHandler  handler  =  interface.getStepHandler();	  timeout    	non-compiled	[CE]  illegal  start  of  expression	90	None	add
492	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  StepHandler  handler  =  interface.getStepHandler();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  StepHandler  handler  =  interface.getStepHandler();  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(dt,    stepStart);    StepHandler  handler  =  interface.getStepHandler();	  timeout    	non-compiled	[CE]  illegal  start  of  expression	31	None	add
493	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  phaseSize  =  Math.max(dt,  stepStart);  [CE]  cannot  find  symbol  phaseSize  [FE]          AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  phaseSize  =  Math.max(dt,  stepStart);  [BUGGY]      loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize    =    Math.max(dt,    stepStart);    phaseSize  =  Math.max(dt,  stepStart);	  timeout    	non-compiled	[CE]  cannot  find  symbol  phaseSize	31	None	add
494	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize, "  +  stepStart);  [CE]  [FE]                  AssertionFailedError      [CONTEXT]        interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {            [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize, "  +  stepStart);  [BUGGY]      }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize, "  +  stepStart);	  loop    =       "Step    interpolator.evaluateStep(   "    +    dt    +   ",    stepSize,       "    +    stepSize);    	non-compiled	[CE]  	19	None	replace
