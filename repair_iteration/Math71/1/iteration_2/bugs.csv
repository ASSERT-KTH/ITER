bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  loop  =  new  RungeKuttaStepInterpolator();  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]          AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  new  RungeKuttaStepInterpolator();  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  RungeKuttaStepInterpolator();	  loop    =   "   ";    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	9	None	replace
2	[BUG]  [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(dt,  rki);  [CE]  cannot  find  symbol  rki  [FE]            AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(dt,  rki);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  RungeKuttaStepInterpolator(dt,  rki);	  loop    =   "   ";    	non-compiled	[CE]  cannot  find  symbol  rki	9	None	replace
3	[BUG]  [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  stepSize);  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]              AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  stepSize);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  RungeKuttaStepInterpolator(t0,  dt,  stepSize);	  loop    =   "   ";    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	9	None	replace
4	[BUG]  [BUGGY]  loop  =  dt;  [CE]  incompatible  types  [FE]                AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  dt;  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  dt;	  loop    =   "   ";    	non-compiled	[CE]  incompatible  types	9	None	replace
5	[BUG]  [BUGGY]  dt  =  manager.getEventTime()  *  stepSize;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]            AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  dt  =  manager.getEventTime()  *  stepSize;  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  manager.getEventTime()  *  stepSize;	      dt    =    manager.getEventTime()    +    stepSize;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	3	None	replace
6	[BUG]  [BUGGY]  dt  =  manager.getEventTime()  +  stepEnd;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  dt  =  manager.getEventTime()  +  stepEnd;  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  manager.getEventTime()  +  stepEnd;	      dt    =    manager.getEventTime()    +    stepSize;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	3	None	replace
7	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	        stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
8	[BUG]  [BUGGY]      stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.abs(dt);    stepSize  =  Math.abs(dt);	  	compilable	  [FE]  AssertionFailedError  	5	2	add
9	[BUG]  [BUGGY]      stepSize  =  Math.abs(dt);  StepHandler  stepSize  =  Math.abs(dt);  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(dt);  StepHandler  stepSize  =  Math.abs(dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.abs(dt);    StepHandler  stepSize  =  Math.abs(dt);	  	non-compiled	[CE]  incompatible  types	5	None	add
10	[BUG]  [BUGGY]      stepSize  =  Math.abs(dt);  int  stepSize  =  Math.abs(dt);  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(dt);  int  stepSize  =  Math.abs(dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.abs(dt);    int  stepSize  =  Math.abs(dt);	  	non-compiled	[CE]  possible  loss  of  precision	5	None	add
11	[BUG]  [BUGGY]      stepSize  =  Math.abs(dt);  dt  =  Math.abs(dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]          AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(dt);  dt  =  Math.abs(dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.abs(dt);    dt  =  Math.abs(dt);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	5	None	add
12	[BUG]  [BUGGY]  dt  =  manager.getEventTime()  *  stepStart;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]            AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  dt  =  manager.getEventTime()  *  stepStart;  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  manager.getEventTime()  *  stepStart;	      dt    =    manager.getEventTime()    +    stepStart;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	15	None	replace
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	        stepSize    =    Math.max(stepSize,    dt);    stepSize  =  Math.max(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	13	2	add
14	[BUG]  [BUGGY]      stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.max(stepSize,    dt);    stepSize  =  Math.max(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	13	2	add
15	[BUG]  [BUGGY]      stepSize  =  Math.max(stepSize,  dt);  StepHandler  stepSize  =  Math.max(stepSize,  dt);  [CE]  no  suitable  method  found  for  max(StepHandler,double)  [FE]      AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.max(stepSize,  dt);  StepHandler  stepSize  =  Math.max(stepSize,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.max(stepSize,    dt);    StepHandler  stepSize  =  Math.max(stepSize,  dt);	  	non-compiled	[CE]  no  suitable  method  found  for  max(StepHandler,double)	13	None	add
16	[BUG]  [BUGGY]      stepSize  =  Math.max(stepSize,  dt);  dt  =  Math.max(stepSize,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.max(stepSize,  dt);  dt  =  Math.max(stepSize,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.max(stepSize,    dt);    dt  =  Math.max(stepSize,  dt);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	13	None	add
17	[BUG]  [BUGGY]      stepSize  =  Math.max(stepSize,  dt);  phaseSize  =  Math.max(stepSize,  dt);  [CE]  cannot  find  symbol  phaseSize  [FE]          AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.max(stepSize,  dt);  phaseSize  =  Math.max(stepSize,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.max(stepSize,    dt);    phaseSize  =  Math.max(stepSize,  dt);	  	non-compiled	[CE]  cannot  find  symbol  phaseSize	13	None	add
18	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize: "  +  stepSize);  [CE]  [FE]            AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize: "  +  stepSize);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize: "  +  stepSize);	  loop    =   "Step    interpolator.evaluateStep(   "    +    dt    +   ",   "    +    stepSize);    	non-compiled	[CE]  	19	None	replace
19	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize,   "  +  stepSize);  [CE]  [FE]              AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize,   "  +  stepSize);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize,   "  +  stepSize);	  loop    =   "Step    interpolator.evaluateStep(   "    +    dt    +   ",   "    +    stepSize);    	non-compiled	[CE]  	19	None	replace
20	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize= "  +  stepSize);  [CE]  [FE]                AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize= "  +  stepSize);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize= "  +  stepSize);	  loop    =   "Step    interpolator.evaluateStep(   "    +    dt    +   ",   "    +    stepSize);    	non-compiled	[CE]  	19	None	replace
21	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.min(dt,  stepSize);	      stepSize    =    Math.min(stepSize,    dt);    	compilable	timeout	21	1	replace
22	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  timeout  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.min(dt,  stepSize);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(dt,  stepSize);	      stepSize    =    Math.min(stepSize,    dt);    	compilable	timeout	21	1	replace
23	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.min(dt,  stepStart);	      stepSize    =    Math.min(stepSize,    dt);    	compilable	timeout	21	1	replace
24	[BUG]  [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  timeout  [FE]      AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.min(dt,  stepStart);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(dt,  stepStart);	      stepSize    =    Math.min(stepSize,    dt);    	compilable	timeout	21	1	replace
25	[BUG]  [BUGGY]  timeout  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.max(dt,  stepSize);	      stepSize    =    Math.min(stepSize,    dt);    	compilable	timeout	21	1	replace
26	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  timeout  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.max(dt,  stepSize);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(dt,  stepSize);	      stepSize    =    Math.min(stepSize,    dt);    	compilable	timeout	21	1	replace
27	[BUG]  [BUGGY]  Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ";  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ";  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ";	  loop    =   "Step    interpolator.evaluateStep(   "    +    dt    +   ")   ";    	non-compiled	[CE]  cannot  find  symbol	18	None	replace
28	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  +  stepSize  + ") ";  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  +  stepSize  + ") ";  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  +  stepSize  + ") ";	  loop    =   "Step    interpolator.evaluateStep(   "    +    dt    +   ")   ";    	non-compiled	[CE]  incompatible  types	18	None	replace
29	[BUG]  [BUGGY]  dt  =  manager.getEventTime()  -  1;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  dt  =  manager.getEventTime()  -  1;  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  manager.getEventTime()  -  1;	      dt    =    manager.getEventTime()    -    stepStart;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	1	None	replace
30	[BUG]  [BUGGY]  dt  =  manager.getEventTime()  -  this;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]          AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  dt  =  manager.getEventTime()  -  this;  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  manager.getEventTime()  -  this;	      dt    =    manager.getEventTime()    -    stepStart;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	1	None	replace
31	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.max(dt,  stepStart);	      stepSize    =    Math.max(stepSize,    dt);    	compilable	timeout	14	1	replace
32	[BUG]  [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  timeout  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.max(dt,  stepStart);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(dt,  stepStart);	      stepSize    =    Math.max(stepSize,    dt);    	compilable	timeout	14	1	replace
33	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",   "  +  stepSize  +   ") ";  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",   "  +  stepSize  +   ") ";  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",   "  +  stepSize  +   ") ";	  loop    =   "Step    interpolator.evaluateStep(   "    +    dt    +   ",   "    +    dt    +   ")   ";    	non-compiled	[CE]  incompatible  types	17	None	replace
34	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize= "  +  stepSize  + ") ";  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize= "  +  stepSize  + ") ";  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",  stepSize= "  +  stepSize  + ") ";	  loop    =   "Step    interpolator.evaluateStep(   "    +    dt    +   ",   "    +    dt    +   ")   ";    	non-compiled	[CE]  incompatible  types	17	None	replace
35	[BUG]  [BUGGY]  Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",   "  +  dt  + ") ";  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",   "  +  dt  + ") ";  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",   "  +  dt  + ") ";	  loop    =   "Step    interpolator.evaluateStep(   "    +    dt    +   ",   "    +    dt    +   ")   ";    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
36	[BUG]  [BUGGY]  loop  =   "Step "  +  dt;  [CE]  incompatible  types  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =   "Step "  +  dt;  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step "  +  dt;	  loop    =   "Step   ";    	non-compiled	[CE]  incompatible  types	16	None	replace
37	[BUG]  [BUGGY]  loop  =   "Steps: ";  [CE]  incompatible  types  [FE]          AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =   "Steps: ";  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Steps: ";	  loop    =   "Step   ";    	non-compiled	[CE]  incompatible  types	16	None	replace
38	[BUG]  [BUGGY]  loop  =   "Step: ";  [CE]  incompatible  types  [FE]            AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =   "Step: ";  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step: ";	  loop    =   "Step   ";    	non-compiled	[CE]  incompatible  types	16	None	replace
39	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  true;  loop  =  true;  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	loop    =    true;    loop  =  true;	  timeout    	compilable	  [FE]  AssertionFailedError  	7	2	add
40	[BUG]  [BUGGY]  loop  =  true;  loop  =  true;  [FE]  AssertionFailedError  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  true;  loop  =  true;  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop    =    true;    loop  =  true;	  timeout    	compilable	  [FE]  AssertionFailedError  	7	2	add
41	[BUG]  [BUGGY]  loop  =  true;  processStep(rki,  dt,  stepSize);  [CE]  cannot  find  symbol  rki  [FE]          AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  true;  processStep(rki,  dt,  stepSize);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop    =    true;    processStep(rki,  dt,  stepSize);	  timeout    	non-compiled	[CE]  cannot  find  symbol  rki	7	None	add
42	[BUG]  [BUGGY]  loop  =  true;  processStep(rki,  t0,  dt,  stepSize);  [CE]  cannot  find  symbol  rki  [FE]            AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  true;  processStep(rki,  t0,  dt,  stepSize);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop    =    true;    processStep(rki,  t0,  dt,  stepSize);	  timeout    	non-compiled	[CE]  cannot  find  symbol  rki	7	None	add
43	[BUG]  [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop    =    true;    processStep(t0,  dt,  stepSize);	  timeout    	non-compiled	[CE]  cannot  find  symbol	7	None	add
44	[BUG]  [BUGGY]  loop  =  true;  processStep(t0,  dt,  rki,  stepSize);  [CE]  cannot  find  symbol  rki  [FE]                AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  true;  processStep(t0,  dt,  rki,  stepSize);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop    =    true;    processStep(t0,  dt,  rki,  stepSize);	  timeout    	non-compiled	[CE]  cannot  find  symbol  rki	7	None	add
45	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	        stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	20	2	add
46	[BUG]  [BUGGY]      stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.min(stepSize,  dt);  stepSize  =  Math.min(stepSize,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.min(stepSize,    dt);    stepSize  =  Math.min(stepSize,  dt);	  	compilable	  [FE]  AssertionFailedError  	20	2	add
47	[BUG]  [BUGGY]      stepSize  =  Math.min(stepSize,  dt);  StepHandler  stepSize  =  Math.min(stepSize,  dt);  [CE]  no  suitable  method  found  for  min(StepHandler,double)  [FE]      AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.min(stepSize,  dt);  StepHandler  stepSize  =  Math.min(stepSize,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.min(stepSize,    dt);    StepHandler  stepSize  =  Math.min(stepSize,  dt);	  	non-compiled	[CE]  no  suitable  method  found  for  min(StepHandler,double)	20	None	add
48	[BUG]  [BUGGY]      stepSize  =  Math.min(stepSize,  dt);  int  stepSize  =  Math.min(stepSize,  dt);  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.min(stepSize,  dt);  int  stepSize  =  Math.min(stepSize,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.min(stepSize,    dt);    int  stepSize  =  Math.min(stepSize,  dt);	  	non-compiled	[CE]  possible  loss  of  precision	20	None	add
49	[BUG]  [BUGGY]      stepSize  =  Math.min(stepSize,  dt);  dt  =  Math.min(stepSize,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]          AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.min(stepSize,  dt);  dt  =  Math.min(stepSize,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.min(stepSize,    dt);    dt  =  Math.min(stepSize,  dt);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	20	None	add
50	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.abs(dt  +  stepSize);	      stepSize    =    Math.abs(dt);    	compilable	timeout	6	1	replace
51	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  timeout  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.abs(dt  +  stepSize);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt  +  stepSize);	      stepSize    =    Math.abs(dt);    	compilable	timeout	6	1	replace
52	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.abs(dt  -  stepSize);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.abs(dt  -  stepSize);	      stepSize    =    Math.abs(dt);    	compilable	timeout	6	1	replace
53	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  -  stepSize);  timeout  [FE]      AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.abs(dt  -  stepSize);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt  -  stepSize);	      stepSize    =    Math.abs(dt);    	compilable	timeout	6	1	replace
54	[BUG]  [BUGGY]  loop  =  false;  timeout  =  System.currentTimeMillis();  [CE]  cannot  find  symbol  timeout  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  false;  timeout  =  System.currentTimeMillis();  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  timeout  =  System.currentTimeMillis();	  loop    =    true;    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	8	None	replace
55	[BUG]  [BUGGY]  loop  =  false;  timeout  =  System.currentTimeMillis()  -  dt;  [CE]  cannot  find  symbol  timeout  [FE]          AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  false;  timeout  =  System.currentTimeMillis()  -  dt;  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  timeout  =  System.currentTimeMillis()  -  dt;	  loop    =    true;    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	8	None	replace
56	[BUG]  [BUGGY]  loop  =  false;  timeout  =  System.currentTimeMillis()  +  stepSize;  [CE]  cannot  find  symbol  timeout  [FE]            AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  false;  timeout  =  System.currentTimeMillis()  +  stepSize;  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  timeout  =  System.currentTimeMillis()  +  stepSize;	  loop    =    true;    timeout    	non-compiled	[CE]  cannot  find  symbol  timeout	8	None	replace
57	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	        stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);	  	compilable	  [FE]  AssertionFailedError  	11	2	add
58	[BUG]  [BUGGY]      stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(stepStart);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(stepStart);	  	compilable	  [FE]  AssertionFailedError  	11	2	add
59	[BUG]  [BUGGY]      stepSize  =  Math.abs(stepStart);  StepHandler  stepSize  =  Math.abs(stepStart);  [CE]  incompatible  types  [FE]      AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(stepStart);  StepHandler  stepSize  =  Math.abs(stepStart);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.abs(stepStart);    StepHandler  stepSize  =  Math.abs(stepStart);	  	non-compiled	[CE]  incompatible  types	11	None	add
60	[BUG]  [BUGGY]      stepSize  =  Math.abs(stepStart);  int  stepSize  =  Math.abs(stepStart);  [CE]  possible  loss  of  precision  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(stepStart);  int  stepSize  =  Math.abs(stepStart);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.abs(stepStart);    int  stepSize  =  Math.abs(stepStart);	  	non-compiled	[CE]  possible  loss  of  precision	11	None	add
61	[BUG]  [BUGGY]      stepSize  =  Math.abs(stepStart);  dt  =  Math.abs(stepStart);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]          AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(stepStart);  dt  =  Math.abs(stepStart);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.abs(stepStart);    dt  =  Math.abs(stepStart);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	11	None	add
62	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.max(0,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.max(0,  dt);	      stepSize    =    Math.abs(stepStart);    	compilable	timeout	12	1	replace
63	[BUG]  [BUGGY]  stepSize  =  Math.max(0,  dt);  timeout  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.max(0,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(0,  dt);	      stepSize    =    Math.abs(stepStart);    	compilable	timeout	12	1	replace
64	[BUG]  [BUGGY]  Looper  loop  =  false;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  Looper  loop  =  false;  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  loop  =  false;	  Looper    loop    =    true;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
65	[BUG]  [BUGGY]  Looper  loop  =  null;  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  Looper  loop  =  null;  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  loop  =  null;	  Looper    loop    =    true;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
66	[BUG]  [BUGGY]  Looper  loop  =  new  Looper();  [CE]  cannot  find  symbol  [FE]                AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  Looper  loop  =  new  Looper();  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  loop  =  new  Looper();	  Looper    loop    =    true;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
67	[BUG]  [BUGGY]  Looper  loop  =  new  Looper(dt,  true);  [CE]  cannot  find  symbol  [FE]                  AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  Looper  loop  =  new  Looper(dt,  true);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  loop  =  new  Looper(dt,  true);	  Looper    loop    =    true;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
68	[BUG]  [BUGGY]      stepSize  =  Math.max(stepSize,  dt);  StepSize  =  Math.max(stepSize,  dt);  [CE]  cannot  find  symbol  StepSize  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.max(stepSize,  dt);  StepSize  =  Math.max(stepSize,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.max(stepSize,    dt);    StepSize  =  Math.max(stepSize,  dt);	  	non-compiled	[CE]  cannot  find  symbol  StepSize	13	None	add
69	[BUG]  [BUGGY]      stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt));  [CE]  ';'  expected  [FE]      AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.max(stepSize,  dt);  stepSize  =  Math.max(stepSize,  dt));  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.max(stepSize,    dt);    stepSize  =  Math.max(stepSize,  dt));	  	non-compiled	[CE]  ';'  expected	13	None	add
70	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  stepSize);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  stepSize);	  loop    =   "   ";    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
71	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  stepSize);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  dt,  stepSize);	  loop    =   "   ";    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
72	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  k);  [CE]  cannot  find  symbol  [FE]              AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  k);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  y0,  dt,  k);	  loop    =   "   ";    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
73	[BUG]  [BUGGY]  loop  =  true;  processStep(interpolator,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  true;  processStep(interpolator,  dt,  stepSize);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop    =    true;    processStep(interpolator,  dt,  stepSize);	  timeout    	non-compiled	[CE]  cannot  find  symbol	7	None	add
74	[BUG]  [BUGGY]  loop  =  true;  processStep(manager,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  true;  processStep(manager,  dt,  stepSize);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop    =    true;    processStep(manager,  dt,  stepSize);	  timeout    	non-compiled	[CE]  cannot  find  symbol	7	None	add
75	[BUG]  [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize,  rki);  [CE]  cannot  find  symbol  rki  [FE]            AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize,  rki);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop    =    true;    processStep(t0,  dt,  stepSize,  rki);	  timeout    	non-compiled	[CE]  cannot  find  symbol  rki	7	None	add
76	[BUG]  [BUGGY]      stepSize  =  Math.min(stepSize,  dt);  StepSize  =  Math.min(stepSize,  dt);  [CE]  cannot  find  symbol  StepSize  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.min(stepSize,  dt);  StepSize  =  Math.min(stepSize,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.min(stepSize,    dt);    StepSize  =  Math.min(stepSize,  dt);	  	non-compiled	[CE]  cannot  find  symbol  StepSize	20	None	add
77	[BUG]  [BUGGY]      stepSize  =  Math.min(stepSize,  dt);  StepHandler  handler  =  prototype.getInstance();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.min(stepSize,  dt);  StepHandler  handler  =  prototype.getInstance();  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.min(stepSize,    dt);    StepHandler  handler  =  prototype.getInstance();	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
78	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.min(stepStart,  dt);	      stepSize    =    Math.min(stepSize,    dt);    	compilable	timeout	21	1	replace
79	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  timeout  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.min(stepStart,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.min(stepStart,  dt);	      stepSize    =    Math.min(stepSize,    dt);    	compilable	timeout	21	1	replace
80	[BUG]  [BUGGY]  dt  =  manager.getEventTime()  -  stepStart  +  1;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  dt  =  manager.getEventTime()  -  stepStart  +  1;  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  manager.getEventTime()  -  stepStart  +  1;	      dt    =    manager.getEventTime()    -    stepStart;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	1	None	replace
81	[BUG]  [BUGGY]  loop  =  false;  dt  =  Math.abs(dt)-  stepSize;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  false;  dt  =  Math.abs(dt)-  stepSize;  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  dt  =  Math.abs(dt)-  stepSize;	  loop    =    true;    timeout    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	8	None	replace
82	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	        stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);	  	compilable	  [FE]  AssertionFailedError  	11	2	add
83	[BUG]  [BUGGY]      stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);  [FE]  AssertionFailedError  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(stepStart);  stepSize  =  Math.abs(dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.abs(stepStart);    stepSize  =  Math.abs(dt);	  	compilable	  [FE]  AssertionFailedError  	11	2	add
84	[BUG]  [BUGGY]      stepSize  =  Math.abs(stepStart);  StepHandler  handler  =  prototype.getInstance();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(stepStart);  StepHandler  handler  =  prototype.getInstance();  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.abs(stepStart);    StepHandler  handler  =  prototype.getInstance();	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
85	[BUG]  [BUGGY]  LoopTraversal.traverse(interpolator,  dt,  new  RungeKuttaStepInterpolator());  [CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  LoopTraversal.traverse(interpolator,  dt,  new  RungeKuttaStepInterpolator());  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(interpolator,  dt,  new  RungeKuttaStepInterpolator());	  loop    =   "Step   ";    	non-compiled	[CE]  RungeKuttaStepInterpolator  is  abstract;  cannot  be  instantiated	16	None	replace
86	[BUG]  [BUGGY]  LoopTraversal.traverse(interpolator,  dt,  rki);  [CE]  cannot  find  symbol  rki  [FE]          AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  LoopTraversal.traverse(interpolator,  dt,  rki);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(interpolator,  dt,  rki);	  loop    =   "Step   ";    	non-compiled	[CE]  cannot  find  symbol  rki	16	None	replace
87	[BUG]  [BUGGY]  LoopTraversal.traverse(interpolator, "Step ",  dt);  [CE]  cannot  find  symbol  LoopTraversal  [FE]            AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  LoopTraversal.traverse(interpolator, "Step ",  dt);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	LoopTraversal.traverse(interpolator, "Step ",  dt);	  loop    =   "Step   ";    	non-compiled	[CE]  cannot  find  symbol  LoopTraversal	16	None	replace
88	[BUG]  [BUGGY]      stepSize  =  Math.abs(dt);  dt  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(dt);  dt  =  Math.abs(dt);  stepSize  =  Math.abs(dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.abs(dt);    dt  =  Math.abs(dt);  stepSize  =  Math.abs(dt);	  	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	5	None	add
89	[BUG]  [BUGGY]      stepSize  =  Math.abs(dt);  StepHandler  handler  =  prototype.getInstance();  stepSize  =  Math.abs(dt);  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(dt);  StepHandler  handler  =  prototype.getInstance();  stepSize  =  Math.abs(dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.abs(dt);    StepHandler  handler  =  prototype.getInstance();  stepSize  =  Math.abs(dt);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
90	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.max(stepStart,  dt);	      stepSize    =    Math.max(stepSize,    dt);    	compilable	timeout	14	1	replace
91	[BUG]  [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  timeout  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(stepStart,  dt);	      stepSize    =    Math.max(stepSize,    dt);    	compilable	timeout	14	1	replace
92	[BUG]  [BUGGY]  timeout  [FE]      AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.max(stepSize,  dt  +  1);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.max(stepSize,  dt  +  1);	      stepSize    =    Math.max(stepSize,    dt);    	compilable	timeout	14	1	replace
93	[BUG]  [BUGGY]  stepSize  =  Math.max(stepSize,  dt  +  1);  timeout  [FE]      AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.max(stepSize,  dt  +  1);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.max(stepSize,  dt  +  1);	      stepSize    =    Math.max(stepSize,    dt);    	compilable	timeout	14	1	replace
94	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.abs(stepSize);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.abs(stepSize);	      stepSize    =    Math.abs(stepStart);    	compilable	timeout	12	1	replace
95	[BUG]  [BUGGY]  stepSize  =  Math.abs(stepSize);  timeout  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.abs(stepSize);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(stepSize);	      stepSize    =    Math.abs(stepStart);    	compilable	timeout	12	1	replace
96	[BUG]  [BUGGY]  dt  =  manager.getEventTime()  -  this.stepSize;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]              AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  dt  =  manager.getEventTime()  -  this.stepSize;  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	dt  =  manager.getEventTime()  -  this.stepSize;	      dt    =    manager.getEventTime()    -    stepSize;    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	4	None	replace
97	[BUG]  [BUGGY]  Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",   "  +  stepSize  +   ") ";  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",   "  +  stepSize  +   ") ";  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Loop  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ",   "  +  stepSize  +   ") ";	  loop    =   "Step    interpolator.evaluateStep(   "    +    dt    +   ",   "    +    dt    +   ")   ";    	non-compiled	[CE]  cannot  find  symbol	17	None	replace
98	[BUG]  [BUGGY]      stepSize  =  Math.abs(stepStart);  StepHandler  handler  =  getStepInterpolator();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(stepStart);  StepHandler  handler  =  getStepInterpolator();  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.abs(stepStart);    StepHandler  handler  =  getStepInterpolator();	  	non-compiled	[CE]  cannot  find  symbol	11	None	add
99	[BUG]  [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize,  yTmp);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  true;  processStep(t0,  dt,  stepSize,  yTmp);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop    =    true;    processStep(t0,  dt,  stepSize,  yTmp);	  timeout    	non-compiled	[CE]  cannot  find  symbol	7	None	add
100	[BUG]  [BUGGY]  Looper  l  =  true;  [CE]  cannot  find  symbol  [FE]            AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  Looper  l  =  true;  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  l  =  true;	  Looper    loop    =    true;    	non-compiled	[CE]  cannot  find  symbol	10	None	replace
101	[BUG]  [BUGGY]      stepSize  =  Math.min(stepSize,  dt);  StepHandler  handler  =  getStepInterpolator();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.min(stepSize,  dt);  StepHandler  handler  =  getStepInterpolator();  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.min(stepSize,    dt);    StepHandler  handler  =  getStepInterpolator();	  	non-compiled	[CE]  cannot  find  symbol	20	None	add
102	[BUG]  [BUGGY]      stepSize  =  Math.max(stepSize,  dt);  StepHandler  handler  =  getStepInterpolator();  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.max(stepSize,  dt);  StepHandler  handler  =  getStepInterpolator();  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.max(stepSize,    dt);    StepHandler  handler  =  getStepInterpolator();	  	non-compiled	[CE]  cannot  find  symbol	13	None	add
103	[BUG]  [BUGGY]  loop  =  false;  dt  =  manager.getEventTime()  -  stepStart;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  false;  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  dt  =  manager.getEventTime()  -  stepStart;	  loop    =    true;    timeout    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	8	None	replace
104	[BUG]  [BUGGY]  loop  =  false;  dt  =  Math.max(dt,  dt);  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]          AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  false;  dt  =  Math.max(dt,  dt);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  false;  dt  =  Math.max(dt,  dt);	  loop    =    true;    timeout    	non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	8	None	replace
105	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.abs(dt  -  stepStart);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	stepSize  =  Math.abs(dt  -  stepStart);	      stepSize    =    Math.abs(dt);    	compilable	timeout	6	1	replace
106	[BUG]  [BUGGY]  stepSize  =  Math.abs(dt  -  stepStart);  timeout  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  stepSize  =  Math.abs(dt  -  stepStart);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	stepSize  =  Math.abs(dt  -  stepStart);	      stepSize    =    Math.abs(dt);    	compilable	timeout	6	1	replace
107	[BUG]  [BUGGY]      stepSize  =  Math.abs(dt);  StepHandler  handler  =  getStepInterpolator(t0,  dt,  stepSize);  [CE]  cannot  find  symbol  [FE]    AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(dt);  StepHandler  handler  =  getStepInterpolator(t0,  dt,  stepSize);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.abs(dt);    StepHandler  handler  =  getStepInterpolator(t0,  dt,  stepSize);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
108	[BUG]  [BUGGY]      stepSize  =  Math.abs(dt);  StepHandler  handler  =  getStepInterpolator();  [CE]  cannot  find  symbol  [FE]      AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(dt);  StepHandler  handler  =  getStepInterpolator();  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.abs(dt);    StepHandler  handler  =  getStepInterpolator();	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
109	[BUG]  [BUGGY]      stepSize  =  Math.abs(dt);  StepHandler  handler  =  getStepInterpolator(interpolator);  [CE]  cannot  find  symbol  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]      stepSize  =  Math.abs(dt);  StepHandler  handler  =  getStepInterpolator(interpolator);  [BUGGY]    loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	        stepSize    =    Math.abs(dt);    StepHandler  handler  =  getStepInterpolator(interpolator);	  	non-compiled	[CE]  cannot  find  symbol	5	None	add
110	[BUG]  [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  a,  yTmp);  [CE]  cannot  find  symbol  [FE]          AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =  new  BasicStepInterpolator(t0,  dt,  a,  yTmp);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  new  BasicStepInterpolator(t0,  dt,  a,  yTmp);	  loop    =   "   ";    	non-compiled	[CE]  cannot  find  symbol	9	None	replace
111	[BUG]  [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ",  a);  [CE]  [FE]          AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ",  a);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step  interpolator.evaluateStep( "  +  dt  + ") ",  a);	  loop    =   "Step    interpolator.evaluateStep(   "    +    dt    +   ")   ";    	non-compiled	[CE]  	18	None	replace
112	[BUG]  [BUGGY]  loop  =   "Step ",  dt);  [CE]  [FE]        AssertionFailedError    [CONTEXT]      interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {          [BUGGY]  loop  =   "Step ",  dt);  [BUGGY]    }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =   "Step ",  dt);	  loop    =   "Step   ";    	non-compiled	[CE]  	16	None	replace
