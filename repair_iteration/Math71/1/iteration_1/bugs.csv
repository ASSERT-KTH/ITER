bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    dt  =  manager.getEventTime()  -  stepStart;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]    AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]    dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]  loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	    dt  =  manager.getEventTime()  -  stepStart;		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	2	None	add
2	[BUG]  [BUGGY]    dt  =  manager.getEventTime();  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]      AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]    dt  =  manager.getEventTime();  [BUGGY]  loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	    dt  =  manager.getEventTime();		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	2	None	add
3	[BUG]  [BUGGY]    dt  =  manager.getEventTime()  +  stepSize;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]        AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]    dt  =  manager.getEventTime()  +  stepSize;  [BUGGY]  loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	    dt  =  manager.getEventTime()  +  stepSize;		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	2	None	add
4	[BUG]  [BUGGY]    dt  =  manager.getEventTime()  -  stepSize;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]          AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]    dt  =  manager.getEventTime()  -  stepSize;  [BUGGY]  loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	    dt  =  manager.getEventTime()  -  stepSize;		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	2	None	add
5	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]    stepSize  =  Math.abs(dt);  [BUGGY]  loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	    stepSize  =  Math.abs(dt);		compilable	  [FE]  AssertionFailedError  	2	2	add
6	[BUG]  [BUGGY]    stepSize  =  Math.abs(dt);  [FE]  AssertionFailedError  [FE]            AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]    stepSize  =  Math.abs(dt);  [BUGGY]  loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	    stepSize  =  Math.abs(dt);		compilable	  [FE]  AssertionFailedError  	2	2	add
7	[BUG]  [BUGGY]  timeout  [FE]    AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]  loop  =  true;  [BUGGY]  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	loop  =  true;	loop  =  false;  	compilable	timeout	1	1	replace
8	[BUG]  [BUGGY]  loop  =  true;  timeout  [FE]    AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]  loop  =  true;  [BUGGY]  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  =  true;	loop  =  false;  	compilable	timeout	1	1	replace
9	[BUG]  [BUGGY]  loop  = " ";  [CE]  incompatible  types  [FE]      AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]  loop  = " ";  [BUGGY]  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  = " ";	loop  =  false;  	non-compiled	[CE]  incompatible  types	1	None	replace
10	[BUG]  [BUGGY]  Looper  loop  =  true;  [CE]  cannot  find  symbol  [FE]        AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]  Looper  loop  =  true;  [BUGGY]  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	Looper  loop  =  true;	loop  =  false;  	non-compiled	[CE]  cannot  find  symbol	1	None	replace
11	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]    stepSize  =  Math.abs(stepStart);  [BUGGY]  loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	    stepSize  =  Math.abs(stepStart);		compilable	  [FE]  AssertionFailedError  	2	2	add
12	[BUG]  [BUGGY]    stepSize  =  Math.abs(stepStart);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]    stepSize  =  Math.abs(stepStart);  [BUGGY]  loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	    stepSize  =  Math.abs(stepStart);		compilable	  [FE]  AssertionFailedError  	2	2	add
13	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]    stepSize  =  Math.max(stepSize,  dt);  [BUGGY]  loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	    stepSize  =  Math.max(stepSize,  dt);		compilable	  [FE]  AssertionFailedError  	2	2	add
14	[BUG]  [BUGGY]    stepSize  =  Math.max(stepSize,  dt);  [FE]  AssertionFailedError  [FE]      AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]    stepSize  =  Math.max(stepSize,  dt);  [BUGGY]  loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	    stepSize  =  Math.max(stepSize,  dt);		compilable	  [FE]  AssertionFailedError  	2	2	add
15	[BUG]  [BUGGY]    dt  =  manager.getEventTime()  +  stepStart;  [CE]  cannot  assign  a  value  to  final  variable  dt  [FE]        AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]    dt  =  manager.getEventTime()  +  stepStart;  [BUGGY]  loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	    dt  =  manager.getEventTime()  +  stepStart;		non-compiled	[CE]  cannot  assign  a  value  to  final  variable  dt	2	None	add
16	[BUG]  [BUGGY]  loop  = "Step ";  [CE]  incompatible  types  [FE]    AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]  loop  = "Step ";  [BUGGY]  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  = "Step ";	loop  =  false;  	non-compiled	[CE]  incompatible  types	1	None	replace
17	[BUG]  [BUGGY]  loop  = "Step  interpolator.evaluateStep( "  +  dt  + ", "  +  dt  + ") ";  [CE]  incompatible  types  [FE]    AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]  loop  = "Step  interpolator.evaluateStep( "  +  dt  + ", "  +  dt  + ") ";  [BUGGY]  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  = "Step  interpolator.evaluateStep( "  +  dt  + ", "  +  dt  + ") ";	loop  =  false;  	non-compiled	[CE]  incompatible  types	1	None	replace
18	[BUG]  [BUGGY]  loop  = "Step  interpolator.evaluateStep( "  +  dt  + ") ";  [CE]  incompatible  types  [FE]      AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]  loop  = "Step  interpolator.evaluateStep( "  +  dt  + ") ";  [BUGGY]  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  = "Step  interpolator.evaluateStep( "  +  dt  + ") ";	loop  =  false;  	non-compiled	[CE]  incompatible  types	1	None	replace
19	[BUG]  [BUGGY]  loop  = "Step  interpolator.evaluateStep( "  +  dt  + ", "  +  stepSize);  [CE]  [FE]        AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]  loop  = "Step  interpolator.evaluateStep( "  +  dt  + ", "  +  stepSize);  [BUGGY]  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	loop  = "Step  interpolator.evaluateStep( "  +  dt  + ", "  +  stepSize);	loop  =  false;  	non-compiled	[CE]  	1	None	replace
20	[BUG]  [BUGGY]  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]    stepSize  =  Math.min(stepSize,  dt);  [BUGGY]  loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	    stepSize  =  Math.min(stepSize,  dt);		compilable	  [FE]  AssertionFailedError  	2	2	add
21	[BUG]  [BUGGY]    stepSize  =  Math.min(stepSize,  dt);  [FE]  AssertionFailedError  [FE]    AssertionFailedError  [CONTEXT]    interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {        [BUGGY]    stepSize  =  Math.min(stepSize,  dt);  [BUGGY]  loop  =  false;  }  else  {  stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	    stepSize  =  Math.min(stepSize,  dt);		compilable	  [FE]  AssertionFailedError  	2	2	add
