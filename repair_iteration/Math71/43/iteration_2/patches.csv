bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
2	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
3	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
4	[BUG]  [BUGGY]  int  stepSize  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
5	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
6	[BUG]  [BUGGY]  int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
7	[BUG]  [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
8	[BUG]  [BUGGY]  int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
9	[BUG]  [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  stepSize  =  dt.nextStep()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  dt.nextStep()  +  1;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  dt.nextStep()  +  1;	  stepSize    =    dt.nextStep();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
11	[BUG]  [BUGGY]  stepSize  =  dt.nextStep(step);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  dt.nextStep(step);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  dt.nextStep(step);	  stepSize    =    dt.nextStep();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
12	[BUG]  [BUGGY]  stepSize  =  dt.nextStep(stepTime);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  dt.nextStep(stepTime);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  dt.nextStep(stepTime);	  stepSize    =    dt.nextStep();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  1;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  1;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
16	[BUG]  [BUGGY]  Integer  stepSize  =  getLastStep();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  getLastStep();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  getLastStep();	  Integer    stepSize    =    getStepSize();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
17	[BUG]  [BUGGY]  Integer  stepSize  =  getStepSize()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  getStepSize()  +  1;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  getStepSize()  +  1;	  Integer    stepSize    =    getStepSize();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
18	[BUG]  [BUGGY]  Integer  stepSize  =  getRangeSize();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  getRangeSize();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  getRangeSize();	  Integer    stepSize    =    getStepSize();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
19	[BUG]  [BUGGY]  Integer  stepSize  =  getStepSize()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  getStepSize()  -  1;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  getStepSize()  -  1;	  Integer    stepSize    =    getStepSize();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
20	[BUG]  [BUGGY]  Integer  dt  =  getInstantiator(stepSize);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  dt  =  getInstantiator(stepSize);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getInstantiator(stepSize);	  Integer    dt    =    getInstantiator();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
21	[BUG]  [BUGGY]  Integer  dt  =  getStepSize();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  dt  =  getStepSize();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getStepSize();	  Integer    dt    =    getInstantiator();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
22	[BUG]  [BUGGY]  int  dt  =  getInstantiator();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  dt  =  getInstantiator();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  dt  =  getInstantiator();	  Integer    dt    =    getInstantiator();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
23	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
24	[BUG]  [BUGGY]  int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
25	[BUG]  [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
26	[BUG]  [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
27	[BUG]  [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
28	[BUG]  [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt.length;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt.length;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt.length;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps.length;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  steps.length;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  steps.length;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
32	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
34	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
35	[BUG]  [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)handler.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)handler.clone();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =(AssertionFailedError)handler.clone();	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
36	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  dt.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  dt.length);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  dt.length);	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
37	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  y.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  y.length);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  y.length);	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
38	[BUG]  [BUGGY]  Integer  stepSize  =  dt.getStepSize();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  dt.getStepSize();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  dt.getStepSize();	  Integer    stepSize    =    dt.getInstantiator();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
39	[BUG]  [BUGGY]  Integer  stepSize  =  dt.getInstantiator()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  dt.getInstantiator()  +  1;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  dt.getInstantiator()  +  1;	  Integer    stepSize    =    dt.getInstantiator();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
40	[BUG]  [BUGGY]  Integer  stepSize  =  dt.getMask();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  dt.getMask();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  dt.getMask();	  Integer    stepSize    =    dt.getInstantiator();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  1;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  1;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
43	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
44	[BUG]  [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)stepSize.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)stepSize.clone();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  tt  =(AssertionFailedError)stepSize.clone();	  AssertionFailedError    tt    =(AssertionFailedError)dt.clone();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
45	[BUG]  [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)this.stepSize.clone();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)this.stepSize.clone();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  tt  =(AssertionFailedError)this.stepSize.clone();	  AssertionFailedError    tt    =(AssertionFailedError)dt.clone();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
46	[BUG]  [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)eq.clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)eq.clone();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  tt  =(AssertionFailedError)eq.clone();	  AssertionFailedError    tt    =(AssertionFailedError)dt.clone();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
47	[BUG]  [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
48	[BUG]  [BUGGY]  int  stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
49	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  return	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    MethodHandler    handler    =    getStepInterpolator();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
50	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    MethodHandler    handler    =    getStepInterpolator();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
51	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler  ==  null)  {  return	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    MethodHandler    handler    =    getStepInterpolator();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
52	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  return	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    MethodHandler    handler    =    getStepInterpolator();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
53	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  y);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  y);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  y);	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
54	[BUG]  [BUGGY]  loop  =  false;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  loop  =  false;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	loop  =  false;	  if(stepSize    ==    0)    {    loop    =    false;    }    else    {    stepSize    =    dt;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
55	[BUG]  [BUGGY]  phaseSize  =  dt;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  phaseSize  =  dt;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	phaseSize  =  dt;	  if(stepSize    ==    0)    {    loop    =    false;    }    else    {    stepSize    =    dt;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
56	[BUG]  [BUGGY]  AssertionFailedError  t0  =  prototype.getErrorHandler(stepSize);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =  prototype.getErrorHandler(stepSize);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =  prototype.getErrorHandler(stepSize);	  AssertionFailedError    t0    =    prototype.getErrorHandler();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
57	[BUG]  [BUGGY]  AssertionFailedError  t0  =  prototype.getRawErrorHandler();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =  prototype.getRawErrorHandler();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =  prototype.getRawErrorHandler();	  AssertionFailedError    t0    =    prototype.getErrorHandler();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
58	[BUG]  [BUGGY]  AssertionFailedError  t0  =  prototype.getRangeErrorHandler();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =  prototype.getRangeErrorHandler();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =  prototype.getRangeErrorHandler();	  AssertionFailedError    t0    =    prototype.getErrorHandler();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
59	[BUG]  [BUGGY]  if(stepSize  <  =  dt)  {  loop  =  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  <  =  dt)  {  loop  =  false;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  <  =  dt)  {  loop  =  false;  }	  if(stepSize    ==    dt)    {    loop    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
60	[BUG]  [BUGGY]  if(stepSize!=  dt)  {  loop  =  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  dt)  {  loop  =  false;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  dt)  {  loop  =  false;  }	  if(stepSize    ==    dt)    {    loop    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
61	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
62	[BUG]  [BUGGY]  int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
63	[BUG]  [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
64	[BUG]  [BUGGY]  Integer  stepSize  =  getStepInteger(0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  getStepInteger(0);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  getStepInteger(0);	  Integer    stepSize    =    getStepInteger();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
65	[BUG]  [BUGGY]  Integer  stepSize  =  getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  getStepInterpolator();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  getStepInterpolator();	  Integer    stepSize    =    getStepInteger();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
66	[BUG]  [BUGGY]  Integer  stepSize  =  getRangeInteger();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  getRangeInteger();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  getRangeInteger();	  Integer    stepSize    =    getStepInteger();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
67	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
68	[BUG]  [BUGGY]  int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
69	[BUG]  [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
70	[BUG]  [BUGGY]  stepSize  =  dt  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  dt  +  1;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  dt  +  1;	  stepSize    =    dt;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
71	[BUG]  [BUGGY]  stepSize  =  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  1;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  1;	  stepSize    =    dt;    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
72	[BUG]  [BUGGY]  luate(t0,  y0,  stepSize))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(t0,  y0,  stepSize))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0,  y0,  stepSize))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  luate(t0,    y0,    dt))    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
73	[BUG]  [BUGGY]  luate(dt,  y0))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(dt,  y0))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(dt,  y0))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  luate(t0,    y0,    dt))    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
74	[BUG]  [BUGGY]  luate(t0,  y1,  dt))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(t0,  y1,  dt))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0,  y1,  dt))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  luate(t0,    y0,    dt))    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
75	[BUG]  [BUGGY]  }  else  if(stepSize!=  t0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize!=  t0)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize!=  t0)  {	  }    else    if(stepSize!=    y0)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
76	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
77	[BUG]  [BUGGY]  int  stepSize  =  dt.length()  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  dt.length()  +  1;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt.length()  +  1;	  int    stepSize    =    dt.length();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
78	[BUG]  [BUGGY]  double  stepSize  =  dt.length();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  double  stepSize  =  dt.length();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	double  stepSize  =  dt.length();	  int    stepSize    =    dt.length();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
79	[BUG]  [BUGGY]  int  stepSize  =  dt.length()  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  dt.length()  -  1;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt.length()  -  1;	  int    stepSize    =    dt.length();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
80	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
81	[BUG]  [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)super.clone();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)super.clone();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  tt  =(AssertionFailedError)super.clone();	  AssertionFailedError    tt    =(AssertionFailedError)em.clone();    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
82	[BUG]  [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)stepSize;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)stepSize;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  tt  =(AssertionFailedError)stepSize;	  AssertionFailedError    tt    =(AssertionFailedError)dt;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
83	[BUG]  [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)this.stepSize;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)this.stepSize;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  tt  =(AssertionFailedError)this.stepSize;	  AssertionFailedError    tt    =(AssertionFailedError)dt;    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
84	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
85	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
86	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
87	[BUG]  [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
88	[BUG]  [BUGGY]  int  stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
89	[BUG]  [BUGGY]  AssertionFailedError  t1  =  prototype.getErrorHandler();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t1  =  prototype.getErrorHandler();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t1  =  prototype.getErrorHandler();	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
90	[BUG]  [BUGGY]  phaseSize  =  stepSize;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  phaseSize  =  stepSize;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	phaseSize  =  stepSize;	  if(stepSize    ==    dt)    {    loop    =    false;    }    else    {    stepSize    =    dt;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
91	[BUG]  [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
92	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
93	[BUG]  [BUGGY]  int  stepSize  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
94	[BUG]  [BUGGY]  luate(t0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(t0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  if(stepSize    ==    t0)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
95	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
96	[BUG]  [BUGGY]  stepSize  =  dt.getStep()  +  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  dt.getStep()  +  1;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  dt.getStep()  +  1;	  stepSize    =    dt.getStep();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
97	[BUG]  [BUGGY]  stepSize  =  dt.getNextStep();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  dt.getNextStep();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  dt.getNextStep();	  stepSize    =    dt.getStep();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
98	[BUG]  [BUGGY]  stepSize  -=  dt;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  -=  dt;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  -=  dt;	  stepSize    -=    stepSize;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
99	[BUG]  [BUGGY]  stepSize  -=  dt.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  -=  dt.length;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  -=  dt.length;	  stepSize    -=    stepSize;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
100	[BUG]  [BUGGY]  stepSize  -=  t0;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  -=  t0;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  -=  t0;	  stepSize    -=    stepSize;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
101	[BUG]  [BUGGY]  stepSize  -=  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  -=  1;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  -=  1;	  stepSize    -=    stepSize;    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
102	[BUG]  [BUGGY]  }  else  if(stepSize  <  =  stepSize)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  <  =  stepSize)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  <  =  stepSize)  {	  }    else    if(stepSize    >    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
103	[BUG]  [BUGGY]  }  else  if(dt  >  stepSize)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(dt  >  stepSize)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(dt  >  stepSize)  {	  }    else    if(stepSize    >    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
104	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t1,  stepSize,  dt);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t1,  stepSize,  dt);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t1,  stepSize,  dt);	  AssertionFailedError    t1    =    new    AssertionFailedError(t0,    dt,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
105	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t1,  stepSize);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t1,  stepSize);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t1,  stepSize);	  AssertionFailedError    t1    =    new    AssertionFailedError(t0,    dt,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
106	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t1,  stepSize,  y0);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t1,  stepSize,  y0);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t1,  stepSize,  y0);	  AssertionFailedError    t1    =    new    AssertionFailedError(t0,    dt,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
107	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
108	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
109	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  false;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  false;  }	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
110	[BUG]  [BUGGY]  while(dt  >  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  while(dt  >  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	while(dt  >  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  while(stepSize    >    stepSize)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
111	[BUG]  [BUGGY]  while(stepSize  >  dt)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  while(stepSize  >  dt)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	while(stepSize  >  dt)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  while(stepSize    >    stepSize)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
112	[BUG]  [BUGGY]  while(stepSize  <  =  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  while(stepSize  <  =  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	while(stepSize  <  =  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  while(stepSize    >    stepSize)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
113	[BUG]  [BUGGY]  while(stepSize  >  dt.length)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  while(stepSize  >  dt.length)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	while(stepSize  >  dt.length)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  while(stepSize    >    stepSize)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
114	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  y1,  dt);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  y1,  dt);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  y1,  dt);	  AssertionFailedError    t1    =    new    AssertionFailedError(t0,    stepSize,    dt);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
115	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  y1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  y1);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  y1);	  AssertionFailedError    t1    =    new    AssertionFailedError(t0,    stepSize,    dt);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
116	[BUG]  [BUGGY]  }  else  if(dt.length  <  =  stepSize)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(dt.length  <  =  stepSize)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(dt.length  <  =  stepSize)  {	  }    else    if(stepSize    <    =    dt.length)    {    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
117	[BUG]  [BUGGY]  AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize,  dt.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize,  dt.length);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize,  dt.length);	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
118	[BUG]  [BUGGY]  AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize,  dt);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize,  dt);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize,  dt);	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
119	[BUG]  [BUGGY]  AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize,  y);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize,  y);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize,  y);	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
120	[BUG]  [BUGGY]  int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
121	[BUG]  [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
122	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
123	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt.length;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt.length;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt.length;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps.length;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  steps.length;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  steps.length;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
125	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  1;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  1;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
126	[BUG]  [BUGGY]  }  else  if(stepSize  <  =  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  <  =  1)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  <  =  1)  {	  }    else    if(stepSize    <    =    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
127	[BUG]  [BUGGY]  }  else  if(dt  <  =  stepSize)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(dt  <  =  stepSize)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(dt  <  =  stepSize)  {	  }    else    if(stepSize    <    =    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
128	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
129	[BUG]  [BUGGY]  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
130	[BUG]  [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)stepSize.clone();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)stepSize.clone();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =(AssertionFailedError)stepSize.clone();	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
131	[BUG]  [BUGGY]  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  loop  =  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  loop  =  true	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
132	[BUG]  [BUGGY]  AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize,  y.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize,  y.length);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize,  y.length);	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
133	[BUG]  [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
134	[BUG]  [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  false  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  false  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  false	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
135	[BUG]  [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  return  true  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  return  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  return  true	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
136	[BUG]  [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
137	[BUG]  [BUGGY]  Integer  dt  =  getStandardDifferentialEquations(stepSize);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  dt  =  getStandardDifferentialEquations(stepSize);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getStandardDifferentialEquations(stepSize);	  Integer    dt    =    getStandardDifferentialEquations();    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
138	[BUG]  [BUGGY]  Integer  dt  =  getStandardDifferentialEquations().length;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  dt  =  getStandardDifferentialEquations().length;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getStandardDifferentialEquations().length;	  Integer    dt    =    getStandardDifferentialEquations();    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
139	[BUG]  [BUGGY]  AssertionFailedError  t  =  prototype.getRawErrorTree();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t  =  prototype.getRawErrorTree();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t  =  prototype.getRawErrorTree();	  AssertionFailedError    t    =    prototype.getErrorTree();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
140	[BUG]  [BUGGY]  AssertionFailedError  t  =  prototype.getErrorTree(stepSize);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t  =  prototype.getErrorTree(stepSize);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t  =  prototype.getErrorTree(stepSize);	  AssertionFailedError    t    =    prototype.getErrorTree();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
141	[BUG]  [BUGGY]  AssertionFailedError  t  =  prototype.getRuntimeErrorTree();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t  =  prototype.getRuntimeErrorTree();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t  =  prototype.getRuntimeErrorTree();	  AssertionFailedError    t    =    prototype.getErrorTree();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
142	[BUG]  [BUGGY]  }  else  if(stepSize  <  dt.length  ||  stepSize  >  dt.length)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  <  dt.length  ||  stepSize  >  dt.length)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  <  dt.length  ||  stepSize  >  dt.length)  {	  }    else    if(stepSize    >    dt.length    ||    stepSize    >    dt.length)    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
143	[BUG]  [BUGGY]  }  else  if(stepSize  ==  dt.length  ||  stepSize  >  dt.length)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  ==  dt.length  ||  stepSize  >  dt.length)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  ==  dt.length  ||  stepSize  >  dt.length)  {	  }    else    if(stepSize    >    dt.length    ||    stepSize    >    dt.length)    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
144	[BUG]  [BUGGY]  }  else  if(stepSize  >  dt.length  ||  stepSize  <  dt.length)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  >  dt.length  ||  stepSize  <  dt.length)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  >  dt.length  ||  stepSize  <  dt.length)  {	  }    else    if(stepSize    >    dt.length    ||    stepSize    >    dt.length)    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
145	[BUG]  [BUGGY]  }  else  if(stepSize  >=  dt.length  ||  stepSize  >  dt.length)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  >=  dt.length  ||  stepSize  >  dt.length)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  >=  dt.length  ||  stepSize  >  dt.length)  {	  }    else    if(stepSize    >    dt.length    ||    stepSize    >    dt.length)    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
146	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
147	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
148	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
149	[BUG]  [BUGGY]  AssertionFailedError  t  =  prototype.getErrorHandler(stepSize);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t  =  prototype.getErrorHandler(stepSize);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t  =  prototype.getErrorHandler(stepSize);	  AssertionFailedError    t    =    prototype.getErrorHandler();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
150	[BUG]  [BUGGY]  AssertionFailedError  t  =  prototype.getRawErrorHandler();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t  =  prototype.getRawErrorHandler();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t  =  prototype.getRawErrorHandler();	  AssertionFailedError    t    =    prototype.getErrorHandler();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
151	[BUG]  [BUGGY]  AssertionFailedError  t  =  prototype.getRuntimeErrorHandler();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t  =  prototype.getRuntimeErrorHandler();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t  =  prototype.getRuntimeErrorHandler();	  AssertionFailedError    t    =    prototype.getErrorHandler();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
152	[BUG]  [BUGGY]  stepSize  =  dt.length  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  dt.length  +  1;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  dt.length  +  1;	  stepSize    =    dt.length;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
153	[BUG]  [BUGGY]  stepSize  =  dt.length  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  dt.length  -  1;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  dt.length  -  1;	  stepSize    =    dt.length;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
154	[BUG]  [BUGGY]  stepSize  =  t0.length;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  t0.length;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  t0.length;	  stepSize    =    dt.length;    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
155	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
156	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
157	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
159	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  ++i)  {  AssertionFailedError  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  ++i)  {  AssertionFailedError  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  ++i)  {  AssertionFailedError  handler  =  getStepHandler();  if(handler!=  null)  {	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
160	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
161	[BUG]  [BUGGY]  }  else  if(stepSize  ==  2)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  ==  2)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  ==  2)  {	  }    else    if(stepSize    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
162	[BUG]  [BUGGY]  }  else  if(stepSize!=  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize!=  1)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize!=  1)  {	  }    else    if(stepSize    ==    1)    {    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
163	[BUG]  [BUGGY]  Integer  stepSize  =  dt.getIntValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  dt.getIntValue()  +  1;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  dt.getIntValue()  +  1;	  Integer    stepSize    =    dt.getIntValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
164	[BUG]  [BUGGY]  Integer  stepSize  =  dt.getLongValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  dt.getLongValue();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  dt.getLongValue();	  Integer    stepSize    =    dt.getIntValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
165	[BUG]  [BUGGY]  Integer  stepSize  =  dt.getEndValue();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  dt.getEndValue();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  dt.getEndValue();	  Integer    stepSize    =    dt.getIntValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
166	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
167	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  1;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  1;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
168	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
169	[BUG]  [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
170	[BUG]  [BUGGY]  luate(dt,  stepSize))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(dt,  stepSize))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(dt,  stepSize))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  if(stepSize    ==    dt.length)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
171	[BUG]  [BUGGY]  while(dt.length  ==  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  while(dt.length  ==  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	while(dt.length  ==  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);	  if(stepSize    ==    dt.length)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
172	[BUG]  [BUGGY]  luate(dt,  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(dt,  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(dt,  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  if(stepSize    ==    dt.length)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
173	[BUG]  [BUGGY]  while(dt.length  ==  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  while(dt.length  ==  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	while(dt.length  ==  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  if(stepSize    ==    dt.length)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
174	[BUG]  [BUGGY]  int  stepSize  =  dt;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  dt;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt;	  int    stepSize    =    stepSize;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
175	[BUG]  [BUGGY]  double  stepSize  =  stepSize;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  double  stepSize  =  stepSize;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	double  stepSize  =  stepSize;	  int    stepSize    =    stepSize;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
176	[BUG]  [BUGGY]  int  stepSize  =  rki.stepSize;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  rki.stepSize;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  rki.stepSize;	  int    stepSize    =    stepSize;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
177	[BUG]  [BUGGY]  Integer  dt  =  getStepInterpolator(stepSize);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  dt  =  getStepInterpolator(stepSize);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getStepInterpolator(stepSize);	  Integer    dt    =    getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
178	[BUG]  [BUGGY]  Integer  dt  =  getStepInterpolator().stepSize;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  dt  =  getStepInterpolator().stepSize;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getStepInterpolator().stepSize;	  Integer    dt    =    getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
179	[BUG]  [BUGGY]  Integer  dt  =  getInitializingStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  dt  =  getInitializingStepInterpolator();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getInitializingStepInterpolator();	  Integer    dt    =    getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
180	[BUG]  [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
181	[BUG]  [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
182	[BUG]  [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
183	[BUG]  [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
184	[BUG]  [BUGGY]  }  else  if(stepSize  <  nextStep)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  <  nextStep)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  <  nextStep)  {	  }    else    if(stepSize    >    nextStep)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
185	[BUG]  [BUGGY]  }  else  if(stepSize  <  =  nextStep)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  <  =  nextStep)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  <  =  nextStep)  {	  }    else    if(stepSize    >    nextStep)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
186	[BUG]  [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)this.handler.clone();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)this.handler.clone();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  tt  =(AssertionFailedError)this.handler.clone();	  AssertionFailedError    tt    =(AssertionFailedError)handler.clone();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
187	[BUG]  [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)super.handler.clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)super.handler.clone();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  tt  =(AssertionFailedError)super.handler.clone();	  AssertionFailedError    tt    =(AssertionFailedError)handler.clone();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
188	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
189	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  false  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  false  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  false	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
190	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
191	[BUG]  [BUGGY]  if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  }	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
192	[BUG]  [BUGGY]  StepHandler  handler  =  getStepHandler(stepSize);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  StepHandler  handler  =  getStepHandler(stepSize);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	StepHandler  handler  =  getStepHandler(stepSize);	  StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
193	[BUG]  [BUGGY]  StepHandler  handler  =  getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  StepHandler  handler  =  getStepInterpolator();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	StepHandler  handler  =  getStepInterpolator();	  StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
194	[BUG]  [BUGGY]  int  stepSize  =  dt.length  -  1;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  dt.length  -  1;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt.length  -  1;	  int    stepSize    =    dt.length;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
195	[BUG]  [BUGGY]  double  stepSize  =  dt.length;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  double  stepSize  =  dt.length;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	double  stepSize  =  dt.length;	  int    stepSize    =    dt.length;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
196	[BUG]  [BUGGY]  int  stepSize  =  dt.length  +  1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  dt.length  +  1;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt.length  +  1;	  int    stepSize    =    dt.length;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
197	[BUG]  [BUGGY]  int  stepSize  =  dt.length  -  2;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  dt.length  -  2;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt.length  -  2;	  int    stepSize    =    dt.length;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
198	[BUG]  [BUGGY]  luate(t0,  stepSize,  dt));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(t0,  stepSize,  dt));  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0,  stepSize,  dt));	  luate(t0,    y0,    dt));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
199	[BUG]  [BUGGY]  luate(t0,  y0,  stepSize));  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(t0,  y0,  stepSize));  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0,  y0,  stepSize));	  luate(t0,    y0,    dt));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
200	[BUG]  [BUGGY]  luate(dt,  y0,  t0));  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(dt,  y0,  t0));  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(dt,  y0,  t0));	  luate(t0,    y0,    dt));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
201	[BUG]  [BUGGY]  luate(y0,  t0,  stepSize));  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(y0,  t0,  stepSize));  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(y0,  t0,  stepSize));	  luate(t0,    y0,    dt));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
202	[BUG]  [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
203	[BUG]  [BUGGY]  Integer  stepSize  =  dt.intValue()  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  dt.intValue()  +  1;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  dt.intValue()  +  1;	  Integer    stepSize    =    dt.intValue();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
204	[BUG]  [BUGGY]  Integer  stepSize  =  equations.intValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  equations.intValue();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  equations.intValue();	  Integer    stepSize    =    dt.intValue();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
205	[BUG]  [BUGGY]  Integer  stepSize  =  y0.intValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  y0.intValue();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  y0.intValue();	  Integer    stepSize    =    dt.intValue();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
206	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
207	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
208	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
209	[BUG]  [BUGGY]  Integer  dt  =  getInt(stepSize  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  dt  =  getInt(stepSize  +  1);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getInt(stepSize  +  1);	  Integer    dt    =    getInt(stepSize);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
210	[BUG]  [BUGGY]  Integer  dt  =  getInt(stepSize,  stepSize);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  dt  =  getInt(stepSize,  stepSize);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getInt(stepSize,  stepSize);	  Integer    dt    =    getInt(stepSize);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
211	[BUG]  [BUGGY]  Integer  dt  =  getInt(stepSize,  stepOffset);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  dt  =  getInt(stepSize,  stepOffset);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getInt(stepSize,  stepOffset);	  Integer    dt    =    getInt(stepSize);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
212	[BUG]  [BUGGY]  luate(t0,  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(t0,  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0,  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  if(stepSize    ==    dt)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
213	[BUG]  [BUGGY]  if(stepSize  ==  t)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  t)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  t)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  if(stepSize    ==    dt)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
214	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
215	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  continue	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    MethodHandler    handler    =    getStepInterpolator();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
216	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  continue	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    MethodHandler    handler    =    getStepInterpolator();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
217	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler  ==  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler  ==  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler  ==  null)  {  continue	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    MethodHandler    handler    =    getStepInterpolator();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
218	[BUG]  [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
219	[BUG]  [BUGGY]  int  stepSize  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
220	[BUG]  [BUGGY]  }  else  if(stepSize  <  dt.length  -  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  <  dt.length  -  1)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  <  dt.length  -  1)  {	  }    else    if(stepSize    >    dt.length    -    1)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
221	[BUG]  [BUGGY]  }  else  if(stepSize  ==  dt.length  -  1)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  ==  dt.length  -  1)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  ==  dt.length  -  1)  {	  }    else    if(stepSize    >    dt.length    -    1)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
222	[BUG]  [BUGGY]  }  else  if(stepSize  >=  dt.length  -  1)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  >=  dt.length  -  1)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  >=  dt.length  -  1)  {	  }    else    if(stepSize    >    dt.length    -    1)    {    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
223	[BUG]  [BUGGY]  }  else  if(stepSize  <  1)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  <  1)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  <  1)  {	  }    else    if(stepSize    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
224	[BUG]  [BUGGY]  }  else  if(stepSize  >  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  >  0)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  >  0)  {	  }    else    if(stepSize    >    1)    {    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
225	[BUG]  [BUGGY]  stepSize  =  rki;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  rki;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  rki;	  stepSize    =    t0;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
226	[BUG]  [BUGGY]  StepHandler  handler  =  getStepHandler(stepSize);  stepHandler.addChangeListener(this,  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  StepHandler  handler  =  getStepHandler(stepSize);  stepHandler.addChangeListener(this,  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	StepHandler  handler  =  getStepHandler(stepSize);  stepHandler.addChangeListener(this,	  StepHandler    handler    =    getStepHandler();    stepHandler.addChangeListener(this,    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
227	[BUG]  [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
228	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
229	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
230	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt.length;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt.length;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt.length;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
231	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  1;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  1;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
232	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  steps.length;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
233	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  step);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  step);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  step);  }	  if(stepSize    ==    0)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
234	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  step.length);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  step.length);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  step.length);  }	  if(stepSize    ==    0)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
235	[BUG]  [BUGGY]  AssertionFailedError  t  =  this.prototype.getErrorHandler();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t  =  this.prototype.getErrorHandler();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t  =  this.prototype.getErrorHandler();	  AssertionFailedError    t    =    prototype.getErrorHandler();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
236	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
237	[BUG]  [BUGGY]  Integer  stepSize  =  getLastStepInteger();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  getLastStepInteger();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  getLastStepInteger();	  Integer    stepSize    =    getStepInteger();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
238	[BUG]  [BUGGY]  Integer  stepSize  =  getStepDelta();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  getStepDelta();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  getStepDelta();	  Integer    stepSize    =    getStepInteger();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
239	[BUG]  [BUGGY]  luate(t0,  y0,  stepSize))  {  loop  =  false;  }  else  {  stepSize  =  dt;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(t0,  y0,  stepSize))  {  loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0,  y0,  stepSize))  {  loop  =  false;  }  else  {  stepSize  =  dt;  }	  if(stepSize    ==    dt)    {    loop    =    false;    }    else    {    stepSize    =    dt;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
240	[BUG]  [BUGGY]  luate(t0,  stepSize)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(t0,  stepSize)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0,  stepSize)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }	  if(stepSize    ==    dt)    {    loop    =    false;    }    else    {    stepSize    =    dt;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
241	[BUG]  [BUGGY]  luate(t0,  stepSize,  dt))  {  loop  =  false;  }  else  {  stepSize  =  dt;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(t0,  stepSize,  dt))  {  loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0,  stepSize,  dt))  {  loop  =  false;  }  else  {  stepSize  =  dt;  }	  if(stepSize    ==    dt)    {    loop    =    false;    }    else    {    stepSize    =    dt;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
242	[BUG]  [BUGGY]  luate(t0,  stepSize)  {  loop  =  false;  }  else  if(stepSize  ==  dt)  {  stepSize  =  dt;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(t0,  stepSize)  {  loop  =  false;  }  else  if(stepSize  ==  dt)  {  stepSize  =  dt;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0,  stepSize)  {  loop  =  false;  }  else  if(stepSize  ==  dt)  {  stepSize  =  dt;  }	  if(stepSize    ==    dt)    {    loop    =    false;    }    else    {    stepSize    =    dt;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
243	[BUG]  [BUGGY]  AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize);	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    false    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
244	[BUG]  [BUGGY]  AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize,  y1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize,  y1);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =  new  AssertionFailedError(t0,  stepSize,  y1);	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    false    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
245	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
246	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
247	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  false  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  false  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  false	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
248	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
249	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
250	[BUG]  [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)handler.get();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)handler.get();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  tt  =(AssertionFailedError)handler.get();	  AssertionFailedError    tt    =(AssertionFailedError)handler.clone();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
251	[BUG]  [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)handler.interpolator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)handler.interpolator();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  tt  =(AssertionFailedError)handler.interpolator();	  AssertionFailedError    tt    =(AssertionFailedError)handler.clone();    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
252	[BUG]  [BUGGY]  luate(t0,  y0,  dt.length))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(t0,  y0,  dt.length))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0,  y0,  dt.length))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  if(stepSize    ==    dt.length)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
253	[BUG]  [BUGGY]  int  stepSize  >  handler.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  handler.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  handler.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
254	[BUG]  [BUGGY]  Integer  dt  =  getStep();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  dt  =  getStep();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getStep();	  Integer    dt    =    getInstantiator();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
255	[BUG]  [BUGGY]  Integer  dt  =  getStep(stepSize);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  dt  =  getStep(stepSize);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getStep(stepSize);	  Integer    dt    =    getInstantiator();    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
256	[BUG]  [BUGGY]  luate(t0,  stepSize))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(t0,  stepSize))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0,  stepSize))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  if(stepSize    ==    t0)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
257	[BUG]  [BUGGY]  int  stepSize  >  handler.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  handler.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  handler.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
258	[BUG]  [BUGGY]  Integer  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
259	[BUG]  [BUGGY]  stepSize  =  t0  +  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  t0  +  1;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  t0  +  1;	  stepSize    =    t0;    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
260	[BUG]  [BUGGY]  Integer  dt  =  getInt(stepSize  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  dt  =  getInt(stepSize  -  1);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getInt(stepSize  -  1);	  Integer    dt    =    getInt(stepSize);    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
261	[BUG]  [BUGGY]  Integer  stepSize  =  equations.getIntValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  equations.getIntValue();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  equations.getIntValue();	  Integer    stepSize    =    dt.getIntValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
262	[BUG]  [BUGGY]  Integer  stepSize  =  dt.getStep();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  dt.getStep();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  dt.getStep();	  Integer    stepSize    =    dt.getIntValue();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
263	[BUG]  [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
264	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
265	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
266	[BUG]  [BUGGY]  Integer  dt  =  getStandardStepEquations();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  dt  =  getStandardStepEquations();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getStandardStepEquations();	  Integer    dt    =    getStandardDifferentialEquations();    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
267	[BUG]  [BUGGY]  stepSize  =  t0.nextStep();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  t0.nextStep();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  t0.nextStep();	  stepSize    =    dt.nextStep();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
268	[BUG]  [BUGGY]  int  stepSize  =  dt.stepSize;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  dt.stepSize;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt.stepSize;	  int    stepSize    =    stepSize;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
269	[BUG]  [BUGGY]  int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
270	[BUG]  [BUGGY]  Integer  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
271	[BUG]  [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)delegate.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)delegate.clone();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  tt  =(AssertionFailedError)delegate.clone();	  AssertionFailedError    tt    =(AssertionFailedError)dt.clone();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
272	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
273	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
274	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
275	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
276	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  false;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  false;  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
277	[BUG]  [BUGGY]  }  else  if(stepSize  >  lastStep)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  >  lastStep)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  >  lastStep)  {	  }    else    if(stepSize    >    nextStep)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
278	[BUG]  [BUGGY]  }  else  if(stepSize  >=  nextStep)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  >=  nextStep)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  >=  nextStep)  {	  }    else    if(stepSize    >    nextStep)    {    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
279	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  y0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  y0);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  y0);	  AssertionFailedError    t1    =    new    AssertionFailedError(t0,    stepSize,    dt);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
280	[BUG]  [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
281	[BUG]  [BUGGY]  luate(t0,  stepSize,  dt))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(t0,  stepSize,  dt))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0,  stepSize,  dt))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  luate(t0,    y0,    dt))    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
282	[BUG]  [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
283	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
284	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  k;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
285	[BUG]  [BUGGY]  AssertionFailedError  t0  =  new  AssertionFailedError(t);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =  new  AssertionFailedError(t);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =  new  AssertionFailedError(t);	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
286	[BUG]  [BUGGY]  stepSize  =  dt.getStep(0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  dt.getStep(0);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  dt.getStep(0);	  stepSize    =    dt.getStep();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
287	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
288	[BUG]  [BUGGY]  Integer  stepSize  =  equations.getInstantiator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  equations.getInstantiator();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  equations.getInstantiator();	  Integer    stepSize    =    dt.getInstantiator();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
289	[BUG]  [BUGGY]  }  else  if(stepSize  <  =  dt.length  ||  stepSize  >  dt.length)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  <  =  dt.length  ||  stepSize  >  dt.length)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  <  =  dt.length  ||  stepSize  >  dt.length)  {	  }    else    if(stepSize    >    dt.length    ||    stepSize    >    dt.length)    {    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
290	[BUG]  [BUGGY]  }  else  if(stepSize  >=  stepSize)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  >=  stepSize)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  >=  stepSize)  {	  }    else    if(stepSize    >    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
291	[BUG]  [BUGGY]  }  else  if(stepSize  ==  stepSize)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  ==  stepSize)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  ==  stepSize)  {	  }    else    if(stepSize    >    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
292	[BUG]  [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
293	[BUG]  [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
294	[BUG]  [BUGGY]  int  stepSize  =  equations.length();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  equations.length();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  equations.length();	  int    stepSize    =    dt.length();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
295	[BUG]  [BUGGY]  int  stepSize  =  this.step.length();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  this.step.length();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  this.step.length();	  int    stepSize    =    dt.length();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
296	[BUG]  [BUGGY]  AssertionFailedError  t0  =  this.prototype.getErrorHandler();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =  this.prototype.getErrorHandler();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =  this.prototype.getErrorHandler();	  AssertionFailedError    t0    =    prototype.getErrorHandler();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
297	[BUG]  [BUGGY]  AssertionFailedError  t0  =  prototype.getRuntimeErrorHandler();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =  prototype.getRuntimeErrorHandler();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =  prototype.getRuntimeErrorHandler();	  AssertionFailedError    t0    =    prototype.getErrorHandler();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
298	[BUG]  [BUGGY]  int  stepSize  =  y0.length;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  y0.length;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  y0.length;	  int    stepSize    =    dt.length;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
299	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
300	[BUG]  [BUGGY]  }  else  if(stepSize!=  nextStep)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize!=  nextStep)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize!=  nextStep)  {	  }    else    if(stepSize    ==    nextStep)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
301	[BUG]  [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
302	[BUG]  [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
303	[BUG]  [BUGGY]  int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
304	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    MethodHandler    handler    =    getStepInterpolator();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
305	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t1,  dt,  stepSize);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t1,  dt,  stepSize);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t1,  dt,  stepSize);	  AssertionFailedError    t1    =    new    AssertionFailedError(t0,    dt,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
306	[BUG]  [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)protocol.clone();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)protocol.clone();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =(AssertionFailedError)protocol.clone();	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
307	[BUG]  [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)prototype.clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)prototype.clone();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =(AssertionFailedError)prototype.clone();	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
308	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
309	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
310	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  k;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  k;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
311	[BUG]  [BUGGY]  AssertionFailedError  t  =  this.prototype.getErrorTree();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t  =  this.prototype.getErrorTree();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t  =  this.prototype.getErrorTree();	  AssertionFailedError    t    =    prototype.getErrorTree();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
312	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    MethodHandler    handler    =    getStepInterpolator();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
313	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
314	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
315	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  }	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
316	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
317	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
318	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
319	[BUG]  [BUGGY]  int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
320	[BUG]  [BUGGY]  Integer  stepSize  =  dt.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  dt.doubleValue();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  dt.doubleValue();	  Integer    stepSize    =    dt.intValue();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
321	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
322	[BUG]  [BUGGY]  luate(t0,  y0,  stepSize);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(t0,  y0,  stepSize);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0,  y0,  stepSize);	  if(stepSize    ==    0)    {    loop    =    false;    }    else    {    stepSize    =    dt;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
323	[BUG]  [BUGGY]  AssertionFailedError  rki  =  prototype.getErrorHandler();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  rki  =  prototype.getErrorHandler();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  rki  =  prototype.getErrorHandler();	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
324	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  k;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
325	[BUG]  [BUGGY]  Integer  stepSize  =  getStep();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  getStep();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  getStep();	  Integer    stepSize    =    getStepSize();    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
326	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
327	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false;  }	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
328	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
329	[BUG]  [BUGGY]  Integer  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
330	[BUG]  [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)this.em.clone();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)this.em.clone();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  tt  =(AssertionFailedError)this.em.clone();	  AssertionFailedError    tt    =(AssertionFailedError)em.clone();    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
331	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
332	[BUG]  [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
333	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
334	[BUG]  [BUGGY]  int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
335	[BUG]  [BUGGY]  }  else  if(stepSize  ==  y0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  ==  y0)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  ==  y0)  {	  }    else    if(stepSize!=    y0)    {    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
336	[BUG]  [BUGGY]  luate(t0,  y0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(t0,  y0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0,  y0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  if(stepSize    ==    dt)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
337	[BUG]  [BUGGY]  int  stepSize  >  dt.length  -  1)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length  -  1)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length  -  1)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
338	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  }	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
339	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
340	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
341	[BUG]  [BUGGY]  Integer  stepSize  =  getStepInteger(step);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  getStepInteger(step);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  getStepInteger(step);	  Integer    stepSize    =    getStepInteger();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
342	[BUG]  [BUGGY]  Integer  stepSize  =  getStepInteger(stepTime);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  getStepInteger(stepTime);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  getStepInteger(stepTime);	  Integer    stepSize    =    getStepInteger();    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
343	[BUG]  [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)this.equations.clone();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)this.equations.clone();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  tt  =(AssertionFailedError)this.equations.clone();	  AssertionFailedError    tt    =(AssertionFailedError)dt.clone();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
344	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
345	[BUG]  [BUGGY]  if(stepSize  ==  stepSize)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  stepSize)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  stepSize)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }	  if(dt    ==    stepSize)    {    loop    =    false;    }    else    {    stepSize    =    dt;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
346	[BUG]  [BUGGY]  if(stepSize  ==  step)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  step)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  step)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }	  if(dt    ==    stepSize)    {    loop    =    false;    }    else    {    stepSize    =    dt;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
347	[BUG]  [BUGGY]  stepSize  =  Math.max(stepSize,  dt.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  Math.max(stepSize,  dt.length);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  Math.max(stepSize,  dt.length);	  if(dt    ==    stepSize)    {    loop    =    false;    }    else    {    stepSize    =    dt;    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
348	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
349	[BUG]  [BUGGY]  int  stepSize  =  this.step.length;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  this.step.length;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  this.step.length;	  int    stepSize    =    dt.length;    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
350	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
351	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
352	[BUG]  [BUGGY]  while((  stepSize  <  1)||  stepSize  >  1)  {  if(stepSize  ==  0)  {  loop  =  false;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  while((  stepSize  <  1)||  stepSize  >  1)  {  if(stepSize  ==  0)  {  loop  =  false;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	while((  stepSize  <  1)||  stepSize  >  1)  {  if(stepSize  ==  0)  {  loop  =  false;  }	  if(stepSize    ==    0)    {    loop    =    false;    }    else    {    stepSize    =    dt;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
353	[BUG]  [BUGGY]  while((  stepSize  <  1)||  stepSize  >  1)  {  if(stepSize  ==  1)  {  loop  =  false;  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  while((  stepSize  <  1)||  stepSize  >  1)  {  if(stepSize  ==  1)  {  loop  =  false;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	while((  stepSize  <  1)||  stepSize  >  1)  {  if(stepSize  ==  1)  {  loop  =  false;  }	  if(stepSize    ==    0)    {    loop    =    false;    }    else    {    stepSize    =    dt;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
354	[BUG]  [BUGGY]  while((  stepSize  <  1)||  stepSize  >  1)  {  if(stepSize  ==  2)  {  loop  =  false;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  while((  stepSize  <  1)||  stepSize  >  1)  {  if(stepSize  ==  2)  {  loop  =  false;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	while((  stepSize  <  1)||  stepSize  >  1)  {  if(stepSize  ==  2)  {  loop  =  false;  }	  if(stepSize    ==    0)    {    loop    =    false;    }    else    {    stepSize    =    dt;    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
355	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
356	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
357	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
358	[BUG]  [BUGGY]  int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
359	[BUG]  [BUGGY]  int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
360	[BUG]  [BUGGY]  Integer  stepSize  =  equations.doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  equations.doubleValue();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  equations.doubleValue();	  Integer    stepSize    =    dt.intValue();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
361	[BUG]  [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
362	[BUG]  [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
363	[BUG]  [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
364	[BUG]  [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)super.clone();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =(AssertionFailedError)super.clone();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =(AssertionFailedError)super.clone();	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
365	[BUG]  [BUGGY]  AssertionFailedError  t  =  prototype.getErrorHandler2();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t  =  prototype.getErrorHandler2();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t  =  prototype.getErrorHandler2();	  AssertionFailedError    t    =    prototype.getErrorHandler();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
366	[BUG]  [BUGGY]  luate(t0,  y0,  t))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(t0,  y0,  t))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0,  y0,  t))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  luate(t0,    y0,    dt))    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
367	[BUG]  [BUGGY]  luate(y0,  t0,  dt))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(y0,  t0,  dt))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(y0,  t0,  dt))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  luate(t0,    y0,    dt))    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
368	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
369	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSteps;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  nSteps;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  nSteps;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
370	[BUG]  [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
371	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  y0,  stepSize);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  y0,  stepSize);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t0,  y0,  stepSize);	  AssertionFailedError    t1    =    new    AssertionFailedError(t0,    stepSize,    dt);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
372	[BUG]  [BUGGY]  if(stepSize  ==  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
373	[BUG]  [BUGGY]  AssertionFailedError  t0  =  prototype.getStandardError();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t0  =  prototype.getStandardError();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =  prototype.getStandardError();	  AssertionFailedError    t0    =    prototype.getErrorHandler();    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
374	[BUG]  [BUGGY]  if(stepSize  ==  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
375	[BUG]  [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
376	[BUG]  [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
377	[BUG]  [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
378	[BUG]  [BUGGY]  AssertionFailedError  t  =  prototype.getStandardErrorTree();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  AssertionFailedError  t  =  prototype.getStandardErrorTree();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t  =  prototype.getStandardErrorTree();	  AssertionFailedError    t    =    prototype.getErrorTree();    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
379	[BUG]  [BUGGY]  }  else  if(stepSize  >  t0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  >  t0)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  >  t0)  {	  }    else    if(stepSize    >    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
380	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
381	[BUG]  [BUGGY]  if(stepSize!=  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
382	[BUG]  [BUGGY]  if(stepSize!=  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
383	[BUG]  [BUGGY]  if(stepSize!=  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
384	[BUG]  [BUGGY]  if(stepSize!=  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  loop  =  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  stepSize)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  loop  =  true	  if(dt!=    null)    {    for(int    i    =    0;    i    <    steps.length;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
385	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
386	[BUG]  [BUGGY]  if(stepSize  ==  t0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  t0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  t0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
387	[BUG]  [BUGGY]  if(stepSize  ==  t0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  t0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  t0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
388	[BUG]  [BUGGY]  luate(y0,  stepSize,  dt));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luate(y0,  stepSize,  dt));  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(y0,  stepSize,  dt));	  luate(t0,    y0,    dt));    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
389	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
390	[BUG]  [BUGGY]  if(stepSize  ==  y0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  y0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  y0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  if(stepSize    ==    t0)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
391	[BUG]  [BUGGY]  int  stepSize  =  y0;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  y0;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  y0;	  int    stepSize    =    stepSize;    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
392	[BUG]  [BUGGY]  if(stepSize  >  dt)  {  loop  =  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt)  {  loop  =  false;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt)  {  loop  =  false;  }	  if(stepSize    ==    dt)    {    loop    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
393	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
394	[BUG]  [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  }	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
395	[BUG]  [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
396	[BUG]  [BUGGY]  while(dt  <  stepSize)  {  stepSize  =  dt.length;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  while(dt  <  stepSize)  {  stepSize  =  dt.length;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	while(dt  <  stepSize)  {  stepSize  =  dt.length;	  if(stepSize    ==    dt.length)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
397	[BUG]  [BUGGY]  int  stepSize  >  stepSize)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  stepSize)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  stepSize)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
398	[BUG]  [BUGGY]  int  stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
399	[BUG]  [BUGGY]  stepSize  =  dt.getStep(step);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  dt.getStep(step);  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  dt.getStep(step);	  stepSize    =    dt.getStep();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
400	[BUG]  [BUGGY]  stepSize  =  nextStep.getStep();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  nextStep.getStep();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  nextStep.getStep();	  stepSize    =    dt.getStep();    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
401	[BUG]  [BUGGY]  int  stepSize  >  dt.length  -  1)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length  -  1)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length  -  1)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
402	[BUG]  [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
403	[BUG]  [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
404	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
405	[BUG]  [BUGGY]  int  stepSize  >  dt.length  -  1)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length  -  1)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length  -  1)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
406	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
407	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  }	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
408	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  methodHandler  =  getStepInterpolator();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  methodHandler  =  getStepInterpolator();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  methodHandler  =  getStepInterpolator();  if(handler!=  null)  {  continue	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    MethodHandler    handler    =    getStepInterpolator();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
409	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  methodHandler  =  handler.getStepInterpolator();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  methodHandler  =  handler.getStepInterpolator();  if(handler!=  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  methodHandler  =  handler.getStepInterpolator();  if(handler!=  null)  {  continue	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    MethodHandler    handler    =    getStepInterpolator();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
410	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler  ==  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler  ==  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler  ==  null)  {  continue	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    MethodHandler    handler    =    getStepInterpolator();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
411	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
412	[BUG]  [BUGGY]  int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
413	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
414	[BUG]  [BUGGY]  }  else  if(stepSize  ==  nextStep  +  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  }  else  if(stepSize  ==  nextStep  +  1)  {  [BUGGY]      loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  ==  nextStep  +  1)  {	  }    else    if(stepSize    ==    nextStep)    {    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
415	[BUG]  [BUGGY]  int  stepSize  >  stepSize)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  stepSize)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  stepSize)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
416	[BUG]  [BUGGY]  int  stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  }	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
417	[BUG]  [BUGGY]  if(dt  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(dt  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  if(stepSize    ==    0)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
418	[BUG]  [BUGGY]  luateStep(t0,  y0,  stepSize))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luateStep(t0,  y0,  stepSize))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luateStep(t0,  y0,  stepSize))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  if(stepSize    ==    0)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
419	[BUG]  [BUGGY]  luateStep(t0,  y0,  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  luateStep(t0,  y0,  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luateStep(t0,  y0,  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	  if(stepSize    ==    0)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
420	[BUG]  [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  }	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
421	[BUG]  [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {	  if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
422	[BUG]  [BUGGY]  Integer  dt  =  getStepInterpolator2();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  dt  =  getStepInterpolator2();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getStepInterpolator2();	  Integer    dt    =    getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
423	[BUG]  [BUGGY]  int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
424	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  methodHandler  =  getStepInterpolator();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  methodHandler  =  getStepInterpolator();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  methodHandler  =  getStepInterpolator();  if(handler!=  null)  {  return	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    MethodHandler    handler    =    getStepInterpolator();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
425	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler  ==  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler  ==  null)  {  return	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    MethodHandler    handler    =    getStepInterpolator();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
426	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  methodHandler  =  handler.getStepInterpolator();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  methodHandler  =  handler.getStepInterpolator();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  methodHandler  =  handler.getStepInterpolator();  if(handler!=  null)  {  return	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    MethodHandler    handler    =    getStepInterpolator();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
427	[BUG]  [BUGGY]  stepSize  =  Math.max(stepSize,  dt.length));  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  Math.max(stepSize,  dt.length));  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  Math.max(stepSize,  dt.length));	  if(stepSize    ==    dt)    {    loop    =    false;    }    else    {    stepSize    =    dt;    }    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
428	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  k;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
429	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
430	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  Loop  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  Loop  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  Loop	  if(dt    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
431	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {	  if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
432	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  loop  =  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  loop  =  true;  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler    ==    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
433	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  loop  =  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  loop  =  true	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler    ==    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
434	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  loop  =  true;  }  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  loop  =  true;  }  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  loop  =  true;  }  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler    ==    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
435	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler    ==    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
436	[BUG]  [BUGGY]  stepSize  =  nextStep.nextStep();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  nextStep.nextStep();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  nextStep.nextStep();	  stepSize    =    dt.nextStep();    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
437	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  dt;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
438	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  for(int  i  =  1;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  1;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue	  for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler    ==    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
439	[BUG]  [BUGGY]  stepSize  =  st;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  stepSize  =  st;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  st;	  stepSize    =    t;    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
440	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
441	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
442	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  prototype  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  prototype  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  prototype  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
443	[BUG]  [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
444	[BUG]  [BUGGY]  Integer  stepSize  =  this.step.getInstantiator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  Integer  stepSize  =  this.step.getInstantiator();  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  this.step.getInstantiator();	  Integer    stepSize    =    dt.getInstantiator();    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
445	[BUG]  [BUGGY]  int  stepSize  >  dt.length  -  1)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  >  dt.length  -  1)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length  -  1)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
446	[BUG]  [BUGGY]  int  stepSize  =  equations.length;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  =  equations.length;  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  equations.length;	  int    stepSize    =    dt.length();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
447	[BUG]  [BUGGY]  int  stepSize  <  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  =  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	  int    stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    Handler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
448	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  false;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  false;  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
449	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  false  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  false  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  false	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
450	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  prototype  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  false;  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  prototype  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  false;  }  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  prototype  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  false;  }	  if(dt!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    false;    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
451	[BUG]  [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
452	[BUG]  [BUGGY]  int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]            loop  =  false;  }  else  {  stepSize  =  dt;  }      [BUGGY]  int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]      }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  <  =  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	  int    stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
