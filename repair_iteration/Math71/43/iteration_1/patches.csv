bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
2	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
3	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
5	[BUG]  [BUGGY]  Integer  stepSize  =  dt.intValue();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  Integer  stepSize  =  dt.intValue();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  dt.intValue();	      if(stepSize    ==    stepSize)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
6	[BUG]  [BUGGY]  Integer  stepSize  =  dt.getIntValue();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  Integer  stepSize  =  dt.getIntValue();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  dt.getIntValue();	      if(stepSize    ==    stepSize)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  int  stepSize  =  dt.length();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  =  dt.length();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt.length();	      if(stepSize    ==    stepSize)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  int  stepSize  =  dt.length;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  =  dt.length;  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  dt.length;	      if(stepSize    ==    stepSize)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  }  else  if(stepSize  >=  dt)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  }  else  if(stepSize  >=  dt)  {  [BUGGY]    loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  >=  dt)  {	  }    else    if(stepSize!=    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
10	[BUG]  [BUGGY]  }  else  if(stepSize!=  dt.length)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  }  else  if(stepSize!=  dt.length)  {  [BUGGY]    loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize!=  dt.length)  {	  }    else    if(stepSize!=    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  int  stepSize  =  stepSize;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  =  stepSize;  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  =  stepSize;	      if(stepSize    ==    stepSize)    {    for(int    i    =    0,    len    =    stepSize;    i    <    len;    ++i)    {    StepHandler    handler    =    getStepHandler();    stepHandler.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  stepSize  =  dt.nextStep();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  stepSize  =  dt.nextStep();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  dt.nextStep();	      if(stepSize    ==    stepSize)    {    for(int    i    =    0,    len    =    stepSize;    i    <    len;    ++i)    {    StepHandler    handler    =    getStepHandler();    stepHandler.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
13	[BUG]  [BUGGY]  }  else  if(stepSize  <  =  dt)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  }  else  if(stepSize  <  =  dt)  {  [BUGGY]    loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  <  =  dt)  {	  }    else    if(stepSize    ==    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  dt);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  dt);  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t0,  stepSize,  dt);	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
15	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  dt,  stepSize);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  dt,  stepSize);  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t0,  dt,  stepSize);	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
16	[BUG]  [BUGGY]  }  else  if(stepSize  <  dt.length)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  }  else  if(stepSize  <  dt.length)  {  [BUGGY]    loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  <  dt.length)  {	  }    else    if(stepSize    >    dt.length)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  }  else  if(stepSize  >=  dt.length)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  }  else  if(stepSize  >=  dt.length)  {  [BUGGY]    loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  >=  dt.length)  {	  }    else    if(stepSize    >    dt.length)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
18	[BUG]  [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
19	[BUG]  [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
20	[BUG]  [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  loop  =  true;  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler  ==  null)  {  loop  =  true;  }	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
21	[BUG]  [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
22	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	      if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
23	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();	      if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
24	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	      if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
25	[BUG]  [BUGGY]  if(stepSize  ==  dt)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  ==  dt)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  dt)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	      if(stepSize    ==    stepSize)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
26	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	      if(stepSize    ==    stepSize)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
27	[BUG]  [BUGGY]  if(stepSize  ==  t0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  ==  t0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  t0)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	      if(stepSize    ==    stepSize)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
28	[BUG]  [BUGGY]  if(stepSize  ==  dt.length)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  ==  dt.length)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  dt.length)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	      if(stepSize    ==    stepSize)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
33	[BUG]  [BUGGY]  StepHandler  handler  =  getStepHandler();  stepHandler.addChangeListener(this,  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  StepHandler  handler  =  getStepHandler();  stepHandler.addChangeListener(this,  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	StepHandler  handler  =  getStepHandler();  stepHandler.addChangeListener(this,	      if(stepSize    ==    stepSize)    {    for(int    i    =    0,    len    =    stepSize;    i    <    len;    ++i)    {    StepHandler    handler    =    getStepHandler();    stepHandler.addChangeListener(this,    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
34	[BUG]  [BUGGY]  StepHandler  handler  =  getStepHandler();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  StepHandler  handler  =  getStepHandler();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	StepHandler  handler  =  getStepHandler();	      if(stepSize    ==    stepSize)    {    for(int    i    =    0,    len    =    stepSize;    i    <    len;    ++i)    {    StepHandler    handler    =    getStepHandler();    stepHandler.addChangeListener(this,    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
37	[BUG]  [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
40	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
41	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
42	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
43	[BUG]  [BUGGY]  stepSize  =  dt;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  stepSize  =  dt;  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  dt;	      stepSize    =    stepSize;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
44	[BUG]  [BUGGY]  stepSize  =  t0;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  stepSize  =  t0;  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  t0;	      stepSize    =    stepSize;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
45	[BUG]  [BUGGY]  stepSize  -=  stepSize;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  stepSize  -=  stepSize;  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  -=  stepSize;	      stepSize    =    stepSize;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
46	[BUG]  [BUGGY]  stepSize  =  dt.length;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  stepSize  =  dt.length;  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  dt.length;	      stepSize    =    stepSize;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
47	[BUG]  [BUGGY]  }  else  if(stepSize  <  =  dt.length)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  }  else  if(stepSize  <  =  dt.length)  {  [BUGGY]    loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  <  =  dt.length)  {	  }    else    if(stepSize    ==    dt.length)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
48	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return	      if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
49	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();	      if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
50	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	      if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
51	[BUG]  [BUGGY]  if(stepSize  ==  dt)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  ==  dt)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  dt)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }	      if(stepSize    ==    stepSize)    {    loop    =    false;    }    else    {    stepSize    =    stepSize;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
52	[BUG]  [BUGGY]  if(stepSize  ==  dt)  {  loop  =  false;  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  ==  dt)  {  loop  =  false;  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  dt)  {  loop  =  false;  }	      if(stepSize    ==    stepSize)    {    loop    =    false;    }    else    {    stepSize    =    stepSize;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
53	[BUG]  [BUGGY]  if(stepSize  ==  0)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  ==  0)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  ==  0)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }	      if(stepSize    ==    stepSize)    {    loop    =    false;    }    else    {    stepSize    =    stepSize;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
54	[BUG]  [BUGGY]  Integer  stepSize  =  getStepSize();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  Integer  stepSize  =  getStepSize();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  getStepSize();	      if(stepSize    ==    stepSize)    {    for(int    i    =    0,    len    =    stepSize;    i    <    len;    ++i)    {    StepHandler    handler    =    getStepHandler();    stepHandler.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
55	[BUG]  [BUGGY]  Integer  stepSize  =  getStepInteger();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  Integer  stepSize  =  getStepInteger();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  getStepInteger();	      if(stepSize    ==    stepSize)    {    for(int    i    =    0,    len    =    stepSize;    i    <    len;    ++i)    {    StepHandler    handler    =    getStepHandler();    stepHandler.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
56	[BUG]  [BUGGY]  }  else  if(stepSize  ==  nextStep)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  }  else  if(stepSize  ==  nextStep)  {  [BUGGY]    loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  ==  nextStep)  {	  }    else    if(stepSize    ==    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
57	[BUG]  [BUGGY]  }  else  if(stepSize  ==  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  }  else  if(stepSize  ==  1)  {  [BUGGY]    loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  ==  1)  {	  }    else    if(stepSize    ==    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
58	[BUG]  [BUGGY]  luate(t0,  y0,  dt));  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  luate(t0,  y0,  dt));  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0,  y0,  dt));	      if(stepSize    ==    stepSize)    {    loop    =    false;    }    else    {    stepSize    =    stepSize;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
59	[BUG]  [BUGGY]  luate(t0,  y0,  dt))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  luate(t0,  y0,  dt))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	luate(t0,  y0,  dt))  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	      if(stepSize    ==    stepSize)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
60	[BUG]  [BUGGY]  stepSize  =  t;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  stepSize  =  t;  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  t;	      stepSize    =    stepSize;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
61	[BUG]  [BUGGY]  stepSize  =  y0;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  stepSize  =  y0;  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  y0;	      stepSize    =    stepSize;    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
62	[BUG]  [BUGGY]  AssertionFailedError  t  =  prototype.getErrorHandler();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  AssertionFailedError  t  =  prototype.getErrorHandler();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t  =  prototype.getErrorHandler();	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
63	[BUG]  [BUGGY]  AssertionFailedError  t0  =  prototype.getErrorHandler();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  AssertionFailedError  t0  =  prototype.getErrorHandler();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t0  =  prototype.getErrorHandler();	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
64	[BUG]  [BUGGY]  AssertionFailedError  t  =  prototype.getErrorTree();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  AssertionFailedError  t  =  prototype.getErrorTree();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  t  =  prototype.getErrorTree();	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
65	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
66	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
67	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
68	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
69	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
70	[BUG]  [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
71	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	      if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
72	[BUG]  [BUGGY]  Integer  dt  =  getInt(stepSize);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  Integer  dt  =  getInt(stepSize);  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getInt(stepSize);	      if(stepSize    ==    stepSize)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
73	[BUG]  [BUGGY]  Integer  stepSize  =  dt.getInstantiator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  Integer  stepSize  =  dt.getInstantiator();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  stepSize  =  dt.getInstantiator();	      if(stepSize    ==    stepSize)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
74	[BUG]  [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
75	[BUG]  [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
76	[BUG]  [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
77	[BUG]  [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false;  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false;  }	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
78	[BUG]  [BUGGY]  Integer  dt  =  getInstantiator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  Integer  dt  =  getInstantiator();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getInstantiator();	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
79	[BUG]  [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	int  stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	      if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
80	[BUG]  [BUGGY]  if(dt  ==  stepSize)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt  ==  stepSize)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt  ==  stepSize)  {  loop  =  false;  }  else  {  stepSize  =  dt;  }	      if(stepSize    ==    stepSize)    {    loop    =    false;    }    else    {    stepSize    =    stepSize;    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
81	[BUG]  [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  false;  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  false;  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  false;  }	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
82	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
83	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
84	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
85	[BUG]  [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)dt.clone();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)dt.clone();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  tt  =(AssertionFailedError)dt.clone();	      if(stepSize    ==    stepSize)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
86	[BUG]  [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)handler.clone();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)handler.clone();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  tt  =(AssertionFailedError)handler.clone();	      if(stepSize    ==    stepSize)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
87	[BUG]  [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)dt;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)dt;  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  tt  =(AssertionFailedError)dt;	      if(stepSize    ==    stepSize)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
88	[BUG]  [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)em.clone();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  AssertionFailedError  tt  =(AssertionFailedError)em.clone();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	AssertionFailedError  tt  =(AssertionFailedError)em.clone();	      if(stepSize    ==    stepSize)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
89	[BUG]  [BUGGY]  }  else  if(stepSize!=  y0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  }  else  if(stepSize!=  y0)  {  [BUGGY]    loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize!=  y0)  {	  }    else    if(stepSize!=    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
90	[BUG]  [BUGGY]  }  else  if(stepSize  >  nextStep)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  }  else  if(stepSize  >  nextStep)  {  [BUGGY]    loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  >  nextStep)  {	  }    else    if(stepSize    >    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
91	[BUG]  [BUGGY]  }  else  if(stepSize  >  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  }  else  if(stepSize  >  1)  {  [BUGGY]    loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  >  1)  {	  }    else    if(stepSize    >    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
92	[BUG]  [BUGGY]  }  else  if(stepSize  >  stepSize)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  }  else  if(stepSize  >  stepSize)  {  [BUGGY]    loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  >  stepSize)  {	  }    else    if(stepSize    >    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
93	[BUG]  [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	      if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
94	[BUG]  [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	      if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
95	[BUG]  [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	      if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    ++i)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
96	[BUG]  [BUGGY]  }  else  if(stepSize  >  dt.length  -  1)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  }  else  if(stepSize  >  dt.length  -  1)  {  [BUGGY]    loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  >  dt.length  -  1)  {	  }    else    if(stepSize    >    dt.length)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
97	[BUG]  [BUGGY]  }  else  if(stepSize  >  dt.length  ||  stepSize  >  dt.length)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  }  else  if(stepSize  >  dt.length  ||  stepSize  >  dt.length)  {  [BUGGY]    loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  >  dt.length  ||  stepSize  >  dt.length)  {	  }    else    if(stepSize    >    dt.length)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
98	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  continue	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
99	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  continue	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
100	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  continue  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  continue	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    continue    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
101	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
102	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
103	[BUG]  [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  MethodHandler  handler  =  getStepInterpolator();  if(handler!=  null)  {  return	      if(stepSize    >    dt.length)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
104	[BUG]  [BUGGY]  if(dt  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
105	[BUG]  [BUGGY]  if(dt  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true;    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
106	[BUG]  [BUGGY]  stepSize  =  dt.getStep();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  stepSize  =  dt.getStep();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	stepSize  =  dt.getStep();	      if(stepSize    ==    stepSize)    {    for(int    i    =    0,    len    =    stepSize;    i    <    len;    ++i)    {    StepHandler    handler    =    getStepHandler();    stepHandler.addChangeListener(this,    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
107	[BUG]  [BUGGY]  while(stepSize  >  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  while(stepSize  >  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	while(stepSize  >  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }	      if(stepSize    ==    stepSize)    {    throw    new    IllegalArgumentException(   "Invalid    step    size:   "    +    stepSize);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
108	[BUG]  [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  Handler  handler  =  getStepHandler();  if(handler!=  null)  {  return	      if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
109	[BUG]  [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {	      if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
110	[BUG]  [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler  ==  null)  {  return	      if(stepSize    >    dt)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    return    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
111	[BUG]  [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  }	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
112	[BUG]  [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
113	[BUG]  [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  false	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    getStepHandler();    if(handler!=    null)    {    loop    =    true    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
114	[BUG]  [BUGGY]  Integer  dt  =  getStandardDifferentialEquations();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  Integer  dt  =  getStandardDifferentialEquations();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getStandardDifferentialEquations();	      if(stepSize    ==    stepSize)    {    for(int    i    =    0,    len    =    stepSize;    i    <    len;    ++i)    {    StepHandler    handler    =    getStepHandler();    stepHandler.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
115	[BUG]  [BUGGY]  Integer  dt  =  getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  Integer  dt  =  getStepInterpolator();  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	Integer  dt  =  getStepInterpolator();	      if(stepSize    ==    stepSize)    {    for(int    i    =    0,    len    =    stepSize;    i    <    len;    ++i)    {    StepHandler    handler    =    getStepHandler();    stepHandler.addChangeListener(this);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
116	[BUG]  [BUGGY]  if(dt  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
117	[BUG]  [BUGGY]  if(dt  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]          loop  =  false;  }  else  {  stepSize  =  dt;  }    [BUGGY]  if(dt  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true  [BUGGY]    }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	if(dt  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true	      if(stepSize    ==    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    StepHandler    handler    =    prototype.getStepHandler();    if(handler!=    null)    {    return    true;    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
