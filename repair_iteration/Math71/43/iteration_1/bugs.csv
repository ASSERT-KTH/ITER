bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    stepSize  =  stepSize;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    stepSize  =  stepSize;  [BUGGY]  }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	    stepSize  =  stepSize;		non-compiled	[CE]  illegal  start  of  expression	86	None	add
2	[BUG]  [BUGGY]    if(stepSize  ==  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    if(stepSize  ==  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }  [BUGGY]  }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	    if(stepSize  ==  stepSize)  {  throw  new  IllegalArgumentException( "Invalid  step  size: "  +  stepSize);  }		non-compiled	[CE]  illegal  start  of  expression	86	None	add
3	[BUG]  [BUGGY]    if(stepSize  ==  stepSize)  {  for(int  i  =  0,  len  =  stepSize;  i  <  len;  ++i)  {  StepHandler  handler  =  getStepHandler();  stepHandler.addChangeListener(this);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    if(stepSize  ==  stepSize)  {  for(int  i  =  0,  len  =  stepSize;  i  <  len;  ++i)  {  StepHandler  handler  =  getStepHandler();  stepHandler.addChangeListener(this);  }  [BUGGY]  }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	    if(stepSize  ==  stepSize)  {  for(int  i  =  0,  len  =  stepSize;  i  <  len;  ++i)  {  StepHandler  handler  =  getStepHandler();  stepHandler.addChangeListener(this);  }		non-compiled	[CE]  illegal  start  of  expression	86	None	add
4	[BUG]  [BUGGY]    if(stepSize  ==  stepSize)  {  loop  =  false;  }  else  {  stepSize  =  stepSize;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    if(stepSize  ==  stepSize)  {  loop  =  false;  }  else  {  stepSize  =  stepSize;  }  [BUGGY]  }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	    if(stepSize  ==  stepSize)  {  loop  =  false;  }  else  {  stepSize  =  stepSize;  }		non-compiled	[CE]  illegal  start  of  expression	86	None	add
5	[BUG]  [BUGGY]    if(stepSize  ==  stepSize)  {  for(int  i  =  0,  len  =  stepSize;  i  <  len;  ++i)  {  StepHandler  handler  =  getStepHandler();  stepHandler.addChangeListener(this,  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    if(stepSize  ==  stepSize)  {  for(int  i  =  0,  len  =  stepSize;  i  <  len;  ++i)  {  StepHandler  handler  =  getStepHandler();  stepHandler.addChangeListener(this,  [BUGGY]  }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	    if(stepSize  ==  stepSize)  {  for(int  i  =  0,  len  =  stepSize;  i  <  len;  ++i)  {  StepHandler  handler  =  getStepHandler();  stepHandler.addChangeListener(this,		non-compiled	[CE]  illegal  start  of  expression	86	None	add
6	[BUG]  [BUGGY]  }  else  if(stepSize  ==  dt)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]  }  else  if(stepSize  ==  dt)  {  [BUGGY]  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  ==  dt)  {	}  else  {  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
7	[BUG]  [BUGGY]  }  else  if(stepSize  >  dt.length)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]  }  else  if(stepSize  >  dt.length)  {  [BUGGY]  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  >  dt.length)  {	}  else  {  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
8	[BUG]  [BUGGY]  }  else  if(stepSize  ==  dt.length)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]  }  else  if(stepSize  ==  dt.length)  {  [BUGGY]  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  ==  dt.length)  {	}  else  {  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
9	[BUG]  [BUGGY]  }  else  if(stepSize!=  dt)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]  }  else  if(stepSize!=  dt)  {  [BUGGY]  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize!=  dt)  {	}  else  {  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
10	[BUG]  [BUGGY]    if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]  }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	    if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	86	None	add
11	[BUG]  [BUGGY]    if(stepSize  ==  stepSize)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    if(stepSize  ==  stepSize)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]  }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	    if(stepSize  ==  stepSize)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	86	None	add
12	[BUG]  [BUGGY]    if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }  [BUGGY]  }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	    if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  loop  =  true;  }		non-compiled	[CE]  illegal  start  of  expression	86	None	add
13	[BUG]  [BUGGY]    if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }  [BUGGY]  }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	    if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  prototype.getStepHandler();  if(handler!=  null)  {  return  true;  }		non-compiled	[CE]  illegal  start  of  expression	86	None	add
14	[BUG]  [BUGGY]    if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true  [BUGGY]  }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	    if(stepSize  ==  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  loop  =  true		non-compiled	[CE]  illegal  start  of  expression	86	None	add
15	[BUG]  [BUGGY]    if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue  [BUGGY]  }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	    if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  continue		non-compiled	[CE]  illegal  start  of  expression	86	None	add
16	[BUG]  [BUGGY]    if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]  }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	    if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return		non-compiled	[CE]  illegal  start  of  expression	86	None	add
17	[BUG]  [BUGGY]    if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]  }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	    if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return		non-compiled	[CE]  illegal  start  of  expression	86	None	add
18	[BUG]  [BUGGY]    if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]  }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	    if(stepSize  >  dt.length)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return		non-compiled	[CE]  illegal  start  of  expression	86	None	add
19	[BUG]  [BUGGY]    if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]    if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return  [BUGGY]  }  else  {  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	    if(stepSize  >  dt)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  StepHandler  handler  =  getStepHandler();  if(handler!=  null)  {  return		non-compiled	[CE]  illegal  start  of  expression	86	None	add
20	[BUG]  [BUGGY]  }  else  if(stepSize  >  dt)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [BUGGY]  }  else  if(stepSize  >  dt)  {  [BUGGY]  loop  =  false;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	185	185	2	replace	}  else  if(stepSize  >  dt)  {	}  else  {  	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
