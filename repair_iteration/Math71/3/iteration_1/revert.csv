projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],a);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getRangeHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123if(stages>0){for(inti=0;i<stages;i++){finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)stages.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123if(stages>0){for(inti=0;i<stages;i++){finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)stages.get(i);y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123if(stages>0){for(inti=0;i<stages;i++){finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,yTmp,yDotK,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,yTmp,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y0,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y1,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y2,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepHandler(stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123rki.reinitialize(this,yTmp,yDotK,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123rki.reinitialize(this,yTmp,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123if(interpolator!=null){for(inti=0;i<yTmp.length;i++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123if(interpolator!=null){for(inti=0;i<yTmp.length;i++){finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)prototype.clone();}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],back);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],transient);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,dt[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(dt,yDotK[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(dt,yDotK[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,forward,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y0,yDotK,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y1,yDotK,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y2,yDotK,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)stages.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RangeKuttaStepInterpolator)stages.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],b);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(c,yDotK[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],a);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(a,yDotK[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(a,yDotK[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,yTmp,yDotK,forward,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,y0,yDotK,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,y1,yDotK,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getHeaderHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yTmp[stages-1],forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,ytmp[stages-1],forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,prototype[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,yTmp[stages-1],prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,y0,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,yTmp,yDotK,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,y1,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,yTmp,yDotK,forward,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,rki[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(rki,yDotK[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],rki,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(this);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RangeKuttaStepInterpolator)prototype.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(c,yDotK[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yObj,yDotK[stages-1],c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,y[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,dt[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,a[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,yTmp[stages-1],a);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123Interpolatorhandler=prototype.getInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123rki.reinitialize(this,yTmp,yDotK,back);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,rki[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatoryDotK=(RungeKuttaStepInterpolator)stages.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y1,yDotK[stages-1],prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardRangeHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],c,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,forward,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,r2,yDotK[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],forward,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],forward,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,backwards-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,dt[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,back);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,null);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],a,rki);
