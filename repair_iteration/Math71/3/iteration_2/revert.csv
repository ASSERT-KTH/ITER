projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],a);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getRangeHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123if(stages>0){for(inti=0;i<stages;i++){finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)stages.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123if(stages>0){for(inti=0;i<stages;i++){finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)stages.get(i);y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123if(stages>0){for(inti=0;i<stages;i++){finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,yTmp,yDotK,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,yTmp,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y0,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y1,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y2,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepHandler(stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123rki.reinitialize(this,yTmp,yDotK,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123rki.reinitialize(this,yTmp,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123if(interpolator!=null){for(inti=0;i<yTmp.length;i++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123if(interpolator!=null){for(inti=0;i<yTmp.length;i++){finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)prototype.clone();}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],back);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],transient);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,dt[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(dt,yDotK[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(dt,yDotK[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,forward,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y0,yDotK,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y1,yDotK,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y2,yDotK,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)stages.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RangeKuttaStepInterpolator)stages.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],b);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(c,yDotK[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],a);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(a,yDotK[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(a,yDotK[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,yTmp,yDotK,forward,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,y0,yDotK,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,y1,yDotK,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getHeaderHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yTmp[stages-1],forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,ytmp[stages-1],forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,prototype[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,yTmp[stages-1],prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,y0,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,yTmp,yDotK,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,y1,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,yTmp,yDotK,forward,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,rki[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(rki,yDotK[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],rki,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(this);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RangeKuttaStepInterpolator)prototype.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(c,yDotK[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yObj,yDotK[stages-1],c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,y[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,dt[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,a[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,yTmp[stages-1],a);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123Interpolatorhandler=prototype.getInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123rki.reinitialize(this,yTmp,yDotK,back);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,rki[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatoryDotK=(RungeKuttaStepInterpolator)stages.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y1,yDotK[stages-1],prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardRangeHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],c,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,forward,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,r2,yDotK[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],forward,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],forward,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,backwards-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,dt[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,back);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,null);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],a,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y0,yDotK,forward,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y1,yDotK,forward,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,stages,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,prototype[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,yTmp[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,yTmp[stages-1],prototype,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y1,yDotK,forward,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],rki,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,y0,yDotK,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,yTmp,yDotK,back);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,prototype[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,prototype[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,prototype[stages-1],t);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,prototype[stages-1],t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y2,stages,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)this.stages.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)stages.get(i+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y0,stages,yDotK-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y0,yDotK,forwards-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(rki,yDotK[stages-1],y,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,rki[stages-1],yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(rki,yDotK[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(rki,yDotK[stages-1],yTmp,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(rki,yTmp[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,rki[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,rki[stages-1],a);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(y,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(y,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(t0,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,y1,yDotK,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,y2,yDotK,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(rki,y[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,rki[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,rki[stages-1],yTmp,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(this,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(this,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,y2,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatoryDotK=(RungeKuttaStepInterpolator)prototype.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatoryDotK=(RungeKuttaStepInterpolator)this.stages.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatoryDotK=(RungeKuttaStepInterpolator)rki.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatoryDotK=(RungeKuttaStepInterpolator)clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,c[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,y[stages-1],c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(c,y0[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],interpolator,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y0,yDotK,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y0,yDotK,interface);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(rki,yDotK[stages-1],rTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,r1,yDotK[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,r0,yDotK[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,r2,yDotK[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,rki[stages-1],a,yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(rki,yDotK[stages-1],a,yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],a,rki,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],a,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yTmp[stages-1],dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,dt[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,ytmp[stages-1],dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,y0,yDotK,forward,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getRuntimeStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(t0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y1,yDotK,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],y,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],y0,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],back,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,dt[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,dt[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,dt[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],transient,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],forward,transient);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y0,yDotK,null);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,yTmp,yDotK,null);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y1,yDotK,null);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,forward,null);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,y[stages-1],dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,dt[stages-1],dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,yDotK[stages-1],dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(dt,yTmp[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,dt[stages-1],yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,dt[stages-1],a,yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RangeKuttaStepInterpolator)prototype.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RangeKuttaStepInterpolator)this.stages.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RangeKuttaStepInterpolator)clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RangeKuttaStepInterpolator)stages.get(i+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],y,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],y0,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],back,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,ytmp[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yTmp[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,ytmp[stages-1],prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yTmp[stages-1],t);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorprototype=prototype.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=prototype.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(y0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(a,yTmp[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(a,yTmp[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yTmp[stages-1],a);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123rki.reinitialize(this,y0,yDotK,back);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123rki.reinitialize(this,y1,yDotK,back);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,a[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,a[stages-1],yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y1,a[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123rki.reinitialize(this,y0,yDotK,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123rki.reinitialize(this,y1,yDotK,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],y0,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(a,y0[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(a,ytmp[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,y[stages-1],a);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,dt[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,dt[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,dt[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(dt,y[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yTmp[stages-1],t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(t0,yDotK[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,ytmp[stages-1],t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,rki[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,rki[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y2,stages,yDotK-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(y0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],back,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],startTime);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y0,yDotK,back);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y1,yDotK,back);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(a,yDotK[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(a,y0[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)super.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yTmp[stages-1],prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yTmp[stages-1],c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yObj,yTmp[stages-1],c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(c,yDotK[stages-1],yObj);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yObj,ytmp[stages-1],c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yObj,c[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(y0,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123Interpolatorhandler=rki.getInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123Interpolatorhandler=prototype.getInterpolator2();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123Interpolatorhandler=prototype.getInterpolator(t0,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y1,prototype[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y2,yDotK[stages-1],prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y1,yDotK[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y1,stages,yDotK-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,ytmp[stages-1],c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,ytmp[stages-1],a);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(t0,yDotK[stages-1],a);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(c,yTmp[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(c,y0[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,c[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,forwards-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y0,yDotK,backwards-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y1,yDotK,backwards-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepHandler(y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepHandler(y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepHandler(stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],b,c,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],a,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],c,a);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y0,yDotK,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y2,yDotK,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RangeKuttaStepInterpolator)prototype.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RangeKuttaStepInterpolator)super.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RangeKuttaStepInterpolator)prototype.remove();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(dt,y0[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,dt[stages-1],dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getHeaderHandler(stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getHeaderHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,prototype[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,y0,yDotK,forward,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,yTmp,yDotK,stages,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,y1,yDotK,forward,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,rki[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(rki,y[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,y[stages-1],rki,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],b);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(b,yDotK[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getHandler(null);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=rki.getHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)prototype.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorprototype=(RangeKuttaStepInterpolator)prototype.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123rki.reinitialize(this,y0,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123rki.reinitialize(this,t0,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123rki.initialize(this,y0,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,rki,null);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(rki,y[stages-1],rDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(y0,dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,a[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,stages[1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(t0,yDotK[stages-1],y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)stages.get(i-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorrki=(RangeKuttaStepInterpolator)stages.get(i-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123Interpolatorhandler=this.prototype.getInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,dt[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,dt[stages-1],a);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y1,rki,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(y0,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],a,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],interpolator,this);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y0,yDotK,back,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(c,y[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(c,yTmp[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,a[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yObj,c[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,prototype[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,a[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorproto=(RungeKuttaStepInterpolator)prototype.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y0,yDotK,forward,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,yTmp,yDotK,stages-1,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(t0,yDotK[stages-1],dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(dt,y0[stages-1],dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],rki,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(rki,yDotK[stages-1],y0,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],rki,this.lastStep);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123if(interpolator==null){for(inti=0;i<yTmp.length;i++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123if(interpolator==null){for(inti=0;i<yTmp.length;i++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123rki.initialize(this,y0,yDotK,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(dt,yDotK[stages-1],y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(t0,yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(t0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,a[stages-1],yDotK,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)rki).reinitialize(this,y1,yDotK,forward,stages-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,rki[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(c,yDotK[stages-1],y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepHandler(this,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getWrappedHeaderHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123Interpolatorinterpolator=newDummyStepInterpolator(y0,yDotK[stages-1],prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y1,yTmp[stages-1],prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,r3,yDotK[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,rt,y[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,yDotK[stages-1],c,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(c,yDotK[stages-1],y0,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],rki,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,yTmp[stages-1],forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getHandler(y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatoryDotK=(RungeKuttaStepInterpolator)stages.get(i+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatoryDotK=(RungeKuttaStepInterpolator)stages.get(i-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(nextStep);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(c,ytmp[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,b[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(b,yDotK[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,stages[1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,a[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(t0-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123((RungeKuttaStepInterpolator)prototype).reinitialize(this,y0,yDotK,forward-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepInterpolator(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepInterpolator(null);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,y[stages-1],c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,t0[stages-1],dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,yTmp[stages-1],a,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],b,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepInterpolator(y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,t0[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,rTmp,y[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123Interpolatorhandler=prototype.getInterpolator(y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123finalRungeKuttaStepInterpolatorproto=prototype.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(rki,yDotK[stages-1],rTmp,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,yDotK[stages-1],rki,this.nextStep);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123rki.reinitialize(this,t0,yDotK,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getHandler2();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,prototype[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,a[stages-1],yDotK,prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(rki,yTmp[stages-1],rDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(rki,y[stages-1],t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(rki,yDotK[stages-1],t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,b[stages-1],y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(steps);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,t0[stages-1],c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,c[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardStepInterpolator(y0,t1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yObj,t0[stages-1],c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y,dt[stages-1],t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,y[stages-1],a);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(a,ytmp[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123Interpolatorinterpolator=newDummyStepInterpolator(yTmp,rki[stages-1],a,yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,rTmp,yDotK[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],back,null);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yObj,dt[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(dt,y[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,dt[stages-1],yTmp,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,t0[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStandardRangeHandler(stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,y[stages-1],rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,rki[stages-1],yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yDotK,yTmp[stages-1],c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(t0,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,r2,yDotK[stages-1],a);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(y0,t0[stages-1],prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getStepHandler(this,y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123if(interpolator!=null){for(inti=0;i<yTmp.length;i++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123if(interpolator!=null){for(inti=0;i<y.length;i++){finalRungeKuttaStepInterpolatorrki=prototype.copy();rki.reinitialize(this,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],forward,interpolator,prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123yDotK[stages-1],forward,interpolator,this);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123StageHandlerhandler=prototype.getHeaderHandler(null);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,y0[stages-1],yDotK);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java123interpolator=newDummyStepInterpolator(yTmp,y[stages-1],dt);
