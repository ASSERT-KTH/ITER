bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  t0,  yTmp,  yDotK[k]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  t0,  yTmp,  yDotK[k]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(y0  +  c[k-1]  *  t0,  yTmp,  yDotK[k]);	  computeDerivatives(y0    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
2	[BUG]  [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  dt,  yTmp,  yDotK[k]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  dt,  yTmp,  yDotK[k]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(y0  +  c[k-1]  *  dt,  yTmp,  yDotK[k]);	  computeDerivatives(y0    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
3	[BUG]  [BUGGY]  computeDerivatives(dt  +  c[k-1]  *  yDotK,  yTmp,  k]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(dt  +  c[k-1]  *  yDotK,  yTmp,  k]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(dt  +  c[k-1]  *  yDotK,  yTmp,  k]);	  computeDerivatives(y0    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
4	[BUG]  [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  yDotK,  yTmp,  k]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  yDotK,  yTmp,  k]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(t0  +  c[k-1]  *  yDotK,  yTmp,  k]);	  computeDerivatives(y0    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
5	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b[  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b[  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b[	      for(int    k    =    0;    k    <    stages;    ++k)    {    double    stepSize    =    c[k-1][0]    *    yDotK[0][j];    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    b[    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b	      for(int    k    =    0;    k    <    stages;    ++k)    {    double    stepSize    =    c[k-1][0]    *    yDotK[0][j];    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    b[    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  0;  k  <  stages;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  0;  k  <  stages;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b	      for(int    k    =    0;    k    <    stages;    ++k)    {    double    stepSize    =    c[k-1][0]    *    yDotK[0][j];    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    b[    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  dt,  yTmp,  yDotK[k]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  dt,  yTmp,  yDotK[k]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(t0  +  c[k-1]  *  dt,  yTmp,  yDotK[k]);	  computeDerivatives(dt    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
9	[BUG]  [BUGGY]  computeDerivatives(dt  +  c[k-1]  *  y0,  yTmp,  yDotK[k]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(dt  +  c[k-1]  *  y0,  yTmp,  yDotK[k]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(dt  +  c[k-1]  *  y0,  yTmp,  yDotK[k]);	  computeDerivatives(dt    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
10	[BUG]  [BUGGY]  computeDerivatives(yTmp  +  c[k-1]  *  stepSize,  yTmp,  dt[k]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(yTmp  +  c[k-1]  *  stepSize,  yTmp,  dt[k]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(yTmp  +  c[k-1]  *  stepSize,  yTmp,  dt[k]);	  computeDerivatives(dt    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
11	[BUG]  [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  yDotK,  yTmp,  stepSize);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  yDotK,  yTmp,  stepSize);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(t0  +  c[k-1]  *  yDotK,  yTmp,  stepSize);	  computeDerivatives(dt    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
12	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
13	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  0;  k  <  y0.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
14	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  b[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  b[k-1][0]  *  yDotK[0][j];  }  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  sum  +=  b[k-1][0]  *  yDotK[0][j];  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
15	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
16	[BUG]  [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  y0,  yTmp,  yDotK[k]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  y0,  yTmp,  yDotK[k]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(t0  +  c[k-1]  *  y0,  yTmp,  yDotK[k]);	  computeDerivatives(k    +    c[k-1]    *    y0,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
17	[BUG]  [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  y0,  yTmp,  sum,  yDotK[k]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  y0,  yTmp,  sum,  yDotK[k]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(y0  +  c[k-1]  *  y0,  yTmp,  sum,  yDotK[k]);	  computeDerivatives(k    +    c[k-1]    *    y0,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
18	[BUG]  [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  y0,  yTmp,  k]);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  y0,  yTmp,  k]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(y0  +  c[k-1]  *  y0,  yTmp,  k]);	  computeDerivatives(k    +    c[k-1]    *    y0,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
19	[BUG]  [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  rki,  yTmp,  yDotK[k]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  rki,  yTmp,  yDotK[k]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(t0  +  c[k-1]  *  rki,  yTmp,  yDotK[k]);	  computeDerivatives(t0    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
20	[BUG]  [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  yDotK[k],  yTmp,  stepSize);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  yDotK[k],  yTmp,  stepSize);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(t0  +  c[k-1]  *  yDotK[k],  yTmp,  stepSize);	  computeDerivatives(t0    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  computeDerivatives(yTmp,  c[k-1]  *  stepSize,  yTmp,  stepSize);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(yTmp,  c[k-1]  *  stepSize,  yTmp,  stepSize);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(yTmp,  c[k-1]  *  stepSize,  yTmp,  stepSize);	  computeDerivatives(yTmp    +    c[k-1]    *    stepSize,    yTmp,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
22	[BUG]  [BUGGY]  computeDerivatives(yTmp  +  c[k-1]  *  dt,  yTmp,  stepSize);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(yTmp  +  c[k-1]  *  dt,  yTmp,  stepSize);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(yTmp  +  c[k-1]  *  dt,  yTmp,  stepSize);	  computeDerivatives(yTmp    +    c[k-1]    *    stepSize,    yTmp,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
23	[BUG]  [BUGGY]  computeDerivatives(yTmp  +  c[k-1]  *  t0,  yTmp,  stepSize);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(yTmp  +  c[k-1]  *  t0,  yTmp,  stepSize);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(yTmp  +  c[k-1]  *  t0,  yTmp,  stepSize);	  computeDerivatives(yTmp    +    c[k-1]    *    stepSize,    yTmp,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
24	[BUG]  [BUGGY]  computeDerivatives(dt  +  c[k-1]  *  stepSize,  yTmp,  stepSize);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(dt  +  c[k-1]  *  stepSize,  yTmp,  stepSize);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(dt  +  c[k-1]  *  stepSize,  yTmp,  stepSize);	  computeDerivatives(yTmp    +    c[k-1]    *    stepSize,    yTmp,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
25	[BUG]  [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  t0,  yTmp,  stepSize);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  t0,  yTmp,  stepSize);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(y0  +  c[k-1]  *  t0,  yTmp,  stepSize);	  computeDerivatives(y0    +    c[k-1]    *    stepSize,    yTmp,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
26	[BUG]  [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  dt,  yTmp,  stepSize);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  dt,  yTmp,  stepSize);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(y0  +  c[k-1]  *  dt,  yTmp,  stepSize);	  computeDerivatives(y0    +    c[k-1]    *    stepSize,    yTmp,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
27	[BUG]  [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  stepSize,  yTmp,  stepSize);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  stepSize,  yTmp,  stepSize);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(t0  +  c[k-1]  *  stepSize,  yTmp,  stepSize);	  computeDerivatives(y0    +    c[k-1]    *    stepSize,    yTmp,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
28	[BUG]  [BUGGY]  double  stepSize  =  a[k-1]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  double  stepSize  =  a[k-1]  *  yDotK[1][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	double  stepSize  =  a[k-1]  *  yDotK[1][j];	      double    stepSize    =    c[k-1]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
29	[BUG]  [BUGGY]  double  stepSize  =  b[k-1]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  double  stepSize  =  b[k-1]  *  yDotK[1][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	double  stepSize  =  b[k-1]  *  yDotK[1][j];	      double    stepSize    =    c[k-1]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
30	[BUG]  [BUGGY]  double  stepSize  =  yTmp[k-1]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  double  stepSize  =  yTmp[k-1]  *  yDotK[1][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	double  stepSize  =  yTmp[k-1]  *  yDotK[1][j];	      double    stepSize    =    c[k-1]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
31	[BUG]  [BUGGY]  int  stepSize  =  c.length  -  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  stepSize  =  c.length  -  1;  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  stepSize  =  c.length  -  1;	      int    stepSize    =    c.length;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
32	[BUG]  [BUGGY]  int  stepSize  =  k.length;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  stepSize  =  k.length;  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  stepSize  =  k.length;	      int    stepSize    =    c.length;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  int  stepSize  =  c.length  -  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  stepSize  =  c.length  -  2;  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  stepSize  =  c.length  -  2;	      int    stepSize    =    c.length;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
34	[BUG]  [BUGGY]  int  stepSize  =  k;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  stepSize  =  k;  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  stepSize  =  k;	      int    stepSize    =    c.length;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
35	[BUG]  [BUGGY]  int  stepSize  =  b[k-1][0]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  stepSize  =  b[k-1][0]  *  yDotK[0][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  stepSize  =  b[k-1][0]  *  yDotK[0][j];	      int    stepSize    =    c[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
36	[BUG]  [BUGGY]  int  stepSize  =  a[k-1][0]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  stepSize  =  a[k-1][0]  *  yDotK[0][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  stepSize  =  a[k-1][0]  *  yDotK[0][j];	      int    stepSize    =    c[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
37	[BUG]  [BUGGY]  computeDerivatives(yTmp[k-1]  *  c,  yDotK[k]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(yTmp[k-1]  *  c,  yDotK[k]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(yTmp[k-1]  *  c,  yDotK[k]);	  computeDerivatives(k    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
38	[BUG]  [BUGGY]  int  stepSize  =  b[k-1][0]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  stepSize  =  b[k-1][0]  *  yDotK[1][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  stepSize  =  b[k-1][0]  *  yDotK[1][j];	      int    stepSize    =    c[k-1][0]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
39	[BUG]  [BUGGY]  int  stepSize  =  a[k-1][0]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  stepSize  =  a[k-1][0]  *  yDotK[1][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  stepSize  =  a[k-1][0]  *  yDotK[1][j];	      int    stepSize    =    c[k-1][0]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
40	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  0;  k  <  y0.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
41	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  c.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  0;  k  <  c.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  0;  k  <  c.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
42	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
43	[BUG]  [BUGGY]  int  k  =  0;  k  <  stages;  ++k)  {  for(int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  k  =  0;  k  <  stages;  ++k)  {  for(int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  k  =  0;  k  <  stages;  ++k)  {  for(int  k  =  0;  k  <  c.length;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
44	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];	      for(int    k    =    0;    k    <    stages;    ++k)    {    double    stepSize    =    c[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
45	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];	      for(int    k    =    0;    k    <    stages;    ++k)    {    double    stepSize    =    c[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  double  stepSize  =  b[k-1][0]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  double  stepSize  =  b[k-1][0]  *  yDotK[0][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  double  stepSize  =  b[k-1][0]  *  yDotK[0][j];	      for(int    k    =    0;    k    <    stages;    ++k)    {    double    stepSize    =    c[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
47	[BUG]  [BUGGY]  double  stepSize  =  a[k-1][0]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  double  stepSize  =  a[k-1][0]  *  yDotK[0][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	double  stepSize  =  a[k-1][0]  *  yDotK[0][j];	      double    stepSize    =    c[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
48	[BUG]  [BUGGY]  double  stepSize  =  b[k-1][0]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  double  stepSize  =  b[k-1][0]  *  yDotK[0][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	double  stepSize  =  b[k-1][0]  *  yDotK[0][j];	      double    stepSize    =    c[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
49	[BUG]  [BUGGY]  double  stepSize  =  y[k-1][0]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  double  stepSize  =  y[k-1][0]  *  yDotK[0][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	double  stepSize  =  y[k-1][0]  *  yDotK[0][j];	      double    stepSize    =    c[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
50	[BUG]  [BUGGY]  double  stepSize  =  a[k-1][0]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  double  stepSize  =  a[k-1][0]  *  yDotK[1][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	double  stepSize  =  a[k-1][0]  *  yDotK[1][j];	      double    stepSize    =    c[k-1][0]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
51	[BUG]  [BUGGY]  double  stepSize  =  b[k-1][0]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  double  stepSize  =  b[k-1][0]  *  yDotK[1][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	double  stepSize  =  b[k-1][0]  *  yDotK[1][j];	      double    stepSize    =    c[k-1][0]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
52	[BUG]  [BUGGY]  double  stepSize  =  y[k-1][0]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  double  stepSize  =  y[k-1][0]  *  yDotK[1][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	double  stepSize  =  y[k-1][0]  *  yDotK[1][j];	      double    stepSize    =    c[k-1][0]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
53	[BUG]  [BUGGY]  double  stepSize  =  b[k-1]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  double  stepSize  =  b[k-1]  *  yDotK[0][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	double  stepSize  =  b[k-1]  *  yDotK[0][j];	      double    stepSize    =    c[k-1]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
54	[BUG]  [BUGGY]  double  stepSize  =  a[k-1]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  double  stepSize  =  a[k-1]  *  yDotK[0][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	double  stepSize  =  a[k-1]  *  yDotK[0][j];	      double    stepSize    =    c[k-1]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  double  stepSize  =  y[k-1]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  double  stepSize  =  y[k-1]  *  yDotK[0][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	double  stepSize  =  y[k-1]  *  yDotK[0][j];	      double    stepSize    =    c[k-1]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
56	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
57	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  0;  k  <  y0.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
58	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  c.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  0;  k  <  c.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  0;  k  <  c.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
59	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b[k-1][0]  *  yDotK[0][j];  }  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b[k-1][0]  *  yDotK[0][j];  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
60	[BUG]  [BUGGY]  double  stepSize  =  y[k-1]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  double  stepSize  =  y[k-1]  *  yDotK[1][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	double  stepSize  =  y[k-1]  *  yDotK[1][j];	      double    stepSize    =    c[k-1]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
61	[BUG]  [BUGGY]  int  k  =  0;  k  <  y0.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  k  =  0;  k  <  y0.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  k  =  0;  k  <  y0.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[1][j];  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
62	[BUG]  [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  y0,  yTmp,  yDotK[k]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  y0,  yTmp,  yDotK[k]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(y0  +  c[k-1]  *  y0,  yTmp,  yDotK[k]);	  computeDerivatives(k    +    c[k-1]    *    y0,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
63	[BUG]  [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  yDotK,  yTmp,  k]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  yDotK,  yTmp,  k]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(y0  +  c[k-1]  *  yDotK,  yTmp,  k]);	  computeDerivatives(k    +    c[k-1]    *    y0,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
64	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[1][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[1][j];	      for(int    k    =    0;    k    <    stages;    ++k)    {    double    stepSize    =    c[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
65	[BUG]  [BUGGY]  computeDerivatives(yTmp  +  c[k-1]  *  y0,  yTmp,  stepSize);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(yTmp  +  c[k-1]  *  y0,  yTmp,  stepSize);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(yTmp  +  c[k-1]  *  y0,  yTmp,  stepSize);	  computeDerivatives(yTmp    +    c[k-1]    *    stepSize,    yTmp,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
66	[BUG]  [BUGGY]  computeDerivatives(y0,  yTmp[k-1]  *  stepSize,  c,  yDotK[k]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(y0,  yTmp[k-1]  *  stepSize,  c,  yDotK[k]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(y0,  yTmp[k-1]  *  stepSize,  c,  yDotK[k]);	  computeDerivatives(k    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
67	[BUG]  [BUGGY]  int  stepSize  =  y[k-1][0]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  stepSize  =  y[k-1][0]  *  yDotK[1][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  stepSize  =  y[k-1][0]  *  yDotK[1][j];	      int    stepSize    =    c[k-1][0]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
68	[BUG]  [BUGGY]  int  stepSize  =  yTmp[k-1][0]  *  yDotK[1][j];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  stepSize  =  yTmp[k-1][0]  *  yDotK[1][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  stepSize  =  yTmp[k-1][0]  *  yDotK[1][j];	      int    stepSize    =    c[k-1][0]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
69	[BUG]  [BUGGY]  int  k  =  0;  k  <  y0.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  k  =  0;  k  <  y0.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  k  =  0;  k  <  y0.length;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  c[k-1][0]  *  yDotK[0][j];  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
70	[BUG]  [BUGGY]  int  stepSize  =  y[k-1][0]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  stepSize  =  y[k-1][0]  *  yDotK[0][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  stepSize  =  y[k-1][0]  *  yDotK[0][j];	      int    stepSize    =    c[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
71	[BUG]  [BUGGY]  int  stepSize  =  c.length  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  stepSize  =  c.length  +  1;  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  stepSize  =  c.length  +  1;	      int    stepSize    =    c.length;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
72	[BUG]  [BUGGY]  int  stepSize  =  y0.length;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  stepSize  =  y0.length;  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  stepSize  =  y0.length;	      int    stepSize    =    c.length;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
73	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=	      for(int    k    =    0;    k    <    stages;    ++k)    {    double    stepSize    =    c[k-1][0]    *    yDotK[0][j];    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    b[    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
74	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {	      for(int    k    =    0;    k    <    stages;    ++k)    {    double    stepSize    =    c[k-1][0]    *    yDotK[0][j];    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    b[    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
75	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b	      for(int    k    =    0;    k    <    stages;    ++k)    {    double    stepSize    =    c[k-1][0]    *    yDotK[0][j];    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    b[    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
76	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum	      for(int    k    =    0;    k    <    stages;    ++k)    {    double    stepSize    =    c[k-1][0]    *    yDotK[0][j];    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    b[    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
77	[BUG]  [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  yDotK,  yTmp,  stepSize);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  yDotK,  yTmp,  stepSize);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(y0  +  c[k-1]  *  yDotK,  yTmp,  stepSize);	  computeDerivatives(y0    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
78	[BUG]  [BUGGY]  computeDerivatives(y0,  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(y0,  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(y0,  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);	  computeDerivatives(k    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
79	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b[k-1][0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b[k-1][0]  *  yDotK[1][j];  }  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b[k-1][0]  *  yDotK[1][j];  }	      for(int    k    =    0;    k    <    stages;    ++k)    {    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    c[k-1][0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
80	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  c.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  0;  k  <  c.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  0;  k  <  c.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];	      for(int    k    =    0;    k    <    stages;    ++k)    {    double    stepSize    =    c[k-1][0]    *    yDotK[0][j];    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
81	[BUG]  [BUGGY]  computeDerivatives(dt  +  c[k-1]  *  yDotK,  yTmp,  stepSize]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(dt  +  c[k-1]  *  yDotK,  yTmp,  stepSize]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(dt  +  c[k-1]  *  yDotK,  yTmp,  stepSize]);	  computeDerivatives(dt    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
82	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b[  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b[  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	for(int  k  =  0;  k  <  y0.length;  ++k)  {  double  stepSize  =  c[k-1][0]  *  yDotK[0][j];  for(int  k  =  0;  k  <  stages;  ++k)  {  sum  +=  b[	      for(int    k    =    0;    k    <    stages;    ++k)    {    double    stepSize    =    c[k-1][0]    *    yDotK[0][j];    for(int    k    =    0;    k    <    stages;    ++k)    {    sum    +=    b[    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
83	[BUG]  [BUGGY]  computeDerivatives(k  +  c[k-1]  *  yDotK,  yTmp,  k]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(k  +  c[k-1]  *  yDotK,  yTmp,  k]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(k  +  c[k-1]  *  yDotK,  yTmp,  k]);	  computeDerivatives(k    +    c[k-1]    *    y0,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
84	[BUG]  [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  yTmp,  k,  stepSize);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  yTmp,  k,  stepSize);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(y0  +  c[k-1]  *  yTmp,  k,  stepSize);	  computeDerivatives(y0    +    c[k-1]    *    stepSize,    yTmp,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
85	[BUG]  [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  ytmp,  k,  stepSize);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  ytmp,  k,  stepSize);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(y0  +  c[k-1]  *  ytmp,  k,  stepSize);	  computeDerivatives(y0    +    c[k-1]    *    stepSize,    yTmp,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
86	[BUG]  [BUGGY]  int  stepSize  =  c[k-1][0]  *  yDotK[1][j]  +  1;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  stepSize  =  c[k-1][0]  *  yDotK[1][j]  +  1;  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  stepSize  =  c[k-1][0]  *  yDotK[1][j]  +  1;	      int    stepSize    =    c[k-1][0]    *    yDotK[1][j];    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
87	[BUG]  [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  yDotK,  yTmp,  stepSize]);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  yDotK,  yTmp,  stepSize]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(t0  +  c[k-1]  *  yDotK,  yTmp,  stepSize]);	  computeDerivatives(t0    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
88	[BUG]  [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  yDotK,  yTmp,  stepSize));  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(t0  +  c[k-1]  *  yDotK,  yTmp,  stepSize));  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(t0  +  c[k-1]  *  yDotK,  yTmp,  stepSize));	  computeDerivatives(t0    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
89	[BUG]  [BUGGY]  int  stepSize  =  stages.length;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  int  stepSize  =  stages.length;  [BUGGY]    computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	int  stepSize  =  stages.length;	      int    stepSize    =    c.length;    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
90	[BUG]  [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  yDotK,  yTmp,  stepSize]);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }    [BUGGY]  computeDerivatives(y0  +  c[k-1]  *  yDotK,  yTmp,  stepSize]);  [BUGGY]      }  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	157	157	2	replace	computeDerivatives(y0  +  c[k-1]  *  yDotK,  yTmp,  stepSize]);	  computeDerivatives(y0    +    c[k-1]    *    stepSize,    yTmp,    yDotK[k]);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
