projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300hNew=Math.abs(dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300hNew=Math.min(hNew,dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300hNew=Math.max(hNew,dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300hNew=dt;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300hNew=Math.abs(dt)-stepSize;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300loop=false;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300loop=true;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300LooperhNew=(Looper)super.evaluate(rki,dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300LooperhNew=(Looper)super.evaluate(rki,dt);loop=true;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300LooperhNew=(Looper)super.evaluate(rki,t0,dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300hNew=Math.max(hNew,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300loop="";
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300loop=null;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300LooperhNew=loopedStepInterpolator.evaluateStep(interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300LooperhNew=loopedStepInterpolator.evaluateStep(interpolator,dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300LooperhNew=loopedStepInterpolator.evaluateStep(manager,dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java300hNew=Math.floor(hNew);
