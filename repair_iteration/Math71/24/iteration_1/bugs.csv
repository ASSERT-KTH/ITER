bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]    if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }  [BUGGY]  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	    if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }		non-compiled	[CE]  illegal  start  of  expression	48	None	add
2	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]    if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	    if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }		non-compiled	[CE]  illegal  start  of  expression	48	None	add
3	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [BUGGY]  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }		non-compiled	[CE]  illegal  start  of  expression	48	None	add
4	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }		non-compiled	[CE]  illegal  start  of  expression	48	None	add
5	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	    if(interpolator!=  null)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }		non-compiled	[CE]  illegal  start  of  expression	48	None	add
6	[BUG]  [BUGGY]  for(boolean  loop  =  false;  loop;)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]  for(boolean  loop  =  false;  loop;)  {  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(boolean  loop  =  false;  loop;)  {	for  (boolean  loop  =  true;  loop;)  {  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
7	[BUG]  [BUGGY]  for(int  loop  =  0;  loop!=  0;)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]  for(int  loop  =  0;  loop!=  0;)  {  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop!=  0;)  {	for  (boolean  loop  =  true;  loop;)  {  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
8	[BUG]  [BUGGY]  for(int  loop  =  0;  loop  ==  0;)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]  for(int  loop  =  0;  loop  ==  0;)  {  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop  ==  0;)  {	for  (boolean  loop  =  true;  loop;)  {  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
9	[BUG]  [BUGGY]  for(int  loop  =  1;  loop!=  0;)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]  for(int  loop  =  1;  loop!=  0;)  {  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  1;  loop!=  0;)  {	for  (boolean  loop  =  true;  loop;)  {  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
10	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }		non-compiled	[CE]  illegal  start  of  expression	48	None	add
11	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }		non-compiled	[CE]  illegal  start  of  expression	48	None	add
12	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }		non-compiled	[CE]  illegal  start  of  expression	48	None	add
13	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [BUGGY]  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }		non-compiled	[CE]  illegal  start  of  expression	48	None	add
14	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }		non-compiled	[CE]  illegal  start  of  expression	48	None	add
15	[BUG]  [BUGGY]  for(int  loop  =  0;  loop!=  null;)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]  for(int  loop  =  0;  loop!=  null;)  {  [BUGGY]    computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop!=  null;)  {	for  (boolean  loop  =  true;  loop;)  {  	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
16	[BUG]  [BUGGY]    StageHandler  stageHandler  =  handler.getStepHandler();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]    StageHandler  stageHandler  =  handler.getStepHandler();  [BUGGY]  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	    StageHandler  stageHandler  =  handler.getStepHandler();		non-compiled	[CE]  illegal  start  of  expression	48	None	add
17	[BUG]  [BUGGY]    StageHandler  stageHandler  =  handler.getStepHandler(t0);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]    StageHandler  stageHandler  =  handler.getStepHandler(t0);  [BUGGY]  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	    StageHandler  stageHandler  =  handler.getStepHandler(t0);		non-compiled	[CE]  illegal  start  of  expression	48	None	add
18	[BUG]  [BUGGY]    StageHandler  stageHandler  =  handler.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]    StageHandler  stageHandler  =  handler.getStepInterpolator();  [BUGGY]  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	    StageHandler  stageHandler  =  handler.getStepInterpolator();		non-compiled	[CE]  illegal  start  of  expression	48	None	add
19	[BUG]  [BUGGY]    StageHandler  stageHandler  =  handler.getStepHandler(t0,  t);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]    StageHandler  stageHandler  =  handler.getStepHandler(t0,  t);  [BUGGY]  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	    StageHandler  stageHandler  =  handler.getStepHandler(t0,  t);		non-compiled	[CE]  illegal  start  of  expression	48	None	add
20	[BUG]  [BUGGY]    StageHandler  stageHandler  =  handler.getTickHandler();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [BUGGY]    StageHandler  stageHandler  =  handler.getTickHandler();  [BUGGY]  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	    StageHandler  stageHandler  =  handler.getTickHandler();		non-compiled	[CE]  illegal  start  of  expression	48	None	add
