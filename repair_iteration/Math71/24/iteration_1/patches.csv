bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  loop  =  0;  loop  <  yDotK.length;)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  loop  =  0;  loop  <  yDotK.length;)  {  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop  <  yDotK.length;)  {	  for(int    loop    =    0;    loop    ==    0;)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  for(int  loop  =  1;  loop  ==  0;)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  loop  =  1;  loop  ==  0;)  {  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  1;  loop  ==  0;)  {	  for(int    loop    =    0;    loop    ==    0;)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  for(int  loop  =  0;  loop  <  2;)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  loop  =  0;  loop  <  2;)  {  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop  <  2;)  {	  for(int    loop    =    0;    loop    ==    0;)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
5	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
6	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i  +  1);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i  +  1);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  for(int  loop  =  1;  loop!=  null;)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  loop  =  1;  loop!=  null;)  {  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  1;  loop!=  null;)  {	  for(int    loop    =    0;    loop!=    null;)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
13	[BUG]  [BUGGY]  for(int  l  =  0;  l!=  null;)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  l  =  0;  l!=  null;)  {  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  l  =  0;  l!=  null;)  {	  for(int    loop    =    0;    loop!=    null;)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
18	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interpolator.getStepHandler();	      StageHandler    stageHandler    =    handler.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
19	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  prototype.getStepHandler();	      StageHandler    stageHandler    =    handler.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
20	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getStepHandler();	      StageHandler    stageHandler    =    handler.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
21	[BUG]  [BUGGY]  for(int  loop  =  false;  loop!=  0;)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  loop  =  false;  loop!=  0;)  {  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  false;  loop!=  0;)  {	  for(boolean    loop    =    false;    loop;)    {    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepInterpolator();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interpolator.getStepInterpolator();	      StageHandler    stageHandler    =    handler.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
23	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  prototype.getStepInterpolator();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  prototype.getStepInterpolator();	      StageHandler    stageHandler    =    handler.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
24	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepInterpolator();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepInterpolator();	      StageHandler    stageHandler    =    handler.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
25	[BUG]  [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler(t0,  interpolator);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler(t0,  interpolator);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  handler.getStepHandler(t0,  interpolator);	      StageHandler    stageHandler    =    handler.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
26	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  t);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  t);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  t);	      StageHandler    stageHandler    =    handler.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
27	[BUG]  [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler(t0,  t,  interpolator);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler(t0,  t,  interpolator);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  handler.getStepHandler(t0,  t,  interpolator);	      StageHandler    stageHandler    =    handler.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
28	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  t);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  t);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  t);	      StageHandler    stageHandler    =    handler.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
29	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
30	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
34	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
35	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
36	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(a,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(a,  y[i][0],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(a,  y[i][0],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
37	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][0]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
41	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
42	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
43	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0][0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0][0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0][0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
44	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
45	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
48	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y2,  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
49	[BUG]  [BUGGY]  for(int  loop  =  0;  loop  >=  0;)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  loop  =  0;  loop  >=  0;)  {  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop  >=  0;)  {	  for(int    loop    =    0;    loop!=    0;)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
50	[BUG]  [BUGGY]  StageHandler  stageHandler  =  handler.getTickHandler(t0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  handler.getTickHandler(t0);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  handler.getTickHandler(t0);	      StageHandler    stageHandler    =    handler.getTickHandler();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
51	[BUG]  [BUGGY]  StageHandler  stageHandler  =  handler.getTickHandler(interpolator);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  handler.getTickHandler(interpolator);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  handler.getTickHandler(interpolator);	      StageHandler    stageHandler    =    handler.getTickHandler();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
52	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
58	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
59	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
60	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interpolator.getStepHandler(t0);	      StageHandler    stageHandler    =    handler.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
61	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepHandler(t0);	      StageHandler    stageHandler    =    handler.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
62	[BUG]  [BUGGY]  for(int  loop  =  1;  loop  >=  0;)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  loop  =  1;  loop  >=  0;)  {  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  1;  loop  >=  0;)  {	  for(int    loop    =    1;    loop!=    0;)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
63	[BUG]  [BUGGY]  for(int  loop  =  1;  loop  <  yDotK.length;)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  loop  =  1;  loop  <  yDotK.length;)  {  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  1;  loop  <  yDotK.length;)  {	  for(int    loop    =    1;    loop!=    0;)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
64	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0,  t);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0,  t);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0,  t);	      StageHandler    stageHandler    =    handler.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
65	[BUG]  [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler(t0,  y);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler(t0,  y);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  handler.getStepHandler(t0,  y);	      StageHandler    stageHandler    =    handler.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
66	[BUG]  [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler(interpolator);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler(interpolator);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  handler.getStepHandler(interpolator);	      StageHandler    stageHandler    =    handler.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
67	[BUG]  [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator();	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
68	[BUG]  [BUGGY]  Preconditions.checkState(interpolator!=  null);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  Preconditions.checkState(interpolator!=  null);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(interpolator!=  null);	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
69	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Interpolator  interpolator  =  manager.getInterpolator(t0);	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
70	[BUG]  [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y);	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
71	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
72	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
73	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
74	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
75	[BUG]  [BUGGY]  for(int  loop  =  0;  loop  <  y0.length;)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  loop  =  0;  loop  <  y0.length;)  {  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop  <  y0.length;)  {	  for(int    loop    =    0;    loop    ==    0;)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
76	[BUG]  [BUGGY]  for(int  loop  =  0;  loop  <  0;)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  loop  =  0;  loop  <  0;)  {  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop  <  0;)  {	  for(int    loop    =    0;    loop    ==    0;)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
77	[BUG]  [BUGGY]  for(int  loop  =  0;  loop  ==  null;)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  loop  =  0;  loop  ==  null;)  {  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop  ==  null;)  {	  for(int    loop    =    0;    loop!=    null;)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
78	[BUG]  [BUGGY]  for(int  loop  =  0;  loop  >=  null;)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  loop  =  0;  loop  >=  null;)  {  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop  >=  null;)  {	  for(int    loop    =    0;    loop!=    null;)    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
79	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
80	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
81	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
82	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
83	[BUG]  [BUGGY]  for(int  loop  =  1;  loop  <  0;)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  for(int  loop  =  1;  loop  <  0;)  {  [BUGGY]      computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  1;  loop  <  0;)  {	  for(int    loop    =    1;    loop!=    0;)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
84	[BUG]  [BUGGY]  AssertionFailedError  t0  =  handler.getErrorHandler();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  AssertionFailedError  t0  =  handler.getErrorHandler();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedError  t0  =  handler.getErrorHandler();	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
85	[BUG]  [BUGGY]  Interpolator  interpolator  =  getInterpolator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  Interpolator  interpolator  =  getInterpolator();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Interpolator  interpolator  =  getInterpolator();	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
86	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
87	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
88	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
89	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
90	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
91	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
92	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
93	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
94	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
95	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[1][i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[1][i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[1][i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
96	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
97	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
98	[BUG]  [BUGGY]  AssertionFailedToIntegrator  prototype  =  handler.getIntegrator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  AssertionFailedToIntegrator  prototype  =  handler.getIntegrator();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  prototype  =  handler.getIntegrator();	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
99	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepInterpolator();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfacesManager.getStepInterpolator();	      StageHandler    stageHandler    =    handler.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
100	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  t);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  t);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(t0,  t);	      StageHandler    stageHandler    =    handler.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
101	[BUG]  [BUGGY]  StageHandler  stageHandler  =  handler.getStandardTickHandler();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  handler.getStandardTickHandler();  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  handler.getStandardTickHandler();	      StageHandler    stageHandler    =    handler.getTickHandler();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
102	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
103	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
104	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
105	[BUG]  [BUGGY]  if(lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
106	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(interpolator!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
107	[BUG]  [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
108	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
109	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
110	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
111	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
112	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
113	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  y[0][i]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  y[0][i]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
114	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(interpolator!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
115	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
116	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(interpolator!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }	      if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
117	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
118	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
119	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
120	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0);  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0);	      StageHandler    stageHandler    =    handler.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
121	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
122	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
123	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
124	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
125	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
126	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
127	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
128	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();    [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [BUGGY]    for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
