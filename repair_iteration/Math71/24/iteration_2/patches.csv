bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
2	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
3	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
4	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStandardStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  prototype.getStandardStepInterpolator();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  prototype.getStandardStepInterpolator();	  StageHandler    stageHandler    =    prototype.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
5	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepInterpolator(t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  prototype.getStepInterpolator(t0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  prototype.getStepInterpolator(t0);	  StageHandler    stageHandler    =    prototype.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
6	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
7	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t2,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t2,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t2,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
8	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t3,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t3,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t3,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
9	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][1],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][1],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][1],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
10	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  k);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  k);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  k);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y,  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
13	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    a[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
14	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    a[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
15	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    a[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
16	[BUG]  [BUGGY]  int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
20	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getTickHandler(handler);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interface.getTickHandler(handler);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getTickHandler(handler);	  StageHandler    stageHandler    =    handler.getTickHandler(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
21	[BUG]  [BUGGY]  StageHandler  stageHandler  =  handler.getTickHandler(t0,  interpolator);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  handler.getTickHandler(t0,  interpolator);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  handler.getTickHandler(t0,  interpolator);	  StageHandler    stageHandler    =    handler.getTickHandler(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
22	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getTickHandler(handler);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interpolator.getTickHandler(handler);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interpolator.getTickHandler(handler);	  StageHandler    stageHandler    =    handler.getTickHandler(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
23	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }	  for(int    i    =    1;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
24	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
25	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  2;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  2;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  2;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
27	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
28	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
29	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  yDotK[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
30	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[1][i]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[1][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[1][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
31	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
32	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
33	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
34	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
35	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  e.getMessage());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  e.getMessage());  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t0,  e.getMessage());	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
36	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0.getMessage(),  e.getMessage());  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0.getMessage(),  e.getMessage());  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t0.getMessage(),  e.getMessage());	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
37	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  getInterpolator();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  InterpolatorInterpolator  interpolator  =  getInterpolator();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	InterpolatorInterpolator  interpolator  =  getInterpolator();	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
38	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Interpolator  interpolator  =  manager.getInterpolator();	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
40	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
41	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
42	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
43	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
44	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
45	[BUG]  [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
46	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  k);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  k);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  k);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
47	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
48	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
49	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0][0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0][0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
50	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[1][0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[1][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[1][0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
51	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  j  =  0;  j  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  j  =  0;  j  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
52	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  y.getMessage());  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  y.getMessage());  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t0,  y.getMessage());	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][1],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
53	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  y.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  y.length);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t0,  y.length);	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][1],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
54	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  y.length,  k,  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  y.length,  k,  1);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t0,  y.length,  k,  1);	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][1],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
55	[BUG]  [BUGGY]  StageHandler  stageHandler  =  manager.getStepHandler(t0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  manager.getStepHandler(t0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  manager.getStepHandler(t0);	  StageHandler    stageHandler    =    interfacesManager.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
56	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(interpolator);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(interpolator);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfacesManager.getStepHandler(interpolator);	  StageHandler    stageHandler    =    interfacesManager.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
57	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0,  interpolator);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0,  interpolator);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0,  interpolator);	  StageHandler    stageHandler    =    interfacesManager.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	120	None	replace
58	[BUG]  [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(interpolator);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(interpolator);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(interpolator);	  AssertionFailedToIntegrator    handler    =    new    AssertionFailedToIntegrator();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
59	[BUG]  [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(0);	  AssertionFailedToIntegrator    handler    =    new    AssertionFailedToIntegrator();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
60	[BUG]  [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(false);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(false);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(false);	  AssertionFailedToIntegrator    handler    =    new    AssertionFailedToIntegrator();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
61	[BUG]  [BUGGY]  Preconditions.checkState(interpolator  ==  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(interpolator  ==  null);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(interpolator  ==  null);	  Preconditions.checkState(interpolator!=    null);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
62	[BUG]  [BUGGY]  Preconditions.checkState(this.interpolator!=  null);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(this.interpolator!=  null);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(this.interpolator!=  null);	  Preconditions.checkState(interpolator!=    null);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
63	[BUG]  [BUGGY]  Preconditions.checkState(interpolator  >=  null);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(interpolator  >=  null);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(interpolator  >=  null);	  Preconditions.checkState(interpolator!=    null);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
64	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
65	[BUG]  [BUGGY]  int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
66	[BUG]  [BUGGY]  for(int  loop  =  0;  loop  <  1;)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  loop  =  0;  loop  <  1;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop  <  1;)  {	  for(int    loop    =    1;    loop    <    0;)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
67	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
68	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
69	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
70	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDotK.length;  ++j)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  0;  y  <  yDotK.length;  ++j)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  yDotK.length;  ++j)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
71	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  y);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  y);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(t0,  y);	  StageHandler    stageHandler    =    interface.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
72	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  rki);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  rki);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(t0,  rki);	  StageHandler    stageHandler    =    interface.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
73	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  t,  stages);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  t,  stages);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(t0,  t,  stages);	  StageHandler    stageHandler    =    interface.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
74	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0][0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    yDotK[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
75	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0][0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    yDotK[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
76	[BUG]  [BUGGY]  int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0][0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    yDotK[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
77	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  y);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  y);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  y);	  StageHandler    stageHandler    =    interfaces.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
78	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  stages);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  stages);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  stages);	  StageHandler    stageHandler    =    interfaces.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
79	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  interpolator);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  interpolator);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  interpolator);	  StageHandler    stageHandler    =    interfaces.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
80	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
81	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
82	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
83	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }	  if(interpolator!=    null)    {    for(int    i    =    1;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
84	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(a,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(a,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(a,  y[i][0],  y[i]);  }	  if(interpolator!=    null)    {    for(int    i    =    1;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
85	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
86	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
87	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  yDotK[0][0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  yDotK[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  yDotK[0][0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
88	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0][0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
89	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
90	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
91	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  y);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  y);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Interpolator  interpolator  =  manager.getInterpolator(t0,  y);	  Interpolator    interpolator    =    manager.getInterpolator(t0);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
92	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  t);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  t);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Interpolator  interpolator  =  manager.getInterpolator(t0,  t);	  Interpolator    interpolator    =    manager.getInterpolator(t0);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
93	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  rki);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  rki);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Interpolator  interpolator  =  manager.getInterpolator(t0,  rki);	  Interpolator    interpolator    =    manager.getInterpolator(t0);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
94	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  n);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  n);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Interpolator  interpolator  =  manager.getInterpolator(t0,  n);	  Interpolator    interpolator    =    manager.getInterpolator(t0);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
95	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
96	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
97	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y,    t0[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
98	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y,    t0[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
99	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y,    t0[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
100	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y0[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y0[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y0[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y,    t0[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
101	[BUG]  [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
102	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  k);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  k);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  k);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
103	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
104	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
105	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
106	[BUG]  [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
107	[BUG]  [BUGGY]  int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(dt,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
108	[BUG]  [BUGGY]  for(int  loop  =  0;  loop  <  3;)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  loop  =  0;  loop  <  3;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop  <  3;)  {	  for(int    loop    =    0;    loop    <    2;)    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
109	[BUG]  [BUGGY]  int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
110	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
111	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
112	[BUG]  [BUGGY]  int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
113	[BUG]  [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler(t0,  y,  interpolator);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler(t0,  y,  interpolator);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  handler.getStepHandler(t0,  y,  interpolator);	  StageHandler    stageHandler    =    handler.getStepHandler(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
114	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(t0);	  StageHandler    stageHandler    =    interface.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
115	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(true);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(true);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(true);	  StageHandler    stageHandler    =    interface.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
116	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
117	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
118	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  calculateDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  calculateDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  calculateDerivatives(t0,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
119	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
120	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
121	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
122	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
123	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y,    t0[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
124	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y,    t0[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
125	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y,    t0[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
126	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y,    t0[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
127	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
128	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
129	[BUG]  [BUGGY]  StageHandler  stageHandler  =  handler.getTickHandler(t0,  t);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  handler.getTickHandler(t0,  t);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  handler.getTickHandler(t0,  t);	  StageHandler    stageHandler    =    handler.getTickHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
130	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getTickHandler(t0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getTickHandler(t0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getTickHandler(t0);	  StageHandler    stageHandler    =    handler.getTickHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
131	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepInterpolator(t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepInterpolator(t0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepInterpolator(t0);	  StageHandler    stageHandler    =    interfaces.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
132	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStandardStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getStandardStepInterpolator();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStandardStepInterpolator();	  StageHandler    stageHandler    =    interfaces.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
133	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y2,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
134	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y2,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y2,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
135	[BUG]  [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y2,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
136	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y2,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
137	[BUG]  [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y2,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
138	[BUG]  [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y2,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
139	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
140	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  calculateDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  calculateDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  calculateDerivatives(t0,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
141	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
142	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  if(interpolator!=    null)    {    for(int    i    =    1;    i    <    k;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
143	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(y[i][0],  y[i]);  }	  if(interpolator!=    null)    {    for(int    i    =    1;    i    <    k;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
144	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i]);  }	  if(interpolator!=    null)    {    for(int    i    =    1;    i    <    k;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
145	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  if(interpolator!=    null)    {    for(int    i    =    1;    i    <    k;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
146	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	  if(!lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
147	[BUG]  [BUGGY]  if(stepStart)  {  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart)  {  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart)  {  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	  if(!lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
148	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }	  if(!lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
149	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }	  if(!lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
150	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepInterpolator(t0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepInterpolator(t0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfacesManager.getStepInterpolator(t0);	  StageHandler    stageHandler    =    interfacesManager.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
151	[BUG]  [BUGGY]  StageHandler  stageHandler  =  manager.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  manager.getStepInterpolator();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  manager.getStepInterpolator();	  StageHandler    stageHandler    =    interfacesManager.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
152	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStandardStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStandardStepInterpolator();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfacesManager.getStandardStepInterpolator();	  StageHandler    stageHandler    =    interfacesManager.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
153	[BUG]  [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y2,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
154	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y2,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
155	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
156	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t2,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t2,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t2,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
157	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t2,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t2,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t2,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
158	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y0,  yDotK[0],  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y0,  yDotK[0],  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y0,  yDotK[0],  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
159	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y,  yDotK[0],  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y,  yDotK[0],  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y,  yDotK[0],  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
160	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[0],  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[0],  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[0],  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
161	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(interpolator);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(interpolator);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  prototype.getStepHandler(interpolator);	  StageHandler    stageHandler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
162	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(t0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  prototype.getStepHandler(t0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  prototype.getStepHandler(t0);	  StageHandler    stageHandler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
163	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  handler);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  handler);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  handler);	  StageHandler    stageHandler    =    handler.getStepHandler(t0,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
164	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  handler);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  handler);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(t0,  handler);	  StageHandler    stageHandler    =    handler.getStepHandler(t0,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
165	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaceManager.getStepHandler(t0,  handler);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaceManager.getStepHandler(t0,  handler);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaceManager.getStepHandler(t0,  handler);	  StageHandler    stageHandler    =    handler.getStepHandler(t0,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
166	[BUG]  [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler(t0,  interpolator,  lastStep);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler(t0,  interpolator,  lastStep);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  handler.getStepHandler(t0,  interpolator,  lastStep);	  StageHandler    stageHandler    =    handler.getStepHandler(t0,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
167	[BUG]  [BUGGY]  for(int  l  =  1;  l!=  null;)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  l  =  1;  l!=  null;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  l  =  1;  l!=  null;)  {	  for(int    loop    =    1;    loop!=    null;)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
168	[BUG]  [BUGGY]  for(int  i  =  1;  i!=  null;)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i!=  null;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i!=  null;)  {	  for(int    loop    =    1;    loop!=    null;)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
169	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
170	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
171	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
172	[BUG]  [BUGGY]  StageHandler  stageHandler  =  manager.getStepHandler(t0,  t);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  manager.getStepHandler(t0,  t);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  manager.getStepHandler(t0,  t);	  StageHandler    stageHandler    =    interfacesManager.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
173	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0,  y);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0,  y);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0,  y);	  StageHandler    stageHandler    =    interfacesManager.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
174	[BUG]  [BUGGY]  StageHandler  stageHandler  =  t0.getStepHandler(interpolator);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  t0.getStepHandler(interpolator);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  t0.getStepHandler(interpolator);	  StageHandler    stageHandler    =    interfacesManager.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
175	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y3,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
176	[BUG]  [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y3,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
177	[BUG]  [BUGGY]  StageHandler  stageHandler  =  handler.getStandardTickHandler(t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  handler.getStandardTickHandler(t0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  handler.getStandardTickHandler(t0);	  StageHandler    stageHandler    =    handler.getStandardTickHandler();    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
178	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStandardTickHandler();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interface.getStandardTickHandler();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getStandardTickHandler();	  StageHandler    stageHandler    =    handler.getStandardTickHandler();    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
179	[BUG]  [BUGGY]  StageHandler  stageHandler  =  handler.getStandardTickHandler(interpolator);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  handler.getStandardTickHandler(interpolator);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  handler.getStandardTickHandler(interpolator);	  StageHandler    stageHandler    =    handler.getStandardTickHandler();    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
180	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
181	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
182	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y[0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
183	[BUG]  [BUGGY]  AssertionFailedToIntegrator  prototype  =  interpolator.getIntegrator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  prototype  =  interpolator.getIntegrator();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  prototype  =  interpolator.getIntegrator();	  AssertionFailedToIntegrator    prototype    =    handler.getIntegrator();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
184	[BUG]  [BUGGY]  AssertionFailedToIntegrator  prototype  =  interface.getIntegrator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  prototype  =  interface.getIntegrator();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  prototype  =  interface.getIntegrator();	  AssertionFailedToIntegrator    prototype    =    handler.getIntegrator();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
185	[BUG]  [BUGGY]  AssertionFailedToIntegrator  prototype  =  rki.getIntegrator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  prototype  =  rki.getIntegrator();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  prototype  =  rki.getIntegrator();	  AssertionFailedToIntegrator    prototype    =    handler.getIntegrator();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
186	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }	  for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(dt,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
187	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
188	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
189	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
190	[BUG]  [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
191	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	  if(lastStep)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
192	[BUG]  [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  if(dt)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	  if(lastStep)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
193	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }	  if(lastStep)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
194	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y[0]);  }	  if(lastStep)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
195	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  y);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  y);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  y);	  StageHandler    stageHandler    =    interpolator.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
196	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  rki);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  rki);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  rki);	  StageHandler    stageHandler    =    interpolator.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
197	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][0]);  }	  for(int    y    =    0;    y    <    a.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
198	[BUG]  [BUGGY]  int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }	  for(int    y    =    0;    y    <    a.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
199	[BUG]  [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  if(dt)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y3,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
200	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(handler);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(handler);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(handler);	  StageHandler    stageHandler    =    handler.getStepHandler(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
201	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(handler);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(handler);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interpolator.getStepHandler(handler);	  StageHandler    stageHandler    =    handler.getStepHandler(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
202	[BUG]  [BUGGY]  Interpolator  interpolator  =  getInterpolator(t0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Interpolator  interpolator  =  getInterpolator(t0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Interpolator  interpolator  =  getInterpolator(t0);	  Interpolator    interpolator    =    getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
203	[BUG]  [BUGGY]  Interpolator  interpolator  =  this.getInterpolator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Interpolator  interpolator  =  this.getInterpolator();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Interpolator  interpolator  =  this.getInterpolator();	  Interpolator    interpolator    =    getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
204	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
205	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
206	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y[0],  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y[0],  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y[0],  i  +  1);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
207	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i  +  1);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
208	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i  +  1);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
209	[BUG]  [BUGGY]  for(int  yDotK  =  0;  l  <  yDotK.length;)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  yDotK  =  0;  l  <  yDotK.length;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  yDotK  =  0;  l  <  yDotK.length;)  {	  for(int    loop    =    0;    loop    <    yDotK.length;)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
210	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  yDotK.length;)  {	  for(int    loop    =    0;    loop    <    yDotK.length;)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
211	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  y[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  y[0][i]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(stepStart,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
212	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  y[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  y[0][i]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(stepStart,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
213	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y,  y[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y,  y[0][i]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(stepStart,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
214	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  yDotK[0][i]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(stepStart,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
215	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
216	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
217	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
218	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  calculateDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  calculateDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  calculateDerivatives(t0,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
219	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
220	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0][0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
221	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
222	[BUG]  [BUGGY]  for(int  y0  =  0;  l  <  y0.length;)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y0  =  0;  l  <  y0.length;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y0  =  0;  l  <  y0.length;)  {	  for(int    loop    =    0;    loop    <    y0.length;)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
223	[BUG]  [BUGGY]  for(int  loop  =  0;  loop  <  y.length;)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  loop  =  0;  loop  <  y.length;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop  <  y.length;)  {	  for(int    loop    =    0;    loop    <    y0.length;)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
224	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;)  {	  for(int    loop    =    0;    loop    <    y0.length;)    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
225	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
226	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
227	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
228	[BUG]  [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  e.getMessage(),  k);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedError  t1  =  new  AssertionFailedError(t0,  e.getMessage(),  k);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedError  t1  =  new  AssertionFailedError(t0,  e.getMessage(),  k);	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[1][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
229	[BUG]  [BUGGY]  int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(a,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(a,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(a,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(a,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
230	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(a,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(a,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(a,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(a,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
231	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  k  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  k  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  k  +  1);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
232	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y,  i  +  1);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
233	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	  if(lastStep)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
234	[BUG]  [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  if(dt)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  if(dt)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	  if(lastStep)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
235	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }	  if(lastStep)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
236	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y1,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y1,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y1,  y[0]);  }	  if(lastStep)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
237	[BUG]  [BUGGY]  if(stepStart)  {  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart)  {  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart)  {  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
238	[BUG]  [BUGGY]  if(stepStart)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
239	[BUG]  [BUGGY]  if(stepStart)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
240	[BUG]  [BUGGY]  if(stepStart)  {  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart)  {  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart)  {  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
241	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    a[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
242	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    a[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
243	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  a[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  a[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  a[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    a[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
244	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[1][i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[1][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[1][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    a[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
245	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
246	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
247	[BUG]  [BUGGY]  if(stepStart)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
248	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
249	[BUG]  [BUGGY]  for(int  loop  =  1;  loop  <  =  0;)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  loop  =  1;  loop  <  =  0;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  1;  loop  <  =  0;)  {	  for(int    loop    =    1;    loop    ==    0;)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
250	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  yDotK.length;)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  l  =  0;  l  <  yDotK.length;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  l  =  0;  l  <  yDotK.length;)  {	  for(int    l    =    0;    l!=    null;)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
251	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  k;)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  l  =  0;  l  <  k;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  l  =  0;  l  <  k;)  {	  for(int    l    =    0;    l!=    null;)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
252	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
253	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
254	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
255	[BUG]  [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
256	[BUG]  [BUGGY]  AssertionFailedError  t0  =  interpolator.getErrorHandler();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedError  t0  =  interpolator.getErrorHandler();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedError  t0  =  interpolator.getErrorHandler();	  AssertionFailedError    t0    =    handler.getErrorHandler();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
257	[BUG]  [BUGGY]  AssertionFailedError  t0  =  interface.getErrorHandler();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedError  t0  =  interface.getErrorHandler();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedError  t0  =  interface.getErrorHandler();	  AssertionFailedError    t0    =    handler.getErrorHandler();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
258	[BUG]  [BUGGY]  AssertionFailedError  t0  =  handler.getErrorHandler(interpolator);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedError  t0  =  handler.getErrorHandler(interpolator);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedError  t0  =  handler.getErrorHandler(interpolator);	  AssertionFailedError    t0    =    handler.getErrorHandler();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
259	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
260	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
261	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
262	[BUG]  [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
263	[BUG]  [BUGGY]  for(int  loop  =  0;  loop  <  null;)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  loop  =  0;  loop  <  null;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop  <  null;)  {	  for(int    loop    =    0;    loop    ==    null;)    {    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
264	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  lastStep);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  lastStep);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  lastStep);	  StageHandler    stageHandler    =    interpolator.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
265	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  t,  handler);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  t,  handler);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  t,  handler);	  StageHandler    stageHandler    =    handler.getStepHandler(t0,    t,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
266	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaceManager.getStepHandler(t0,  t,  handler);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaceManager.getStepHandler(t0,  t,  handler);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaceManager.getStepHandler(t0,  t,  handler);	  StageHandler    stageHandler    =    handler.getStepHandler(t0,    t,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
267	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  handler,  t);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  handler,  t);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interpolator.getStepHandler(t0,  handler,  t);	  StageHandler    stageHandler    =    handler.getStepHandler(t0,    t,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
268	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
269	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y1.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y1.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y1.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
270	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
271	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
272	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
273	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  ys.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  ys.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  ys.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
274	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][2],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][2],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][2],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][1],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
275	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  0;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  0;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  1;  i  <  0;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][1],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
276	[BUG]  [BUGGY]  int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
277	[BUG]  [BUGGY]  for(int  yDotK  =  1;  l  <  yDotK.length;)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  yDotK  =  1;  l  <  yDotK.length;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  yDotK  =  1;  l  <  yDotK.length;)  {	  for(int    loop    =    1;    loop    <    yDotK.length;)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
278	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  yDotK.length;)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  yDotK.length;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  yDotK.length;)  {	  for(int    loop    =    1;    loop    <    yDotK.length;)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
279	[BUG]  [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y  +  1);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y  +  1);	  AssertionFailedToIntegrator    handler    =    new    AssertionFailedToIntegrator(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
280	[BUG]  [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y,  interpolator);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y,  interpolator);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y,  interpolator);	  AssertionFailedToIntegrator    handler    =    new    AssertionFailedToIntegrator(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
281	[BUG]  [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y,  k);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y,  k);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y,  k);	  AssertionFailedToIntegrator    handler    =    new    AssertionFailedToIntegrator(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
282	[BUG]  [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  interpolator);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  interpolator);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  interpolator);	  AssertionFailedToIntegrator    handler    =    new    AssertionFailedToIntegrator(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
283	[BUG]  [BUGGY]  if(stepStart)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
284	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
285	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  j  =  0;  j  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  j  =  0;  j  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0]);  }	  for(int    y    =    0;    y    <    a.length;    ++j)    {    computeDerivatives(t0,    y,    a[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
286	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(stepStart,  y,  a[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(stepStart,  y,  a[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(stepStart,  y,  a[0]);  }	  for(int    y    =    0;    y    <    a.length;    ++j)    {    computeDerivatives(t0,    y,    a[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
287	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  1;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  1;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0]);  }	  for(int    y    =    0;    y    <    a.length;    ++j)    {    computeDerivatives(t0,    y,    a[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
288	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0]);  }	  for(int    y    =    0;    y    <    a.length;    ++j)    {    computeDerivatives(t0,    y,    a[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
289	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
290	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
291	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  yDotK.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  0;  y  <  yDotK.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  yDotK.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
292	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
293	[BUG]  [BUGGY]  int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
294	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
295	[BUG]  [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
296	[BUG]  [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y0,  y1,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y0,  y1,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
297	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
298	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
299	[BUG]  [BUGGY]  for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  1;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
300	[BUG]  [BUGGY]  int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
301	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
302	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
303	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[1][i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[1][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[1][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
304	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  rki);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  rki);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  rki);	  StageHandler    stageHandler    =    interfaces.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
305	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  n);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  n);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  n);	  StageHandler    stageHandler    =    interfaces.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
306	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
307	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
308	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
309	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  ys.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  ys.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  ys.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
310	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
311	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y[0],  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y[0],  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y[0],  i);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
312	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interface.getStepInterpolator();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getStepInterpolator();	  StageHandler    stageHandler    =    interpolator.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
313	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepInterpolator(t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interpolator.getStepInterpolator(t0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interpolator.getStepInterpolator(t0);	  StageHandler    stageHandler    =    interpolator.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
314	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interpolator.getStandardStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interpolator.getStandardStepInterpolator();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interpolator.getStandardStepInterpolator();	  StageHandler    stageHandler    =    interpolator.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
315	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
316	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
317	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepInterpolator(rki);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepInterpolator(rki);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepInterpolator(rki);	  StageHandler    stageHandler    =    interfaces.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
318	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getTickHandler(t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getTickHandler(t0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfacesManager.getTickHandler(t0);	  StageHandler    stageHandler    =    handler.getTickHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
319	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
320	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
321	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  x.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  x.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  1;  i  <  x.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
322	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
323	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	111	None	replace
324	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
325	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	119	None	replace
326	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
327	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
328	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
329	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Integer  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Integer  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
330	[BUG]  [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y0,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y0,  y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
331	[BUG]  [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
332	[BUG]  [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y[0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
333	[BUG]  [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[1]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
334	[BUG]  [BUGGY]  Integer  stages  =  getSteps(interpolator);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Integer  stages  =  getSteps(interpolator);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Integer  stages  =  getSteps(interpolator);	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(stepStart,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
335	[BUG]  [BUGGY]  Preconditions.checkState(this.stepName!=  null);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(this.stepName!=  null);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(this.stepName!=  null);	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(stepStart,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
336	[BUG]  [BUGGY]  luateStep(t0,  rki,  stages);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  luateStep(t0,  rki,  stages);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	luateStep(t0,  rki,  stages);	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(stepStart,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
337	[BUG]  [BUGGY]  Preconditions.checkState(i!=  0);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(i!=  0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(i!=  0);	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(stepStart,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
338	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  y0.length;)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  l  =  0;  l  <  y0.length;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  l  =  0;  l  <  y0.length;)  {	  for(int    l    =    0;    l!=    null;)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
339	[BUG]  [BUGGY]  for(int  l  =  0;  l!=  0;)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  l  =  0;  l!=  0;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  l  =  0;  l!=  0;)  {	  for(int    l    =    0;    l!=    null;)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
340	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y4,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y4,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y4,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y3,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
341	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
342	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t3,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t3,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t3,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
343	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  for(int    i    =    1;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
344	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  i,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  i,  a[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  i,  a[0][0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
345	[BUG]  [BUGGY]  int  i  =  0;  y  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  y  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  y  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
346	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
347	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  x.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  x.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  1;  i  <  x.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
348	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	  if(lastStep)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
349	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }	  if(lastStep)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
350	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[1]);  }	  if(lastStep)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
351	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  y  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  y  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  y  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	  if(lastStep)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
352	[BUG]  [BUGGY]  AssertionFailedToIntegrator  prototype  =  handler.getIntegrator(0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  prototype  =  handler.getIntegrator(0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  prototype  =  handler.getIntegrator(0);	  AssertionFailedToIntegrator    prototype    =    handler.getIntegrator();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
353	[BUG]  [BUGGY]  AssertionFailedToIntegrator  prototype  =  handler.getIntegrator(interpolator);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  prototype  =  handler.getIntegrator(interpolator);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  prototype  =  handler.getIntegrator(interpolator);	  AssertionFailedToIntegrator    prototype    =    handler.getIntegrator();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
354	[BUG]  [BUGGY]  AssertionFailedToIntegrator  prototype  =  handler.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  prototype  =  handler.getStepInterpolator();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  prototype  =  handler.getStepInterpolator();	  AssertionFailedToIntegrator    prototype    =    handler.getIntegrator();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
355	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  y0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  y0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(t0,  y0);	  StageHandler    stageHandler    =    interface.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
356	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  y1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  y1);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(t0,  y1);	  StageHandler    stageHandler    =    interface.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
357	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(handler);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(handler);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepHandler(handler);	  StageHandler    stageHandler    =    handler.getStepHandler(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
358	[BUG]  [BUGGY]  for(int  loop  =  1;  loop  <  y0.length;)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  loop  =  1;  loop  <  y0.length;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  1;  loop  <  y0.length;)  {	  for(int    loop    =    1;    loop    <    yDotK.length;)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
359	[BUG]  [BUGGY]  for(int  loop  =  2;  loop  <  yDotK.length;)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  loop  =  2;  loop  <  yDotK.length;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  2;  loop  <  yDotK.length;)  {	  for(int    loop    =    1;    loop    <    yDotK.length;)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
360	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[0],  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[0],  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[0],  i);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
361	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[1][i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[1][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[1][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[1][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
362	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y,  y[1][i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y,  y[1][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y,  y[1][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[1][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
363	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[2][i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[2][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[2][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[1][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
364	[BUG]  [BUGGY]  Preconditions.checkState(this.stepStart!=  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(this.stepStart!=  null);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(this.stepStart!=  null);	  Preconditions.checkState(interpolator!=    null);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
365	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0,  t,  handler);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0,  t,  handler);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0,  t,  handler);	  StageHandler    stageHandler    =    handler.getStepHandler(t0,    t,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
366	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
367	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
368	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(interpolator,  t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(interpolator,  t0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfacesManager.getStepHandler(interpolator,  t0);	  StageHandler    stageHandler    =    interfacesManager.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
369	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
370	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
371	[BUG]  [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y1,  t);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y1,  t);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y1,  t);	  AssertionFailedToIntegrator    handler    =    new    AssertionFailedToIntegrator(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
372	[BUG]  [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y1,  t1);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y1,  t1);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y1,  t1);	  AssertionFailedToIntegrator    handler    =    new    AssertionFailedToIntegrator(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
373	[BUG]  [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y1,  t2);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y1,  t2);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y1,  t2);	  AssertionFailedToIntegrator    handler    =    new    AssertionFailedToIntegrator(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
374	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
375	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  t0.length;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  t0.length;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  t0.length;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y,    t0[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
376	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  t0.length;  ++i)  {  computeDerivatives(y0[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  t0.length;  ++i)  {  computeDerivatives(y0[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  t0.length;  ++i)  {  computeDerivatives(y0[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y,    t0[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
377	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  if(interpolator!=    null)    {    for(int    i    =    1;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
378	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }	  if(interpolator!=    null)    {    for(int    i    =    1;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
379	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]	  if(interpolator!=    null)    {    for(int    i    =    1;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
380	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  i,  a[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  i,  a[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  i,  a[0]);  }	  for(int    y    =    0;    y    <    a.length;    ++j)    {    computeDerivatives(t0,    y,    a[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
381	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yFields.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  yFields.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  yFields.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
382	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	  if(lastStep)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
383	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[1]);  }	  if(lastStep)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
384	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }	  if(lastStep)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
385	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  y0);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  y0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  y0);	  StageHandler    stageHandler    =    interfaces.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
386	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  y1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  y1);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  y1);	  StageHandler    stageHandler    =    interfaces.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
387	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  yDotK[0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
388	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t0,  y0,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
389	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Integer  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Integer  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y0,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
390	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
391	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
392	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][1],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][1],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][1],  y[i][1]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
393	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(x[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(x[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(x[i][0],  y[i][0]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
394	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
395	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
396	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
397	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
398	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  k);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  k);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  k);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
399	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
400	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
401	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
402	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[1][i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[1][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[1][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
403	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDOtK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDOtK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDOtK[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
404	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[0],  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[0],  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[0],  i  +  1);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
405	[BUG]  [BUGGY]  int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
406	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStandardTickHandler();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getStandardTickHandler();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStandardTickHandler();	  StageHandler    stageHandler    =    handler.getStandardTickHandler();    	non-compiled	[CE]  illegal  start  of  expression	101	None	replace
407	[BUG]  [BUGGY]  Integer  stages  =  getStandardEquations();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Integer  stages  =  getStandardEquations();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Integer  stages  =  getStandardEquations();	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
408	[BUG]  [BUGGY]  Integer  stepStart  =  getStep(interpolator);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Integer  stepStart  =  getStep(interpolator);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Integer  stepStart  =  getStep(interpolator);	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
409	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    a[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
410	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
411	[BUG]  [BUGGY]  int  i  =  0;  y  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  y  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  y  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
412	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y2,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
413	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y2,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
414	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y1,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y1,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y1,  i  +  1);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
415	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  a.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  a.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  a.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
416	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y3,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
417	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(interpolator);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(interpolator);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepHandler(interpolator);	  StageHandler    stageHandler    =    interfaces.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
418	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0  -  1);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepHandler(t0  -  1);	  StageHandler    stageHandler    =    interfaces.getStepHandler(t0);    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
419	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(stepStart,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(stepStart,  y,  a[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(stepStart,  y,  a[0][0]);  }	  for(int    y    =    0;    y    <    a.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
420	[BUG]  [BUGGY]  for(int  loop  =  1;  l!=  null;)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  loop  =  1;  l!=  null;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  1;  l!=  null;)  {	  for(int    loop    =    1;    loop!=    null;)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
421	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
422	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
423	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t0,  y2,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y2,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
424	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Integer  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Integer  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y2,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y2,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
425	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  2);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  2);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  2);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
426	[BUG]  [BUGGY]  int  i  =  0;  y  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  y  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  y  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
427	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[1][i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[1][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[1][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
428	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
429	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  yFields.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  yFields.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  yFields.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
430	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
431	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  k);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  k);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  k);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
432	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i]);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
433	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y,  i);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y,  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
434	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][1],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
435	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][1],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][1],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i][1],  y[i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][1],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
436	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][2],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][2],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][2],  y[i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][1],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
437	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getTickHandler(handler);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getTickHandler(handler);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getTickHandler(handler);	  StageHandler    stageHandler    =    handler.getTickHandler(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
438	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getTickHandler(handler);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getTickHandler(handler);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfacesManager.getTickHandler(handler);	  StageHandler    stageHandler    =    handler.getTickHandler(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
439	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][1],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
440	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  x.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  1;  i  <  x.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  1;  i  <  x.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][1],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
441	[BUG]  [BUGGY]  AssertionFailedError  t0  =  manager.getErrorHandler();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedError  t0  =  manager.getErrorHandler();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedError  t0  =  manager.getErrorHandler();	  AssertionFailedError    t0    =    handler.getErrorHandler();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
442	[BUG]  [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y.length);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  y.length);	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
443	[BUG]  [BUGGY]  for(int  loop  =  true;  loop!=  0;)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  loop  =  true;  loop!=  0;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  true;  loop!=  0;)  {	  for(int    loop    =    false;    loop!=    0;)    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
444	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  t0.length;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  t0.length;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  t0.length;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y,    t0[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
445	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  t0.length;  ++i)  {  computeDerivatives(y0[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  t0.length;  ++i)  {  computeDerivatives(y0[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  t0.length;  ++i)  {  computeDerivatives(y0[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y,    t0[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
446	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y0[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y0[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  computeDerivatives(y0[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y,    t0[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
447	[BUG]  [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler(t0,  y0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  handler.getStepHandler(t0,  y0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  handler.getStepHandler(t0,  y0);	  StageHandler    stageHandler    =    handler.getStepHandler(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
448	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(a,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(a,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(a,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(a,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
449	[BUG]  [BUGGY]  int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    a[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
450	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
451	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
452	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
453	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
454	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Integer  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Integer  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
455	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stages.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stages.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	104	None	replace
456	[BUG]  [BUGGY]  int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
457	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(this);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(this);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(this);	  StageHandler    stageHandler    =    interface.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
458	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  >>  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  >>  illegal  start  of  expression  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  >>  illegal  start  of  expression	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
459	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
460	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
461	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]!=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]!=  illegal  start  of  expression  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]!=  illegal  start  of  expression	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
462	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  if(interpolator!=    null)    {    for(int    i    =    1;    i    <    k;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
463	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(y[i][0],  y[i]);  }	  if(interpolator!=    null)    {    for(int    i    =    1;    i    <    k;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
464	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(y0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(y0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(y0,  y[i][0],  y[i]);  }	  if(interpolator!=    null)    {    for(int    i    =    1;    i    <    k;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
465	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  if(interpolator!=    null)    {    for(int    i    =    1;    i    <    k;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
466	[BUG]  [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
467	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  stageCount;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	  if(!lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
468	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	  if(!lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
469	[BUG]  [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0);	  AssertionFailedToIntegrator    handler    =    new    AssertionFailedToIntegrator();    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
470	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  nSteps;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
471	[BUG]  [BUGGY]  Integer  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Integer  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Integer  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
472	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(x[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(x[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(x[i][0],  y[i][1]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
473	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(a[i][0],  a[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(a[i][0],  a[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(a[i][0],  a[i][1]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
474	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][1],  y[i][2]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][1],  y[i][2]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][1],  y[i][2]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
475	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
476	[BUG]  [BUGGY]  int  i  =  0;  y  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  y  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  y  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
477	[BUG]  [BUGGY]  Integer  stepStart  =  new  Integer(interpolator.getStepInterpolator());  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Integer  stepStart  =  new  Integer(interpolator.getStepInterpolator());  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Integer  stepStart  =  new  Integer(interpolator.getStepInterpolator());	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
478	[BUG]  [BUGGY]  Integer  stepStart  =  new  Integer(interpolator.getStep());  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Integer  stepStart  =  new  Integer(interpolator.getStep());  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Integer  stepStart  =  new  Integer(interpolator.getStep());	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
479	[BUG]  [BUGGY]  Integer  stepStart  =  getStep(interpolator.getStep());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Integer  stepStart  =  getStep(interpolator.getStep());  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Integer  stepStart  =  getStep(interpolator.getStep());	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	124	None	replace
480	[BUG]  [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
481	[BUG]  [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[1][0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[1][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[1][0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
482	[BUG]  [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
483	[BUG]  [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0][0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
484	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0,  handler);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0,  handler);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfacesManager.getStepHandler(t0,  handler);	  StageHandler    stageHandler    =    handler.getStepHandler(t0,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
485	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
486	[BUG]  [BUGGY]  for(int  loop  =  0;  loop  <  4;)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  loop  =  0;  loop  <  4;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop  <  4;)  {	  for(int    loop    =    0;    loop    <    0;)    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
487	[BUG]  [BUGGY]  AssertionFailedToIntegrator  prototype  =  handler.getIntegrator(t0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  prototype  =  handler.getIntegrator(t0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  prototype  =  handler.getIntegrator(t0);	  AssertionFailedToIntegrator    prototype    =    handler.getIntegrator();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
488	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y2,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
489	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y2,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
490	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(dt,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
491	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(dt,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
492	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
493	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
494	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
495	[BUG]  [BUGGY]  for(int  loop  =  1;  loop!=  null  &&!lastStep)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  loop  =  1;  loop!=  null  &&!lastStep)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  1;  loop!=  null  &&!lastStep)  {	  for(int    loop    =    1;    loop!=    null;)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
496	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
497	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  k);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  k);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  k);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	122	None	replace
498	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  t1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  t1);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  t1);	  StageHandler    stageHandler    =    interfaces.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
499	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  t2);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  t2);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepHandler(t0,  t2);	  StageHandler    stageHandler    =    interfaces.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
500	[BUG]  [BUGGY]  Preconditions.checkState(y0!=  null);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Preconditions.checkState(y0!=  null);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Preconditions.checkState(y0!=  null);	  Preconditions.checkState(interpolator!=    null);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
501	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  y[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  y[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  y[0][0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
502	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0][0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	116	None	replace
503	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i][1]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
504	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	108	None	replace
505	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][1],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
506	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][1],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
507	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
508	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
509	[BUG]  [BUGGY]  for(int  j  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  j  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  j  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  yDotK[0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    yDotK[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
510	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(stepStart,  y,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(stepStart,  y,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(stepStart,  y,  i  +  1);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
511	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
512	[BUG]  [BUGGY]  for(int  loop  =  0;  loop  <  steps.length;)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  loop  =  0;  loop  <  steps.length;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop  <  steps.length;)  {	  for(int    loop    =    0;    loop    <    yDotK.length;)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
513	[BUG]  [BUGGY]  for(int  loop  =  0;  loop  <  stages.length;)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  loop  =  0;  loop  <  stages.length;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop  <  stages.length;)  {	  for(int    loop    =    0;    loop    <    yDotK.length;)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
514	[BUG]  [BUGGY]  for(int  loop  =  0;  loop  <  stages;)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  loop  =  0;  loop  <  stages;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  0;  loop  <  stages;)  {	  for(int    loop    =    0;    loop    <    yDotK.length;)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
515	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
516	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y,  yDotK[0],  i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y,  yDotK[0],  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y,  yDotK[0],  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i);    }    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
517	[BUG]  [BUGGY]  StageHandler  stageHandler  =  prototype.getStepInterpolator(rki);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  prototype.getStepInterpolator(rki);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  prototype.getStepInterpolator(rki);	  StageHandler    stageHandler    =    prototype.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
518	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
519	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
520	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
521	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }	  if(!lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	109	None	replace
522	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y2,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y2,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
523	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y2,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
524	[BUG]  [BUGGY]  AssertionFailedError  t0  =  handler.getErrorHandler(t0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedError  t0  =  handler.getErrorHandler(t0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedError  t0  =  handler.getErrorHandler(t0);	  AssertionFailedError    t0    =    handler.getErrorHandler();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
525	[BUG]  [BUGGY]  AssertionFailedError  t0  =  handler.getErrorHandler(0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedError  t0  =  handler.getErrorHandler(0);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedError  t0  =  handler.getErrorHandler(0);	  AssertionFailedError    t0    =    handler.getErrorHandler();    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
526	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  if(interpolator!=    null)    {    for(int    i    =    1;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	102	None	replace
527	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
528	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
529	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i][0]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
530	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i][0]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	117	None	replace
531	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
532	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  1;  i  <  k;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i]);  }	  if(interpolator!=    null)    {    for(int    i    =    1;    i    <    k;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	103	None	replace
533	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
534	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepInterpolator(t0,  stages);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfaces.getStepInterpolator(t0,  stages);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfaces.getStepInterpolator(t0,  stages);	  StageHandler    stageHandler    =    interfaces.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
535	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  n.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  n.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  n.length;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
536	[BUG]  [BUGGY]  Interpolator  interpolator  =(Interpolator)getInterpolator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Interpolator  interpolator  =(Interpolator)getInterpolator();  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Interpolator  interpolator  =(Interpolator)getInterpolator();	  Interpolator    interpolator    =    getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
537	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    a[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
538	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    a[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
539	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(handler);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepHandler(handler);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfacesManager.getStepHandler(handler);	  StageHandler    stageHandler    =    handler.getStepHandler(interpolator);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
540	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  y[0][0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  y[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  y[0][0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
541	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepInterpolator(t0,  stages);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interfacesManager.getStepInterpolator(t0,  stages);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interfacesManager.getStepInterpolator(t0,  stages);	  StageHandler    stageHandler    =    interfacesManager.getStepInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
542	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
543	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
544	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  y[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
545	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(y[i][0],  y[i][1]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	110	None	replace
546	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][1],  y[i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][1],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
547	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
548	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y3,  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	121	None	replace
549	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y0,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
550	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(t0,  y0,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(t0,  y0,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
551	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y,  y0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y,  y0);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y,  y0);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
552	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y,  i);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y0,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
553	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y,    t0[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
554	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y,    t0[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
555	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  t,  handler);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  t,  handler);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(t0,  t,  handler);	  StageHandler    stageHandler    =    handler.getStepHandler(t0,    t,    interpolator);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
556	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  j);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0,  j);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	Interpolator  interpolator  =  manager.getInterpolator(t0,  j);	  Interpolator    interpolator    =    manager.getInterpolator(t0);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
557	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
558	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  x.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
559	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i);    }    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
560	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y[0],  y[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y[0],  y[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y[0],  y[0][i]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(stepStart,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
561	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  a[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  a[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  a[0][i]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(stepStart,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	113	None	replace
562	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	  if(lastStep)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
563	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	  if(lastStep)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	105	None	replace
564	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
565	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  k);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  k);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  k);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
566	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  k);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  k);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  k);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	123	None	replace
567	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y1,  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
568	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y2,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y2,  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
569	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y3,  i);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y3,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y3,  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y1,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	126	None	replace
570	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[1][i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[1][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  y[1][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[1][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
571	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  y[1][i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  y[1][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  y[1][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[1][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
572	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
573	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
574	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
575	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  yDotK[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
576	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  yDotK[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    yDotK[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
577	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
578	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  yDotK.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
579	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	127	None	replace
580	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  y  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
581	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart!=  null)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }	  if(interpolator!=    null)    {    for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	115	None	replace
582	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
583	[BUG]  [BUGGY]  int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    a[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
584	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  a[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  a[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(stepStart,  y,  a[0][i]);  }	  for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    a[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
585	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  1;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
586	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  1;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  1;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
587	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  x.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
588	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
589	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(y[i][0],  y[i][0]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	118	None	replace
590	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  t1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  t1);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(t0,  t1);	  StageHandler    stageHandler    =    interface.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
591	[BUG]  [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  t2);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  StageHandler  stageHandler  =  interface.getStepHandler(t0,  t2);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	StageHandler  stageHandler  =  interface.getStepHandler(t0,  t2);	  StageHandler    stageHandler    =    interface.getStepHandler(t0,    t);    	non-compiled	[CE]  illegal  start  of  expression	100	None	replace
592	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  a[0][i]);  }	  if(stepStart!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	112	None	replace
593	[BUG]  [BUGGY]  for(int  loop  =  1;  loop  <  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  loop  =  1;  loop  <  1)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  1;  loop  <  1)  {	  for(int    loop    =    1;    loop    <    0;)    {    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
594	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y2,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
595	[BUG]  [BUGGY]  for(int  loop  =  1;  loop  <  stages;)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  loop  =  1;  loop  <  stages;)  {  [BUGGY]        computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  loop  =  1;  loop  <  stages;)  {	  for(int    loop    =    1;    loop    <    yDotK.length;)    {    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
596	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  2;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  2;  ++i)  {  computeDerivatives(y,  t0[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y,    t0[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
597	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0[i][0],  y[i][1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0[i][0],  y[i][1]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(y,    t0[i][0],    y[i][1]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
598	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  computeDerivatives(t0,  y2,  x);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  x.length;  ++i)  {  computeDerivatives(t0,  y2,  x);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  x.length;  ++i)  {  computeDerivatives(t0,  y2,  x);  }	  for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y2,    i);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
599	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0][i]);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y,    y[0][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
600	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
601	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
602	[BUG]  [BUGGY]  while(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  while(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	while(!lastStep)  {  for(int  i  =  1;  i  <  y0.length;  ++i)  {  computeDerivatives(t1,  y[i][0],  y[i]);  }	  if(lastStep)    {    for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(t1,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
603	[BUG]  [BUGGY]  for(int  j  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  j  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  j  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }	  for(int    y    =    0;    y    <    a.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
604	[BUG]  [BUGGY]  if(stepStart  ==  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart  ==  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart  ==  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
605	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  a[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  a[0][0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
606	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  a[0][0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
607	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(stepEnd,  y,  a[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(stepEnd,  y,  a[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(stepEnd,  y,  a[0][0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    a[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	114	None	replace
608	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  yDotK[0][0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  yDotK[0][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  yDotK[0][0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    yDotK[0][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
609	[BUG]  [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  y  =  0;  y  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  y[0]);  }	  for(int    y    =    0;    y    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
610	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y0,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
611	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y,  i  +  1);  }	  if(lastStep)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y0,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
612	[BUG]  [BUGGY]  for(int  j  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  j  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  j  =  0;  y  <  a.length;  ++j)  {  computeDerivatives(t0,  y,  a[0]);  }	  for(int    y    =    0;    y    <    a.length;    ++j)    {    computeDerivatives(t0,    y,    a[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
613	[BUG]  [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
614	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  yDotK[0],  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
615	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[0],  i);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[0],  i);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[0],  i);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    yDotK[0],    i);    }    	non-compiled	[CE]  illegal  start  of  expression	125	None	replace
616	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  a.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  1;  i  <  a.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  1;  i  <  a.length;  ++i)  {  computeDerivatives(dt,  y[i][0],  y[i]);  }	  for(int    i    =    1;    i    <    y0.length;    ++i)    {    computeDerivatives(dt,    y[i][0],    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
617	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(stepStart,  y,  y[0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
618	[BUG]  [BUGGY]  if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(stepStart!=  null)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
619	[BUG]  [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y[0],  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y[0],  y[1]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  j  =  0;  j  <  y.length;  ++j)  {  computeDerivatives(t0,  y[0],  y[1]);  }	  if(interpolator!=    null)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	106	None	replace
620	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
621	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  steps;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
622	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i][0]);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i][0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(stepStart,  y[i][0],  y[i][0]);  }	  for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y[i][0],    y[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
623	[BUG]  [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  t,  y);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  t,  y);  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	AssertionFailedToIntegrator  handler  =  new  AssertionFailedToIntegrator(t0,  t,  y);	  AssertionFailedToIntegrator    handler    =    new    AssertionFailedToIntegrator(t0,    y);    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
624	[BUG]  [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  yDotK.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(lastStep)  {  for(int  j  =  0;  j  <  yDotK.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(lastStep)  {  for(int  j  =  0;  j  <  yDotK.length;  ++j)  {  computeDerivatives(t0,  y,  y[0]);  }	  if(lastStep)    {    for(int    j    =    0;    j    <    y.length;    ++j)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	107	None	replace
625	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  y0.length;  ++i)  {  computeDerivatives(t0,  y2,  i  +  1);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
626	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }  [BUGGY]      for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum  =  a[k-1][0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  k;  ++l)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	141	141	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y1,  i  +  1);  }	  if(interpolator!=    null)    {    for(int    i    =    0;    i    <    y0.length;    ++i)    {    computeDerivatives(t0,    y1,    i    +    1);    }    	non-compiled	[CE]  illegal  start  of  expression	128	None	replace
