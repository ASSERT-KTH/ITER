bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++l)  {  sum  +=  b[0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++l)  {  sum  +=  b[0]  *  yDotK[0][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  k  =  0;  k  <  y0.length;  ++l)  {  sum  +=  b[0]  *  yDotK[0][j];  }	      for(int    k    =    0;    k    <    stages;    ++l)    {    sum    +=    b[0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
2	[BUG]  [BUGGY]  int  k  =  0;  k  <  y0.length;  ++l)  {  sum  +=  b[0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  int  k  =  0;  k  <  y0.length;  ++l)  {  sum  +=  b[0]  *  yDotK[0][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	int  k  =  0;  k  <  y0.length;  ++l)  {  sum  +=  b[0]  *  yDotK[0][j];  }	      for(int    k    =    0;    k    <    stages;    ++l)    {    sum    +=    b[0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
3	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++l)  {  sum  +=  b[0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  k  =  1;  k  <  stages;  ++l)  {  sum  +=  b[0]  *  yDotK[1][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  k  =  1;  k  <  stages;  ++l)  {  sum  +=  b[0]  *  yDotK[1][j];  }	      for(int    k    =    0;    k    <    stages;    ++l)    {    sum    +=    b[0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
4	[BUG]  [BUGGY]  if(stages!=  null)  {  for(int  k  =  0;  k  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  if(stages!=  null)  {  for(int  k  =  0;  k  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	if(stages!=  null)  {  for(int  k  =  0;  k  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }	      if(stages!=    null)    {    for(int    k    =    0;    k    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  k  =  0;  k  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }	      if(stages!=    null)    {    for(int    k    =    0;    k    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
6	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  stage.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  j  =  1;  j  <  stage.length;  ++j)  {  [BUGGY]    double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  j  =  1;  j  <  stage.length;  ++j)  {	  for(int    j    =    0;    j    <    stage.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
7	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  phases.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  j  =  0;  j  <  phases.length;  ++j)  {  [BUGGY]    double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  j  =  0;  j  <  phases.length;  ++j)  {	  for(int    j    =    0;    j    <    stage.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  for(int  l  =  1;  l  <  y0.length;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  l  =  1;  l  <  y0.length;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  l  =  1;  l  <  y0.length;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
9	[BUG]  [BUGGY]  for(int  i  =  1;  l  <  stages;  ++i)  {  sum+=  b[0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  i  =  1;  l  <  stages;  ++i)  {  sum+=  b[0]  *  yDotK[1][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  i  =  1;  l  <  stages;  ++i)  {  sum+=  b[0]  *  yDotK[1][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
10	[BUG]  [BUGGY]  for(int  k  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  k  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  k  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
11	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  sum+=  b[0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  sum+=  b[0]  *  yDotK[1][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  sum+=  b[0]  *  yDotK[1][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
12	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    k    =    0;    k    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
13	[BUG]  [BUGGY]  int  k  =  0;  k  <  stages;  ++k)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  int  k  =  0;  k  <  stages;  ++k)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	int  k  =  0;  k  <  stages;  ++k)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    k    =    0;    k    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
14	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages;  ++l)  {  sum  +=  b[1]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  k  =  0;  k  <  stages;  ++l)  {  sum  +=  b[1]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  k  =  0;  k  <  stages;  ++l)  {  sum  +=  b[1]  *  yDotK[l][j];  }	      if(stages!=    null)    {    for(int    k    =    0;    k    <    stages;    ++l)    {    sum    +=    b[1]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
15	[BUG]  [BUGGY]  if(stages!=  null)  {  for(int  k  =  0;  k  <  y0.length;  ++l)  {  sum  +=  b[1]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  if(stages!=  null)  {  for(int  k  =  0;  k  <  y0.length;  ++l)  {  sum  +=  b[1]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	if(stages!=  null)  {  for(int  k  =  0;  k  <  y0.length;  ++l)  {  sum  +=  b[1]  *  yDotK[l][j];  }	      if(stages!=    null)    {    for(int    k    =    0;    k    <    stages;    ++l)    {    sum    +=    b[1]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
16	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++l)  {  sum  +=  b[1]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  k  =  0;  k  <  y0.length;  ++l)  {  sum  +=  b[1]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  k  =  0;  k  <  y0.length;  ++l)  {  sum  +=  b[1]  *  yDotK[l][j];  }	      if(stages!=    null)    {    for(int    k    =    0;    k    <    stages;    ++l)    {    sum    +=    b[1]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
17	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  k  =  1;  k  <  y0.length;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }	      for(int    k    =    1;    k    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  int  k  =  1;  k  <  y0.length;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  int  k  =  1;  k  <  y0.length;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	int  k  =  1;  k  <  y0.length;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }	      for(int    k    =    1;    k    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  i  =  1;  i  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    i    =    0;    i    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  i  =  0;  i  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  i  =  0;  i  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    i    =    0;    i    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
21	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  l  =  0;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  l  =  0;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    i    =    0;    i    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
22	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  stages.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  j  =  1;  j  <  stages.length;  ++j)  {  [BUGGY]    double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  j  =  1;  j  <  stages.length;  ++j)  {	  for(int    j    =    0;    j    <    stages.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
23	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  yTmp.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  j  =  0;  j  <  yTmp.length;  ++j)  {  [BUGGY]    double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  j  =  0;  j  <  yTmp.length;  ++j)  {	  for(int    j    =    0;    j    <    stages.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
24	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  k;  ++j)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  j  =  0;  j  <  k;  ++j)  {  [BUGGY]    double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  j  =  0;  j  <  k;  ++j)  {	  for(int    j    =    0;    j    <    stages.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
25	[BUG]  [BUGGY]  for(int  l  =  1;  l  <  y0.length;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  l  =  1;  l  <  y0.length;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  l  =  1;  l  <  y0.length;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
26	[BUG]  [BUGGY]  for(int  i  =  1;  l  <  stages;  ++i)  {  sum+=  b[0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  i  =  1;  l  <  stages;  ++i)  {  sum+=  b[0]  *  yDotK[0][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  i  =  1;  l  <  stages;  ++i)  {  sum+=  b[0]  *  yDotK[0][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
27	[BUG]  [BUGGY]  for(int  k  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  k  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  k  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
28	[BUG]  [BUGGY]  for(int  j  =  1;  l  <  stages;  ++j)  {  sum+=  b[0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  j  =  1;  l  <  stages;  ++j)  {  sum+=  b[0]  *  yDotK[0][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  j  =  1;  l  <  stages;  ++j)  {  sum+=  b[0]  *  yDotK[0][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
29	[BUG]  [BUGGY]  for(int  l  =  1;  l  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  l  =  1;  l  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  l  =  1;  l  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  1;  l  <  stages;  ++i)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  i  =  1;  l  <  stages;  ++i)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  i  =  1;  l  <  stages;  ++i)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++i)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  i  =  1;  i  <  stages;  ++i)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
32	[BUG]  [BUGGY]  for(int  j  =  1;  j  <  stages;  ++j)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  j  =  1;  j  <  stages;  ++j)  {  [BUGGY]    double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  j  =  1;  j  <  stages;  ++j)  {	  for(int    j    =    0;    j    <    stages;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
33	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  1;  ++j)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  j  =  0;  j  <  1;  ++j)  {  [BUGGY]    double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  j  =  0;  j  <  1;  ++j)  {	  for(int    j    =    0;    j    <    stages;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
34	[BUG]  [BUGGY]  for(int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    k    =    0;    l    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  for(int  j  =  2;  j  <  y0.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  j  =  2;  j  <  y0.length;  ++j)  {  [BUGGY]    double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  j  =  2;  j  <  y0.length;  ++j)  {	  for(int    j    =    1;    j    <    y0.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
36	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  k  =  1;  k  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  k  =  1;  k  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    k    =    1;    k    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
37	[BUG]  [BUGGY]  int  k  =  1;  k  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  int  k  =  1;  k  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	int  k  =  1;  k  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    k    =    1;    k    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
38	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  k;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  i  =  0;  i  <  k;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  i  =  0;  i  <  k;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    i    =    0;    i    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
39	[BUG]  [BUGGY]  for(int  i  =  1;  i  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  i  =  1;  i  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  i  =  1;  i  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }	      for(int    i    =    0;    i    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
40	[BUG]  [BUGGY]  for(int  k  =  0;  l  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  k  =  0;  l  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  k  =  0;  l  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    k    =    0;    l    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
41	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  stages;  ++l)  {  sum+=  b[1]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  l  =  0;  l  <  stages;  ++l)  {  sum+=  b[1]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  l  =  0;  l  <  stages;  ++l)  {  sum+=  b[1]  *  yDotK[l][j];  }	      for(int    k    =    0;    l    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
42	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  Stage.length;  ++j)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  j  =  0;  j  <  Stage.length;  ++j)  {  [BUGGY]    double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  j  =  0;  j  <  Stage.length;  ++j)  {	  for(int    j    =    0;    j    <    stage.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
43	[BUG]  [BUGGY]  for(int  k  =  0;  k  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  k  =  0;  k  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  k  =  0;  k  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }	      for(int    k    =    1;    k    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
44	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  0;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  k  =  1;  k  <  0;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  k  =  1;  k  <  0;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }	      for(int    k    =    1;    k    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
45	[BUG]  [BUGGY]  int  k  =  0;  k  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  int  k  =  0;  k  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	int  k  =  0;  k  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    k    =    0;    k    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
46	[BUG]  [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  Integer  k  =  0;  k  <  stages;  ++k)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	Integer  k  =  0;  k  <  stages;  ++k)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    k    =    0;    k    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
47	[BUG]  [BUGGY]  for(int  j  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  j  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  j  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
48	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  l  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  l  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[0][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
49	[BUG]  [BUGGY]  for(int  l  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  l  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  l  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
50	[BUG]  [BUGGY]  for(int  j  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  j  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  j  =  0;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
51	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  stages.length-1;  ++j)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  j  =  0;  j  <  stages.length-1;  ++j)  {  [BUGGY]    double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  j  =  0;  j  <  stages.length-1;  ++j)  {	  for(int    j    =    0;    j    <    stages.length;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
52	[BUG]  [BUGGY]  for(int  k  =  1;  l  <  stages;  ++l)  {  sum  +=  b[l]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  k  =  1;  l  <  stages;  ++l)  {  sum  +=  b[l]  *  yDotK[0][j];  }  [BUGGY]    double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  k  =  1;  l  <  stages;  ++l)  {  sum  +=  b[l]  *  yDotK[0][j];  }	      	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
53	[BUG]  [BUGGY]  for(int  i  =  1;  l  <  stages;  ++i)  {  sum+=  b[i]  *  yDotK[i][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  i  =  1;  l  <  stages;  ++i)  {  sum+=  b[i]  *  yDotK[i][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  i  =  1;  l  <  stages;  ++i)  {  sum+=  b[i]  *  yDotK[i][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
54	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  2;  ++j)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  j  =  0;  j  <  2;  ++j)  {  [BUGGY]    double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  j  =  0;  j  <  2;  ++j)  {	  for(int    j    =    0;    j    <    stages;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
55	[BUG]  [BUGGY]  for(int  j  =  0;  j  <  nSteps;  ++j)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  j  =  0;  j  <  nSteps;  ++j)  {  [BUGGY]    double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  j  =  0;  j  <  nSteps;  ++j)  {	  for(int    j    =    0;    j    <    stages;    ++j)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
56	[BUG]  [BUGGY]  for(int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[1][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
57	[BUG]  [BUGGY]  for(int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[0]  *  yDotK[l][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
58	[BUG]  [BUGGY]  for(int  l  =  1;  l  <  k;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  l  =  1;  l  <  k;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  l  =  1;  l  <  k;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
59	[BUG]  [BUGGY]  int  k  =  0;  l  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  int  k  =  0;  l  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	int  k  =  0;  l  <  y0.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    k    =    0;    l    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
60	[BUG]  [BUGGY]  for(int  i  =  0;  l  <  stages;  ++i)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  i  =  0;  l  <  stages;  ++i)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  i  =  0;  l  <  stages;  ++i)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    k    =    0;    l    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
61	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  0;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  k  =  1;  k  <  0;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  k  =  1;  k  <  0;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    k    =    1;    k    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
62	[BUG]  [BUGGY]  if(stages!=  null)  {  for(int  k  =  0;  k  <  b.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  if(stages!=  null)  {  for(int  k  =  0;  k  <  b.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	if(stages!=  null)  {  for(int  k  =  0;  k  <  b.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }	      if(stages!=    null)    {    for(int    k    =    0;    k    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  int  k  =  1;  ++l)  {  sum  +=  b[0]  *  yDotK[0][j];  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  int  k  =  1;  ++l)  {  sum  +=  b[0]  *  yDotK[0][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	int  k  =  1;  ++l)  {  sum  +=  b[0]  *  yDotK[0][j];  }	      for(int    k    =    0;    k    <    stages;    ++l)    {    sum    +=    b[0]    *    yDotK[0][j];    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
64	[BUG]  [BUGGY]  for(int  j  =  1;  l  <  stages;  ++j)  {  sum+=  b[0]  *  yDotK[1][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  for(int  j  =  1;  l  <  stages;  ++j)  {  sum+=  b[0]  *  yDotK[1][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	for(int  j  =  1;  l  <  stages;  ++j)  {  sum+=  b[0]  *  yDotK[1][j];  }	      for(int    k    =    1;    l    <    stages;    ++l)    {    sum+=    b[0]    *    yDotK[1][j];    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
65	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  k  =  0;  k  <  stages;  ++l)  {  sum  +=  b[1]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  if(steps!=  null)  {  for(int  k  =  0;  k  <  stages;  ++l)  {  sum  +=  b[1]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	if(steps!=  null)  {  for(int  k  =  0;  k  <  stages;  ++l)  {  sum  +=  b[1]  *  yDotK[l][j];  }	      if(stages!=    null)    {    for(int    k    =    0;    k    <    stages;    ++l)    {    sum    +=    b[1]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
66	[BUG]  [BUGGY]  if(stages!=  null)  {  for(int  k  =  0;  k  <  b.length;  ++l)  {  sum  +=  b[1]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  if(stages!=  null)  {  for(int  k  =  0;  k  <  b.length;  ++l)  {  sum  +=  b[1]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	if(stages!=  null)  {  for(int  k  =  0;  k  <  b.length;  ++l)  {  sum  +=  b[1]  *  yDotK[l][j];  }	      if(stages!=    null)    {    for(int    k    =    0;    k    <    stages;    ++l)    {    sum    +=    b[1]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
67	[BUG]  [BUGGY]  int  k  =  0;  k  <  b.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    sum  +=  a[k-1][l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  computeDerivatives(stepStart  +  c[k-1]  *  stepSize,  yTmp,  yDotK[k]);  }      [BUGGY]  int  k  =  0;  k  <  b.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  [BUGGY]    for  (int  j  =  0;  j  <  y0.length;  ++j)  {  double  sum=  b[0]  *  yDotK[0][j];  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	162	162	2	replace	int  k  =  0;  k  <  b.length;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }	      for(int    k    =    0;    k    <    stages;    ++l)    {    sum+=    b[l]    *    yDotK[l][j];    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
