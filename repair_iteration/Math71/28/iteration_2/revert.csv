projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[k-1][0]*yTmp[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[k-1][0]*yDotK[0][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[k-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=y0.length;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=y0.doubleValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=y0.length-1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=c[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<y0.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=c[k-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<y0.length;++k){for(intk=0;k<y0.length;++j){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0+j;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[k-1][0]*yDotK[0][j];continue;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j==0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150chark=0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=y[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=yTmp[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=j.doubleValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=y0.doubleValue()+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=t0.doubleValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(k==0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<y0.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[k-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<y0.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<y0.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<y0.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<yDotK.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=y[k-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=yTmp[k-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=a[k-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[y0.length-1][0]*yTmp[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=yTmp[0][0]*a[k-1][0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=a[k-1][0]*yDotK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=a[k-1][0]*yDotK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=a[k-1][0]*yDotK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150booleanstepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;k<y0.length;++k){for(intk=0;k<y0.length;++j){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<y0.length;++k){for(intk=0;k<y0.length;++j){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;k<y0.length;++k){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=j-1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=y0.length/1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=y0.length-2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<y0.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;k<y0.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150chark=0;k<y0.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<y0.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(k<0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<yDotK.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[k-1][0]*yDotK[1][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[y0.length-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y[k-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=j;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=j.length;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<y0.length;++k){sum+=a[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<y0.length;++k){sum+=c[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<y0.length;++k){sum+=b[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<y0.length;++k){sum+=a[k-1][j]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[k-1][0]*yDotK[0][j]+2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[y0.length-1][0]*yDotK[0][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y[k-1][0]*yDotK[0][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<y0.length;++k){sum+=c[k-1][j]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<stages.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<a.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<y0.length;++k){a[k-1][0]*yDotK[1][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(y0!=null){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=c[k-1][0]*yTmp[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=c[k-1][0]*yTmp[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=yTmp[0][0]*k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y[k-1][0]*yTmp[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<y0.length;++k){a[k-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(y0!=null){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<stages.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=y0.length+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0+stages;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<j.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[k-1][0]*yTmp[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<y0.length;++k){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=(j==0)?0:0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0+stages;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[k-1][0]*yDotK[0][j]/1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=t0.length;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(k==0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=c[k-1][0]*yDotK[0][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<stages.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150floatk=0;k<y0.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=c[k-1][0]*yDotK[1][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<a.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<y0.length;++k){sum+=a[k-1][l]*yDotK[l][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<y0.length;++k){sum+=a[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<y0.length;++k){sum+=c[k-1][l]*yDotK[l][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<y0.length;++k){sum+=c[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<a.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[k-1][0]*yDotK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[k-1][0]*yDotK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[k-1][0]*yDotK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150b[k-1][0]*yDotK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=a[k-1][0]*yTmp[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150finalintk=0;k<y0.length;++k){sum+=c[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<y0.length;++k){sum+=c[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=2+j;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[0][0]*yTmp[0][0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[0][0]*yTmp[k-1][0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<stages.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<stages.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<stages.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=y[k-1][0]*yDotK[1][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[1][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<y0.length;++k){a[k-1][0]*yDotK[1][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<a.length;++k){a[k-1][0]*yDotK[1][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=1;k<y0.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150chark=1;k<y0.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<y0.length;++k){a[k-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[k-1][0]*yTmp[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[k-1][0]*yDotK[0][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[y0.length-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[k-1][0]*yTmp[0][j];continue;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[k-1][0]*yDotK[0][j]/2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=t0.length-1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=j.length-1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=j.length-2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=j.length+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j>0){if(k<0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j==0){if(k<0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j<0){if(k<0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j==0){if(k<1){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=j+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=y0.length+2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[y0.length-1][0]*yTmp[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=yTmp[0][0]*a[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<stages.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<stages.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(l==null){for(intk=0;k<stages.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<y0.length;++k){sum+=a[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150sum+=a[k-1][l]*yDotK[l][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<yDotK.length;++k){sum+=a[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<y0.length;++k){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=1;k<y0.length;++k){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;k<y0.length;++k){for(intk=0;k<y1.length;++k){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150booleank=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150chark=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y[k-1][0]*yDotK[1][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=yTmp[k-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<j.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150chark=0;k<j.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;k<j.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<y0.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y0[0][0]*k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=yTmp[0][0]*k+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=yTmp[0][0]*j;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=yTmp[0][0]*k-1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=j.doubleValue()+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=y.doubleValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;k<a.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150chark=0;k<a.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150booleank=0;k<a.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<y0.length;++k){sum+=c[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=j-2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=y0.length/2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<yDotK.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<y0.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;k<a.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<a.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=j/1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=y0.length/3;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j==0){for(intk=1;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=a[k-1][0]*yTmp[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=a[k-1][0]*yTmp[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150charstepSize=c[k-1][0]*yTmp[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<y0.length;++k){sum+=c[k-1][j]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<y0.length;++k){sum+=a[k-1][j]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<yDotK.length;++k){sum+=a[k-1][j]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0+y0.length;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0+j+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y[k-1][0]*yDotK[0][j]+2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y[k-1][0]*yDotK[0][j]/1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150finalintk=0;k<y0.length;++k){sum+=c[k-1][l]*yDotK[l][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;k<y0.length;++k){sum+=c[k-1][l]*yDotK[l][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<y0.length;++k){sum+=c[k-1][l]*yDotK[l][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[k-1][0]*yDotK[1][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[k-1][0]*yTmp[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[y0.length-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150booleanstepSize=a[k-1][0]*yDotK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<y0.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<y.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j==0){if(k==0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j==0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j!=0){if(k==0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j==1){if(k==0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0+k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150sum+=a[k-1][j]*yDotK[l][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intj=0;j<y0.length;++j){sum+=a[k-1][j]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=1;k<y0.length;++k){for(intk=0;k<y0.length;++j){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<y0.length;++k){for(intj=0;j<y0.length;++j){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150booleank=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150chark=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(k==1){for(intk=1;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150Integerk=1;k<y0.length;++k){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<y0.length;++k){for(intk=0;k<y0.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<a.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1<<stageCount?stages.length:1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1<<stageSize?stages.length:1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0+j;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0+y0.length;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=y[k-1][0]*yDotK[0][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=y[k-1][0]*yTmp[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j==0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150k=0;k<y0.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y0.length-1][0]*yDotK[0][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[y0.length-1][0]*yDotK[0][j]+2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y[y0.length-1][0]*yDotK[0][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150Integerk=1;k<y0.length;++k){for(intk=0;k<y0.length;++j){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<y0.length;++k){for(intk=0;k<y0.length;++j){a[k-1][0]*yDotK
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<y0.length;++k){sum+=b[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150chark=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150booleank=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<yDotK.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<yDotK.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<yDotK.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<yDotK.length;++k){a[k-1][0]*yDotK[1][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=a[k-1][0]*yDotK[1][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=c[k-1][0]*yDotK[1][j]/1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150Stringk=0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150Chark=0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(k<0){for(intk=0;k<yDotK.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(k==0){for(intk=0;k<yDotK.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=t0.doubleValue()+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150booleanstepSize=y[k-1][0]*yDotK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j==0){if(k==0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j!=0){if(k==0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j==0){if(k==1){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=3;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=ytmp[k-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=yDotK[k-1][0]*yTmp[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=(j==0)?0:1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=(j==0)?1:0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=(j>0)?0:0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150Stringk=0;k<y0.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150Chark=0;k<y0.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150finalintk=0;k<y0.length;++k){sum+=a[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<y0.length;++k){sum+=a[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<yDotK.length;++k){sum+=a[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150booleank=0;k<y0.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150chark=0;k<y0.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=a[k-1][0]*yDotK[0][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[k-1][0]*yDotK[1][j]+2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[y0.length-1][0]*yDotK[1][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[k-1][0]*yDotK[1][j]/1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(y0==null){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j==0){if(y0!=null){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=a[y0.length-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=t0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<stages.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<stages.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<stages.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=c[k-1][0]*yDotK[0][j]+2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<y0.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<a.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=ytmp[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=yDotK[k-1][0]*yTmp[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y0.length-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150finalintk=0;k<y0.length;++k){sum+=a[k-1][l]*yDotK[l][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<y0.length;++k){sum+=a[k-1][l]*yDotK[l][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;k<y0.length;++k){sum+=a[k-1][l]*yDotK[l][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[y0.length-1][0]*yDotK[0][j]/1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[k-1][0]*yDotK[0][j]/3;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=c[k-1][0]*yDotK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[y0.length-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y0.length-1][0]*yTmp[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y0.length-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j>0){if(j==0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(l==1){if(j==0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j>0){if(j==0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(y0!=null){for(intk=1;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=y[k-1][0]*yTmp[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=y[0][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=y0[k-1][0]*yDotK[1][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150while(y0!=null){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=yTmp[0][0]*a[k-1][0][1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y[k-1][0]*yDotK[0][j]/2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150booleank=0;k<y0.length;++k){sum+=c[k-1][l]*yDotK[l][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150chark=0;k<y0.length;++k){sum+=c[k-1][l]*yDotK[l][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=2+stages;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=j-1+stages;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=(j==0)?stages:0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j==0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j==0){intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j==0){for(intk=0;k<a.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150Integerk=0;k<stages.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y0[j-1][0]*yDotK[0][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=t0.length+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(y0!=null){for(intk=1;k<y0.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(y0==null){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150while(y0!=null){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=a[k-1][0]*yTmp[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<c.length;++k){sum+=c[k-1][j]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;j<y0.length;++k){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150Doublek=0;k<y0.length;++k){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1+stages;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=yTmp[0]*a[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=yTmp[1][0]*a[k-1][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y[k-1][0]*yTmp[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150Integerk=0;k<y0.length;++k){sum+=a[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0;k<y.length;++k){sum+=a[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=y0[k-1][0]*yDotK[0][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[k-1][0]*ytK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=t0.doubleValue()+j;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=j+stages;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0+j-1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j>0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j==0){intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150Integerk=1;k<y0.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<a.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150Integerk=0;k<a.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[1][j];System.arraycopy(y,0,
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(y0!=null){for(intk=1;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<yDotK.length;++k){a[k-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150floatk=1;k<y0.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<stages.length;++k){sum+=c[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;k<y0.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150Integerk=0;k<y0.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0*stages;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<stages.length;++k){sum+=a[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<y.length;++k){sum+=a[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=a[k-1][0]*yTmp[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150booleank=0;k<y0.length;++k){sum+=a[k-1][l]*yDotK[l][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150Integerk=0;k<y0.length;++k){sum+=a[k-1][l]*yDotK[l][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=a[k-1][0]*ytK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=a[k-1][0]*yDotK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[1][
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=yTmp[0][0]*a[y0.length-1][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y[y0.length-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y0[j-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j!=0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y[j-1][0]*yDotK[0][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150booleanstepSize=c[k-1][0]*yTmp[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=2+stages;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=2+stages.length;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=yTmp[k-1][0]*yDotK[1][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150Doublek=0;k<y0.length;++k){for(intk=0;k<y0.length;++j){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150Integerk=0;k<y0.length;++k){sum+=c[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=1<<stageSize?stages[j]:0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=1<<stageSize?stages:1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j==0){for(intk=0;k<a.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j==0){for(intk=0;k<y0.length;++k){a[k-2][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<stages.length;++k){sum+=a[k-1][j]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<y.length;++k){sum+=a[k-1][j]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<b.length;++k){sum+=b[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<a.length;++k){sum+=b[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(y0!=null){doublestepSize=a[k-1][0]*yDotK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[k-2][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(k==1){for(intk=1;k<y0.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<a.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1<<stageSize?stages[k]:0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1<<stageSize?stages[j]:0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150booleanstepSize=a[k-1][0]*yDotK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[y0.length-1][0]*yTmp[0][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<c.length;++k){sum+=c[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<stages.length;++k){a[k-1][0]*yDotK[1][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(loop){if(j==0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(k==1){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j<0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[k-1][0]*yTmp[0][0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<stages.length;++k){sum+=c[k-1][j]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(k==0){for(intk=0;k<stages.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[k-1][0]*yDotK[0][j]-1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(loop){intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=0;k<stages.length;++k){sum+=b[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(k==1){for(intk=1;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<a.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[y0.length-1][0]*ytmp[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<a.length;++k){a[k-1][0]*yDotK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(k<1){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(loop){if(k<0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j<1){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(j<0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150floatstepSize=a[k-1][0]*yDotK[0][j];for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<a.length;++k){a[k-1][0]*yDotK[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;k<stages.length;++k){for(intk=0;k<y0.length;++j){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=1;k<y0.length;++k){for(intj=0;j<y0.length;++j){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[k-1][0]*ytK[0][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublestepSize=c[k-1][0]*yDotK[0][j]/1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=1<<stages;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150booleank=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150chark=0;++k){sum+=a[k-1][l]*yDotK[l][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150booleank=0;k<a.length;++k){a[k-1][0]*yDotK[0][j];System.arraycopy(y,0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150booleank=0;k<y0.length;++k){sum+=a[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=y[k-1][0]*yTmp[0][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=(j<0)?0:0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=2;k<j.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(loop){if(k==0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(k<1){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<stages.length;++k){for(intk=0;k<y0.length;++j){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0,j=0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<stages.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0;k<stages.length;++k){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=1;k<y0.length;++k){for(intk=0;k<y1.length;++k){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150booleank=0;k<y0.length;++k){sum+=c[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150chark=0;k<y0.length;++k){sum+=c[k-1][l]*yDotK[l][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150a[k-1][0]*yDotK[0][j]+1;continue;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150for(intk=1;k<yDotK.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=0,j+stages;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=t0.length-2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[k-1][0]*yTmp[1][j]+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=yTmp[k-1][0]*a[1][j];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150intk=1;k<stages.length;++k){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150k=1;k<y0.length;++k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=a[0][0]*k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublesum=ytmp[0][0]*j;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(loop){if(k==0){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(k==1){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(y1!=null){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(yTmp!=null){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[1][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(loop){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150if(y0!=null||y0.length<2){for(intk=0;k<y0.length;++k){a[k-1][0]*yDotK[0][j];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=0,j+stages;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java150doublek=1+stages;
