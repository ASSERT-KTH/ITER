projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()||(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()&&(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(prototype!=null&&requiresDenseOutput()||(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)prototype.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)super.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)prototype.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,yDotK,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)super.interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,y2,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldouble[][]yTmp=newdouble[stages][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,yTmp,0,y.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,ytmp,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()||!eventsHandlersManager.isEmpty()){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(steps>0){for(inti=0;i<stages;++i){finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.clone();}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(steps>0){for(inti=0;i<stages;++i){finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.get(i);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(steps>0){for(inti=0;i<stages;++i){finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.next();}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()||(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,ytmp,0,y.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,yDotK,0,y.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,y,0,y.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yTmp,0,y,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,yTmp,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yTmp,0,y2,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.get(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(prototype!=null||requiresDenseOutput()||(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(prototype!=null&&requiresDenseOutput()&&(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,yTmp,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,ytmp,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,yDotK,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yDotK,0,y,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yTmp,0,yDotK,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y,0,yDotK,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.next();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()||(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!prototype.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()||prototype.isInitializing())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()||prototype.isRuntime())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages][]yTmp=newint[stages][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldouble[][]yTmp=newdouble[stages+1][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldouble[][]stages=newdouble[stages][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)super.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(isInitializingStep()||(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RangeKuttaStepInterpolator)super.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RangeKuttaStepInterpolator)super.interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorsuper=(RungeKuttaStepInterpolator)super.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)super.get();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y1,0,yDotK,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()||prototype!=null)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isAllEquations())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)protocol.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y,0,yTmp,0,y.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)steps.next();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)steps.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=prototype.getSteps();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)steps.size();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)interpolator.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()||(!eventsManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorsuper=(RungeKuttaStepInterpolator)super.interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)steps.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,y,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldouble[][]yTmp=newdouble[stages-1][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)steps.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.super.interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=prototype.getRungeKuttaStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.super.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)steps.next();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.prototype.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y,0,y,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()||prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(prototype!=null&&requiresDenseOutput()||(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)prototype.copy();prototype.reinitialize(this,yTmp,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,ytmp,1,y0.length);
