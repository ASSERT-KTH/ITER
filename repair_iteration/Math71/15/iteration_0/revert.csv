projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()||(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()&&(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(prototype!=null&&requiresDenseOutput()||(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)prototype.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)super.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)prototype.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,yDotK,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)super.interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,y2,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldouble[][]yTmp=newdouble[stages][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,yTmp,0,y.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,ytmp,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()||!eventsHandlersManager.isEmpty()){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(steps>0){for(inti=0;i<stages;++i){finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.clone();}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(steps>0){for(inti=0;i<stages;++i){finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.get(i);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(steps>0){for(inti=0;i<stages;++i){finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.next();}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()||(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep())){
