bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  y.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  y.length);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	System.arraycopy(y0,  0,  ytmp,  0,  y.length);	      System.arraycopy(y0,    0,    yTmp,    0,    y.length);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
2	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  yDotK,  0,  y.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  System.arraycopy(y0,  0,  yDotK,  0,  y.length);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	System.arraycopy(y0,  0,  yDotK,  0,  y.length);	      System.arraycopy(y0,    0,    yTmp,    0,    y.length);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
3	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y,  0,  y.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  System.arraycopy(y0,  0,  y,  0,  y.length);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	System.arraycopy(y0,  0,  y,  0,  y.length);	      System.arraycopy(y0,    0,    yTmp,    0,    y.length);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
4	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  y,  0,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  System.arraycopy(yTmp,  0,  y,  0,  yTmp.length);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	System.arraycopy(yTmp,  0,  y,  0,  yTmp.length);	      System.arraycopy(y0,    0,    y2,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  yTmp.length);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	System.arraycopy(y0,  0,  yTmp,  0,  yTmp.length);	      System.arraycopy(y0,    0,    y2,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  y2,  0,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  System.arraycopy(yTmp,  0,  y2,  0,  yTmp.length);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	System.arraycopy(yTmp,  0,  y2,  0,  yTmp.length);	      System.arraycopy(y0,    0,    y2,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)steps.get(i);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)steps.get(i);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)steps.get(i);	      if(steps    >    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)steps.get(i);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
8	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)steps.get(0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)steps.get(0);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)steps.get(0);	      if(steps    >    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)steps.get(i);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
9	[BUG]  [BUGGY]  if  (prototype!=  null  ||  requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  if  (prototype!=  null  ||  requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	if  (prototype!=  null  ||  requiresDenseOutput()  ||  (!eventsHandlersManager.isEmpty()))  {	  if    (prototype!=    null    &&    requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
10	[BUG]  [BUGGY]  if  (prototype!=  null  &&  requiresDenseOutput()  &&  (!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  if  (prototype!=  null  &&  requiresDenseOutput()  &&  (!eventsHandlersManager.isEmpty()))  {  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	if  (prototype!=  null  &&  requiresDenseOutput()  &&  (!eventsHandlersManager.isEmpty()))  {	  if    (prototype!=    null    &&    requiresDenseOutput()    ||    (!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
11	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  y0.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  y0.length);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	System.arraycopy(y0,  0,  yTmp,  0,  y0.length);	      System.arraycopy(y0,    0,    ytmp,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
12	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  yTmp.length);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	System.arraycopy(y0,  0,  ytmp,  0,  yTmp.length);	      System.arraycopy(y0,    0,    ytmp,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
13	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  yDotK,  0,  y0.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  System.arraycopy(y0,  0,  yDotK,  0,  y0.length);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	System.arraycopy(y0,  0,  yDotK,  0,  y0.length);	      System.arraycopy(y0,    0,    ytmp,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(yDotK,  0,  y,  0,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  System.arraycopy(yDotK,  0,  y,  0,  yTmp.length);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	System.arraycopy(yDotK,  0,  y,  0,  yTmp.length);	      System.arraycopy(y0,    0,    yDotK,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
15	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  yDotK,  0,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  System.arraycopy(yTmp,  0,  yDotK,  0,  yTmp.length);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	System.arraycopy(yTmp,  0,  yDotK,  0,  yTmp.length);	      System.arraycopy(y0,    0,    yDotK,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(y,  0,  yDotK,  0,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  System.arraycopy(y,  0,  yDotK,  0,  yTmp.length);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	System.arraycopy(y,  0,  yDotK,  0,  yTmp.length);	      System.arraycopy(y0,    0,    yDotK,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
17	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)steps.next();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)steps.next();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)steps.next();	      if(steps    >    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)steps.next();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
18	[BUG]  [BUGGY]  if  (!requiresDenseOutput()  ||(!eventsHandlersManager.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  if  (!requiresDenseOutput()  ||(!eventsHandlersManager.isEmpty()))  {  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	if  (!requiresDenseOutput()  ||(!eventsHandlersManager.isEmpty()))  {	  if    (!requiresDenseOutput()    &&(!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
19	[BUG]  [BUGGY]  if  (!requiresDenseOutput()  &&(!prototype.isEmpty()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  if  (!requiresDenseOutput()  &&(!prototype.isEmpty()))  {  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	if  (!requiresDenseOutput()  &&(!prototype.isEmpty()))  {	  if    (!requiresDenseOutput()    &&(!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
20	[BUG]  [BUGGY]  if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  ||  prototype.isInitializing()))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  ||  prototype.isInitializing()))  {  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  ||  prototype.isInitializing()))  {	  if    (!requiresDenseOutput()    &&(!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
21	[BUG]  [BUGGY]  if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  ||  prototype.isRuntime()))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  ||  prototype.isRuntime()))  {  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  ||  prototype.isRuntime()))  {	  if    (!requiresDenseOutput()    &&(!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
22	[BUG]  [BUGGY]  final  int  stages][]  yTmp  =  new  int[stages][];  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  int  stages][]  yTmp  =  new  int[stages][];  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  int  stages][]  yTmp  =  new  int[stages][];	      final    double[][]    yTmp    =    new    double[stages][];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
23	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[stages  +  1][];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  double[][]  yTmp  =  new  double[stages  +  1][];  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  double[][]  yTmp  =  new  double[stages  +  1][];	      final    double[][]    yTmp    =    new    double[stages][];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
24	[BUG]  [BUGGY]  final  double[][]  stages  =  new  double[stages][];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  double[][]  stages  =  new  double[stages][];  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  double[][]  stages  =  new  double[stages][];	      final    double[][]    yTmp    =    new    double[stages][];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
25	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copy();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copy();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.copy();	      final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)prototype.copy();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
26	[BUG]  [BUGGY]  if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  &&  prototype.isInitializingStep()))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  &&  prototype.isInitializingStep()))  {  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  &&  prototype.isInitializingStep()))  {	  if    (requiresDenseOutput()    ||(!eventsHandlersManager.isEmpty()    &&    prototype.isInitializingStep()))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
27	[BUG]  [BUGGY]  if  (isInitializingStep()  ||(!eventsHandlersManager.isEmpty()  &&  prototype.isInitializingStep()))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  if  (isInitializingStep()  ||(!eventsHandlersManager.isEmpty()  &&  prototype.isInitializingStep()))  {  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	if  (isInitializingStep()  ||(!eventsHandlersManager.isEmpty()  &&  prototype.isInitializingStep()))  {	  if    (requiresDenseOutput()    ||(!eventsHandlersManager.isEmpty()    &&    prototype.isInitializingStep()))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
28	[BUG]  [BUGGY]  if  (requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  &&  prototype.isInitializingStep()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  if  (requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  &&  prototype.isInitializingStep()))  {  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	if  (requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  &&  prototype.isInitializingStep()))  {	  if    (requiresDenseOutput()    ||(!eventsHandlersManager.isEmpty()    &&    prototype.isInitializingStep()))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
29	[BUG]  [BUGGY]  if  (!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  if  (!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	if  (!requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {	  if    (requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
30	[BUG]  [BUGGY]  if  (requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  if  (requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	if  (requiresDenseOutput()  &&!eventsHandlersManager.isEmpty())  {	  if    (requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
31	[BUG]  [BUGGY]  if  (!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  if  (!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	if  (!requiresDenseOutput()  ||!eventsHandlersManager.isEmpty())  {	  if    (requiresDenseOutput()    ||!eventsHandlersManager.isEmpty())    {    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
32	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)steps.clone();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)steps.clone();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)steps.clone();	      if(steps    >    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)steps.clone();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
33	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)super.clone();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)super.clone();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)super.clone();	      final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.clone();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
34	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)super.interpolator.clone();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)super.interpolator.clone();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  prototype  =(RangeKuttaStepInterpolator)super.interpolator.clone();	      final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.interpolator.clone();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  super  =(RungeKuttaStepInterpolator)super.clone();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  super  =(RungeKuttaStepInterpolator)super.clone();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  super  =(RungeKuttaStepInterpolator)super.clone();	      final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.clone();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
36	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)super.get();	      final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.clone();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
37	[BUG]  [BUGGY]  System.arraycopy(y1,  0,  yDotK,  0,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  System.arraycopy(y1,  0,  yDotK,  0,  yTmp.length);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	System.arraycopy(y1,  0,  yDotK,  0,  yTmp.length);	      System.arraycopy(y0,    0,    yDotK,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
38	[BUG]  [BUGGY]  if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  ||  prototype!=  null))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  ||  prototype!=  null))  {  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  ||  prototype!=  null))  {	  if    (!requiresDenseOutput()    &&(!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
39	[BUG]  [BUGGY]  if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isAllEquations()))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isAllEquations()))  {  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isAllEquations()))  {	  if    (!requiresDenseOutput()    &&(!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
40	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)protocol.copy();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)protocol.copy();  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)protocol.copy();	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
41	[BUG]  [BUGGY]  System.arraycopy(y,  0,  yTmp,  0,  y.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  System.arraycopy(y,  0,  yTmp,  0,  y.length);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	System.arraycopy(y,  0,  yTmp,  0,  y.length);	      System.arraycopy(y0,    0,    yTmp,    0,    y.length);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
42	[BUG]  [BUGGY]  final  int  stages  =(int)steps.next();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  int  stages  =(int)steps.next();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  int  stages  =(int)steps.next();	      if(steps    >    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)steps.next();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
43	[BUG]  [BUGGY]  final  int  stages  =(int)steps.get(i);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  int  stages  =(int)steps.get(i);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  int  stages  =(int)steps.get(i);	      if(steps    >    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)steps.next();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
44	[BUG]  [BUGGY]  final  int  stages  =  prototype.getSteps();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  int  stages  =  prototype.getSteps();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  int  stages  =  prototype.getSteps();	      if(steps    >    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)steps.next();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
45	[BUG]  [BUGGY]  final  int  stages  =(int)steps.size();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  int  stages  =(int)steps.size();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  int  stages  =(int)steps.size();	      if(steps    >    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)steps.next();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
46	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)interpolator.copy();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)interpolator.copy();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)interpolator.copy();	      final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)prototype.copy();    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
47	[BUG]  [BUGGY]  if  (requiresDenseOutput()  ||(!eventsManager.isEmpty()  &&  prototype.isInitializingStep()))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  if  (requiresDenseOutput()  ||(!eventsManager.isEmpty()  &&  prototype.isInitializingStep()))  {  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	if  (requiresDenseOutput()  ||(!eventsManager.isEmpty()  &&  prototype.isInitializingStep()))  {	  if    (requiresDenseOutput()    ||(!eventsHandlersManager.isEmpty()    &&    prototype.isInitializingStep()))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
48	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  super  =(RungeKuttaStepInterpolator)super.interpolator.clone();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  super  =(RungeKuttaStepInterpolator)super.interpolator.clone();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  super  =(RungeKuttaStepInterpolator)super.interpolator.clone();	      final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.interpolator.clone();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)steps.get(i);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)steps.get(i);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)steps.get(i);	      if(steps    >    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)steps.get(i);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
50	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y,  0,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  System.arraycopy(y0,  0,  y,  0,  yTmp.length);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	System.arraycopy(y0,  0,  y,  0,  yTmp.length);	      System.arraycopy(y0,    0,    y2,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
51	[BUG]  [BUGGY]  final  double[][]  yTmp  =  new  double[stages  -  1][];  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  double[][]  yTmp  =  new  double[stages  -  1][];  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  double[][]  yTmp  =  new  double[stages  -  1][];	      final    double[][]    yTmp    =    new    double[stages][];    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
52	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)steps.clone();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)steps.clone();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)steps.clone();	      if(steps    >    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)steps.clone();    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
53	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.super.interpolator.clone();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.super.interpolator.clone();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.super.interpolator.clone();	      final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.interpolator.clone();    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
54	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.getRungeKuttaStepInterpolator();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  rki  =  prototype.getRungeKuttaStepInterpolator();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  rki  =  prototype.getRungeKuttaStepInterpolator();	      if(steps    >    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)steps.get(i);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
55	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.super.clone();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.super.clone();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.super.clone();	      final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)super.clone();    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
56	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)steps.next();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)steps.next();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  rki  =(RungeKuttaStepInterpolator)steps.next();	      if(steps    >    0)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)steps.next();    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
57	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.prototype.clone();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.prototype.clone();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)this.prototype.clone();	      final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)prototype.clone();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
58	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)interpolator.clone();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)interpolator.clone();  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)interpolator.clone();	      final    RungeKuttaStepInterpolator    prototype    =(RungeKuttaStepInterpolator)prototype.clone();    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
59	[BUG]  [BUGGY]  System.arraycopy(y,  0,  y,  0,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  System.arraycopy(y,  0,  y,  0,  yTmp.length);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	System.arraycopy(y,  0,  y,  0,  yTmp.length);	      System.arraycopy(y0,    0,    y2,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
60	[BUG]  [BUGGY]  if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  ||  prototype.isInitializingStep()))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  ||  prototype.isInitializingStep()))  {  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	if  (!requiresDenseOutput()  &&(!eventsHandlersManager.isEmpty()  ||  prototype.isInitializingStep()))  {	  if    (!requiresDenseOutput()    &&(!eventsHandlersManager.isEmpty()))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  if(prototype!=  null  &&  requiresDenseOutput()  ||(!eventsHandlersManager.isEmpty()  &&  prototype.isInitializingStep()))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  if(prototype!=  null  &&  requiresDenseOutput()  ||(!eventsHandlersManager.isEmpty()  &&  prototype.isInitializingStep()))  {  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	if(prototype!=  null  &&  requiresDenseOutput()  ||(!eventsHandlersManager.isEmpty()  &&  prototype.isInitializingStep()))  {	  if    (requiresDenseOutput()    ||(!eventsHandlersManager.isEmpty()    &&    prototype.isInitializingStep()))    {    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
62	[BUG]  [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)prototype.copy();  prototype.reinitialize(this,  yTmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)prototype.copy();  prototype.reinitialize(this,  yTmp,  yDotK,  forward);  [BUGGY]    final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	final  RungeKuttaStepInterpolator  prototype  =(RungeKuttaStepInterpolator)prototype.copy();  prototype.reinitialize(this,  yTmp,  yDotK,  forward);	      	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
63	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  1,  y0.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {  yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;    [BUGGY]  System.arraycopy(y0,  0,  ytmp,  1,  y0.length);  [BUGGY]    if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	118	118	2	replace	System.arraycopy(y0,  0,  ytmp,  1,  y0.length);	      System.arraycopy(y0,    0,    ytmp,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
