projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()||(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()&&(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(prototype!=null&&requiresDenseOutput()||(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)prototype.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)super.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)prototype.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,yDotK,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)super.interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,y2,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldouble[][]yTmp=newdouble[stages][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,yTmp,0,y.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,ytmp,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()||!eventsHandlersManager.isEmpty()){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(steps>0){for(inti=0;i<stages;++i){finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.clone();}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(steps>0){for(inti=0;i<stages;++i){finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.get(i);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(steps>0){for(inti=0;i<stages;++i){finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.next();}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()||(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,ytmp,0,y.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,yDotK,0,y.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,y,0,y.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yTmp,0,y,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,yTmp,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yTmp,0,y2,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.get(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(prototype!=null||requiresDenseOutput()||(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(prototype!=null&&requiresDenseOutput()&&(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,yTmp,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,ytmp,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,yDotK,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yDotK,0,y,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yTmp,0,yDotK,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y,0,yDotK,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.next();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()||(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!prototype.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()||prototype.isInitializing())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()||prototype.isRuntime())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages][]yTmp=newint[stages][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldouble[][]yTmp=newdouble[stages+1][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldouble[][]stages=newdouble[stages][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)super.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(isInitializingStep()||(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()&&!eventsHandlersManager.isEmpty()){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()||!eventsHandlersManager.isEmpty()){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RangeKuttaStepInterpolator)super.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RangeKuttaStepInterpolator)super.interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorsuper=(RungeKuttaStepInterpolator)super.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)super.get();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y1,0,yDotK,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()||prototype!=null)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isAllEquations())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)protocol.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y,0,yTmp,0,y.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)steps.next();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)steps.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=prototype.getSteps();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)steps.size();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)interpolator.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()||(!eventsManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorsuper=(RungeKuttaStepInterpolator)super.interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)steps.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,y,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldouble[][]yTmp=newdouble[stages-1][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)steps.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.super.interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=prototype.getRungeKuttaStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.super.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)steps.next();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.prototype.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y,0,y,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()||prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(prototype!=null&&requiresDenseOutput()||(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)prototype.copy();prototype.reinitialize(this,yTmp,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,ytmp,1,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorsuper=(RangeKuttaStepInterpolator)super.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yTmp,0,y1,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()||(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!isInitializingStep()&&(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorsuper=(RangeKuttaStepInterpolator)super.interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)this.steps.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)yTmp.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)this.stages.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yDotK,0,yTmp,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(prototype!=null&&requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(prototype!=null||requiresDenseOutput()||(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(prototype!=null&&requiresDenseOutput()||(!propertyHandlersManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yTmp,0,ytmp,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()||(!prototype.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!prototype.isInitializing())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!prototype.isEmpty()||prototype.isInitializing())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!prototype.isInterpolator())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldoublestages=(double)steps.next();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)stages.next();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)protocol.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)compiler.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldouble[][]stages=newdouble[stages-1][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldouble[][]stages=newdouble[stages][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalint[][]stages=newint[stages][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,yTmp,1,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,ytmp,1,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(isInitializingStep()||(!eventsManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()&&(!eventsManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!prototype.isEmpty()||prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!isInitializingStep()||prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)this.steps.next();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.next();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)yTmp.next();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yDotK,0,y,0,y.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y,0,yDotK,0,y.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=yTmp.getSteps();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=this.prototype.getSteps();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=prototype.getSteps()-1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldoublestages=prototype.getSteps();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yDotK,0,y1,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yDotK,0,y0,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yDotK,0,y2,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldouble[][]yTmp=newdouble[stages*1][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldouble[][]yTmp=newdouble[stages/1][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseInput()&&(!eventsHandlersManager.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()||(!eventsHandlersManager.isEmpty()&&prototype!=null)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(isRequiresDenseOutput()&&!eventsHandlersManager.isEmpty()){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()||prototype==null)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&!prototype.isEmpty()){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&!propertyEventsManager.isEmpty()){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(isInitializingStep()&&(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.super.get();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y1,0,yDotK,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y2,0,yDotK,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseInput()&&!eventsHandlersManager.isEmpty()){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.steps.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RangeKuttaStepInterpolator)interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RangeKuttaStepInterpolator)this.interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RangeKuttaStepInterpolator)this.super.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RangeKuttaStepInterpolator)this.prototype.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y,0,y,0,y.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,y2,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(prototype!=null&&isInitializingStep()||(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!eventsHandlersManager.isEmpty()&&prototype.isInitializingStep()){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldoublestages=(double)steps.size();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)steps.size()-1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)stages.size();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=prototype.getRuntimeKuttaStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=prototype.getRangeKuttaStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=prototype.getRungeKuttaStepInterpolator(yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldouble[][]yTmp=newdouble[stages-2][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldouble[][]yTmp=newdouble[stages-3][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldoublestages=(double)steps.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)yTmp.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)this.steps.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)steps.get(i-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()||(!eventsHandlersManager.isEmpty()&&prototype.isInitializing())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!prototype.isInitializing()||prototype.isInitializing())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()||(!eventsHandlersManager.isEmpty()&&prototype.isRuntime())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!prototype.isEmpty()||prototype.isRuntime())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()||prototype.isInitializingRuntime())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.steps.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)stages.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.stages.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)yTmp.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()||(!eventsHandlersManager.isAllEquations())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isAllEquations()||prototype.isAllEquations())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isAllEquations()||prototype.isRuntime())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isAllEquations()||prototype.isInitializing())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.steps.next();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.steps.get(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)stages.get(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)this.steps.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)prototype.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)yTmp.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(prototype!=null){finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)prototype.copy();prototype.reinitialize(this,yTmp,yDotK,forward);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118prototype.reinitialize(this,yTmp,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)super.copy();prototype.reinitialize(this,yTmp,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RangeKuttaStepInterpolator)interpolator.copy();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RhineKuttaStepInterpolator)interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.prototype.reset();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.prototype.remove(yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isAllEquations()||prototype!=null)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=handler.getSteps();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldouble[][]stages=newdouble[stages+1][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RangeKuttaStepInterpolator)this.super.interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yDotK,0,y,0,yTmp.length+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)this.stages.get(i);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)steps.get(i+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()&&prototype!=null)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)interpolator.next();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!isRequiresDenseOutput()&&!eventsHandlersManager.isEmpty()){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.get(i-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)equations.next();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()||prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)steps.get(i+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y1,0,yDotK,0,y.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(prototype!=null&&!requiresDenseOutput()&&(!prototype.isEmpty())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)prototype.copy();prototype.reinitialize(this,yTmp,yDotK,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()||prototype.isInterpolator())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsManager.isEmpty()||prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RangeKuttaStepInterpolator)this.steps.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldouble[][]yTmp=newdouble[stages-1][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)super.interpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&!eventsHandlersManager.isAllEquations()){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)equations.size();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)this.stages.size();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(prototype!=null&&requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()||prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)interpolator.get();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorsuper=(RungeKuttaStepInterpolator)super.get();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorsuper=(RungeKuttaStepInterpolator)super.interpolator;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()&&prototype.isInitializing())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsManager.isEmpty()||prototype.isInitializing())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RangeKuttaStepInterpolator)super.get();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finaldoublestages][]yTmp=newdouble[stages][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages][]yTmp=newdouble[stages][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages][]yTmp=newint[stages][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,yDotK,0,y1.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorsuper=(RhineKuttaStepInterpolator)super.interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()||(!eventsHandlersManager.isEmpty()||prototype.isInitializing())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.stages.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)this.steps.size();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yTmp,0,y,1,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=(RungeKuttaStepInterpolator)steps.get(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=prototype.getSteps()+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yDotK,0,y,1,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorsuper=(RungeKuttaStepInterpolator)this.super.interpolator.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)super.remove();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.stages.next();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,yTmp,0,yt.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RangeKuttaStepInterpolator)prototype.copy();prototype.reinitialize(this,yTmp,yDotK,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalintstages=(int)this.steps.next();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorrki=prototype.getRungeKuttaStepInterpolator(y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y,0,yTmp,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y0,0,ytmp,1,y0.length-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(prototype!=null&&requiresDenseOutput()||(!eventsManager.isEmpty()&&prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!eventsManager.isEmpty()&&prototype.isInitializingStep()){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.stages.get(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)steps.get(1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)this.prototype.remove();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()||(!eventsHandlersManager.isEmpty()||prototype.isRuntime())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()||(!eventsHandlersManager.isEmpty()||prototype.isInitializingStep())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118if(!requiresDenseOutput()&&(!eventsHandlersManager.isEmpty()||prototype.isInitializingStep()||stages.length>0)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(y,0,ytmp,0,y.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118finalRungeKuttaStepInterpolatorprototype=(RungeKuttaStepInterpolator)super.compute();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java118System.arraycopy(yTmp,0,yDotK,0,y.length);
