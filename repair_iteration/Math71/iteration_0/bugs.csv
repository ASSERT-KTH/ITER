bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	failing_test_number	action	patch
1	[BUG] [BUGGY] loop = false; [FE] AssertionFailedError testMissedEndEvent [CONTEXT]  interpolator.storeTime(stepStart + stepSize); if (manager.evaluateStep(interpolator)) { final double dt = manager.getEventTime() - stepStart; if (Math.abs(dt) <= Math.ulp(stepStart)) {      [BUGGY] loop = false; [BUGGY] } else {  hNew = dt; } } else {  loop = false; } } else { [CLASS] EmbeddedRungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean firstTime forward fsal lastStep loop nextIsLast CombinedEventsManager manager double[] b c scale vecAbsoluteTolerance vecRelativeTolerance y y0 yTmp double dt error exp factor hNew maxGrowth maxStep minReduction minStep nextStep nextT safety scalAbsoluteTolerance scalRelativeTolerance scaledH stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.7071067811865475	300	300	2	replace	
2	[BUG] [BUGGY] [FE] AssertionFailedError testMissedEndEvent [CONTEXT]  interpolator.storeTime(stepStart + stepSize); if (manager.evaluateStep(interpolator)) { final double dt = manager.getEventTime() - stepStart; if (Math.abs(dt) <= Math.ulp(stepStart)) {      [BUGGY] [BUGGY] loop = false; } else {  hNew = dt; } } else {  loop = false; } } else { [CLASS] EmbeddedRungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean firstTime forward fsal lastStep loop nextIsLast CombinedEventsManager manager double[] b c scale vecAbsoluteTolerance vecRelativeTolerance y y0 yTmp double dt error exp factor hNew maxGrowth maxStep minReduction minStep nextStep nextT safety scalAbsoluteTolerance scalRelativeTolerance scaledH stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.7071067811865475	300	300	2	add	
3	[BUG] [BUGGY] loop = false; [FE] AssertionFailedError testMissedEndEvent [CONTEXT]  interpolator.storeTime(stepStart + stepSize); if (manager.evaluateStep(interpolator)) { final double dt = manager.getEventTime() - stepStart; if (Math.abs(dt) <= Math.ulp(stepStart)) {      [BUGGY] loop = false; [BUGGY] } else {  stepSize = dt; } } else { loop = false; } }  [CLASS] RungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean forward lastStep loop CombinedEventsManager manager double[] b c y y0 yTmp double dt nextStep step stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	replace	
4	[BUG] [BUGGY] [FE] AssertionFailedError testMissedEndEvent [CONTEXT]  interpolator.storeTime(stepStart + stepSize); if (manager.evaluateStep(interpolator)) { final double dt = manager.getEventTime() - stepStart; if (Math.abs(dt) <= Math.ulp(stepStart)) {      [BUGGY] [BUGGY] loop = false; } else {  stepSize = dt; } } else { loop = false; } }  [CLASS] RungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean forward lastStep loop CombinedEventsManager manager double[] b c y y0 yTmp double dt nextStep step stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.7071067811865475	180	180	2	add	
5	[BUG] [BUGGY] interpolator = new DummyStepInterpolator(yTmp, yDotK[stages - 1], forward); [FE] AssertionFailedError testMissedEndEvent [CONTEXT] if (requiresDenseOutput() || (! eventsHandlersManager.isEmpty())) { final RungeKuttaStepInterpolator rki = (RungeKuttaStepInterpolator) prototype.copy(); rki.reinitialize(this, yTmp, yDotK, forward); interpolator = rki; } else { [BUGGY] interpolator = new DummyStepInterpolator(yTmp, yDotK[stages - 1], forward); [BUGGY] } [CLASS] EmbeddedRungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean firstTime forward fsal lastStep loop nextIsLast CombinedEventsManager manager double[] b c scale vecAbsoluteTolerance vecRelativeTolerance y y0 yTmp double dt error exp factor hNew maxGrowth maxStep minReduction minStep nextStep nextT safety scalAbsoluteTolerance scalRelativeTolerance scaledH stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	replace	
6	[BUG] [BUGGY] [FE] AssertionFailedError testMissedEndEvent [CONTEXT] if (requiresDenseOutput() || (! eventsHandlersManager.isEmpty())) { final RungeKuttaStepInterpolator rki = (RungeKuttaStepInterpolator) prototype.copy(); rki.reinitialize(this, yTmp, yDotK, forward); interpolator = rki; } else { [BUGGY] [BUGGY] interpolator = new DummyStepInterpolator(yTmp, yDotK[stages - 1], forward); } [CLASS] EmbeddedRungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean firstTime forward fsal lastStep loop nextIsLast CombinedEventsManager manager double[] b c scale vecAbsoluteTolerance vecRelativeTolerance y y0 yTmp double dt error exp factor hNew maxGrowth maxStep minReduction minStep nextStep nextT safety scalAbsoluteTolerance scalRelativeTolerance scaledH stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	add	
7	[BUG] [BUGGY] interpolator = new DummyStepInterpolator(yTmp, yDotK[stages - 1], forward); [FE] AssertionFailedError testMissedEndEvent [CONTEXT] if (requiresDenseOutput() || (! eventsHandlersManager.isEmpty())) { final RungeKuttaStepInterpolator rki = (RungeKuttaStepInterpolator) prototype.copy(); rki.reinitialize(this, yTmp, yDotK, forward); interpolator = rki; } else { [BUGGY] interpolator = new DummyStepInterpolator(yTmp, yDotK[stages - 1], forward); [BUGGY] } [CLASS] RungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean forward lastStep loop CombinedEventsManager manager double[] b c y y0 yTmp double dt nextStep step stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.4082482904638631	123	123	2	replace	
8	[BUG] [BUGGY] [FE] AssertionFailedError testMissedEndEvent [CONTEXT] if (requiresDenseOutput() || (! eventsHandlersManager.isEmpty())) { final RungeKuttaStepInterpolator rki = (RungeKuttaStepInterpolator) prototype.copy(); rki.reinitialize(this, yTmp, yDotK, forward); interpolator = rki; } else { [BUGGY] [BUGGY] interpolator = new DummyStepInterpolator(yTmp, yDotK[stages - 1], forward); } [CLASS] RungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean forward lastStep loop CombinedEventsManager manager double[] b c y y0 yTmp double dt nextStep step stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.4082482904638631	123	123	2	add	
9	[BUG] [BUGGY] setEquations(equations); [FE] AssertionFailedError testMissedEndEvent [CONTEXT] throws DerivativeException, IntegratorException { sanityChecks(equations, t0, y0, t, y); [BUGGY] setEquations(equations); [BUGGY] resetEvaluations(); final boolean forward = t > t0;  final int stages = c.length + 1; if (y != y0) { System.arraycopy(y0, 0, y, 0, y0.length); } final double[][] yDotK = new double[stages][]; for (int i = 0; i < stages; ++i) { [CLASS] RungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean forward lastStep loop CombinedEventsManager manager double[] b c y y0 yTmp double dt nextStep step stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	101	101	2	replace	
10	[BUG] [BUGGY] [FE] AssertionFailedError testMissedEndEvent [CONTEXT] throws DerivativeException, IntegratorException { sanityChecks(equations, t0, y0, t, y); [BUGGY] [BUGGY] setEquations(equations); resetEvaluations(); final boolean forward = t > t0;  final int stages = c.length + 1; if (y != y0) { System.arraycopy(y0, 0, y, 0, y0.length); } final double[][] yDotK = new double[stages][]; for (int i = 0; i < stages; ++i) { [CLASS] RungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean forward lastStep loop CombinedEventsManager manager double[] b c y y0 yTmp double dt nextStep step stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	101	101	2	add	
11	[BUG] [BUGGY] resetEvaluations(); [FE] AssertionFailedError testMissedEndEvent [CONTEXT] throws DerivativeException, IntegratorException { sanityChecks(equations, t0, y0, t, y); setEquations(equations); [BUGGY] resetEvaluations(); [BUGGY] final boolean forward = t > t0;  final int stages = c.length + 1; if (y != y0) { System.arraycopy(y0, 0, y, 0, y0.length); } final double[][] yDotK = new double[stages][]; for (int i = 0; i < stages; ++i) { yDotK [i] = new double[y0.length]; [CLASS] RungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean forward lastStep loop CombinedEventsManager manager double[] b c y y0 yTmp double dt nextStep step stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	102	102	2	replace	
12	[BUG] [BUGGY] [FE] AssertionFailedError testMissedEndEvent [CONTEXT] throws DerivativeException, IntegratorException { sanityChecks(equations, t0, y0, t, y); setEquations(equations); [BUGGY] [BUGGY] resetEvaluations(); final boolean forward = t > t0;  final int stages = c.length + 1; if (y != y0) { System.arraycopy(y0, 0, y, 0, y0.length); } final double[][] yDotK = new double[stages][]; for (int i = 0; i < stages; ++i) { yDotK [i] = new double[y0.length]; [CLASS] RungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean forward lastStep loop CombinedEventsManager manager double[] b c y y0 yTmp double dt nextStep step stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	102	102	2	add	
13	[BUG] [BUGGY] final boolean forward = t > t0; [FE] AssertionFailedError testMissedEndEvent [CONTEXT] throws DerivativeException, IntegratorException { sanityChecks(equations, t0, y0, t, y); setEquations(equations); resetEvaluations(); [BUGGY] final boolean forward = t > t0; [BUGGY]   final int stages = c.length + 1; if (y != y0) { System.arraycopy(y0, 0, y, 0, y0.length); } final double[][] yDotK = new double[stages][]; for (int i = 0; i < stages; ++i) { yDotK [i] = new double[y0.length]; } [CLASS] RungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean forward lastStep loop CombinedEventsManager manager double[] b c y y0 yTmp double dt nextStep step stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	103	103	2	replace	
14	[BUG] [BUGGY] [FE] AssertionFailedError testMissedEndEvent [CONTEXT] throws DerivativeException, IntegratorException { sanityChecks(equations, t0, y0, t, y); setEquations(equations); resetEvaluations(); [BUGGY] [BUGGY] final boolean forward = t > t0;  final int stages = c.length + 1; if (y != y0) { System.arraycopy(y0, 0, y, 0, y0.length); } final double[][] yDotK = new double[stages][]; for (int i = 0; i < stages; ++i) { yDotK [i] = new double[y0.length]; } [CLASS] RungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean forward lastStep loop CombinedEventsManager manager double[] b c y y0 yTmp double dt nextStep step stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	103	103	2	add	
15	[BUG] [BUGGY] final int stages = c.length + 1; [FE] AssertionFailedError testMissedEndEvent [CONTEXT] throws DerivativeException, IntegratorException { sanityChecks(equations, t0, y0, t, y); setEquations(equations); resetEvaluations(); final boolean forward = t > t0;  [BUGGY] final int stages = c.length + 1; [BUGGY] if (y != y0) { System.arraycopy(y0, 0, y, 0, y0.length); } final double[][] yDotK = new double[stages][]; for (int i = 0; i < stages; ++i) { yDotK [i] = new double[y0.length]; } final double[] yTmp = new double[y0.length];   [CLASS] RungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean forward lastStep loop CombinedEventsManager manager double[] b c y y0 yTmp double dt nextStep step stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	106	106	2	replace	
16	[BUG] [BUGGY] [FE] AssertionFailedError testMissedEndEvent [CONTEXT] throws DerivativeException, IntegratorException { sanityChecks(equations, t0, y0, t, y); setEquations(equations); resetEvaluations(); final boolean forward = t > t0;  [BUGGY] [BUGGY] final int stages = c.length + 1; if (y != y0) { System.arraycopy(y0, 0, y, 0, y0.length); } final double[][] yDotK = new double[stages][]; for (int i = 0; i < stages; ++i) { yDotK [i] = new double[y0.length]; } final double[] yTmp = new double[y0.length];   [CLASS] RungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean forward lastStep loop CombinedEventsManager manager double[] b c y y0 yTmp double dt nextStep step stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	106	106	2	add	
17	[BUG] [BUGGY] if (y != y0) { [FE] AssertionFailedError testMissedEndEvent [CONTEXT] throws DerivativeException, IntegratorException { sanityChecks(equations, t0, y0, t, y); setEquations(equations); resetEvaluations(); final boolean forward = t > t0;  final int stages = c.length + 1; [BUGGY] if (y != y0) { [BUGGY] System.arraycopy(y0, 0, y, 0, y0.length); } final double[][] yDotK = new double[stages][]; for (int i = 0; i < stages; ++i) { yDotK [i] = new double[y0.length]; } final double[] yTmp = new double[y0.length];  AbstractStepInterpolator interpolator; [CLASS] RungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean forward lastStep loop CombinedEventsManager manager double[] b c y y0 yTmp double dt nextStep step stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	107	107	2	replace	
18	[BUG] [BUGGY] [FE] AssertionFailedError testMissedEndEvent [CONTEXT] throws DerivativeException, IntegratorException { sanityChecks(equations, t0, y0, t, y); setEquations(equations); resetEvaluations(); final boolean forward = t > t0;  final int stages = c.length + 1; [BUGGY] [BUGGY] if (y != y0) { System.arraycopy(y0, 0, y, 0, y0.length); } final double[][] yDotK = new double[stages][]; for (int i = 0; i < stages; ++i) { yDotK [i] = new double[y0.length]; } final double[] yTmp = new double[y0.length];  AbstractStepInterpolator interpolator; [CLASS] RungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean forward lastStep loop CombinedEventsManager manager double[] b c y y0 yTmp double dt nextStep step stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	107	107	2	add	
19	[BUG] [BUGGY] System.arraycopy(y0, 0, y, 0, y0.length); [FE] AssertionFailedError testMissedEndEvent [CONTEXT] throws DerivativeException, IntegratorException { sanityChecks(equations, t0, y0, t, y); setEquations(equations); resetEvaluations(); final boolean forward = t > t0;  final int stages = c.length + 1; if (y != y0) { [BUGGY] System.arraycopy(y0, 0, y, 0, y0.length); [BUGGY] } final double[][] yDotK = new double[stages][]; for (int i = 0; i < stages; ++i) { yDotK [i] = new double[y0.length]; } final double[] yTmp = new double[y0.length];  AbstractStepInterpolator interpolator; if (requiresDenseOutput() || (! eventsHandlersManager.isEmpty())) { [CLASS] RungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean forward lastStep loop CombinedEventsManager manager double[] b c y y0 yTmp double dt nextStep step stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	108	108	2	replace	
20	[BUG] [BUGGY] [FE] AssertionFailedError testMissedEndEvent [CONTEXT] throws DerivativeException, IntegratorException { sanityChecks(equations, t0, y0, t, y); setEquations(equations); resetEvaluations(); final boolean forward = t > t0;  final int stages = c.length + 1; if (y != y0) { [BUGGY] [BUGGY] System.arraycopy(y0, 0, y, 0, y0.length); } final double[][] yDotK = new double[stages][]; for (int i = 0; i < stages; ++i) { yDotK [i] = new double[y0.length]; } final double[] yTmp = new double[y0.length];  AbstractStepInterpolator interpolator; if (requiresDenseOutput() || (! eventsHandlersManager.isEmpty())) { [CLASS] RungeKuttaIntegrator [METHOD] integrate [RETURN_TYPE] double  FirstOrderDifferentialEquations equations final double t0 final double[] y0 final double t final double[] y [VARIABLES] boolean forward lastStep loop CombinedEventsManager manager double[] b c y y0 yTmp double dt nextStep step stopTime sum t t0 double[][] a yDotK AbstractStepInterpolator interpolator StepHandler handler RungeKuttaStepInterpolator prototype rki int i j k l stages FirstOrderDifferentialEquations equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	108	108	2	add	
