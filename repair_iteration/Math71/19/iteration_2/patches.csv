bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepSize,  rki);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepSize,  rki);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(stepSize,  rki);	  stepHandlers    =    prototype.getStepHandlers(stepStart,    rki);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
2	[BUG]  [BUGGY]  for(StepHandler  handler  :  dt,  stepSize)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  dt,  stepSize)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  dt,  stepSize)  {	  for(StepHandler    handler    :    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
3	[BUG]  [BUGGY]  for(StepHandler  handler  :  dt,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  dt,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  dt,  stepStart)  {	  for(StepHandler    handler    :    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
4	[BUG]  [BUGGY]  for(StepHandler  handler  :  dt,  stepEnd)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  dt,  stepEnd)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  dt,  stepEnd)  {	  for(StepHandler    handler    :    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
5	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart  +  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart  +  1);	  stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize    +    1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
6	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  +  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  +  2);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  +  2);	  stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize    +    1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
7	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.getHandlers())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.getHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.getHandlers())  {	  for(StepHandler    handler    :    yTmp.getHandlers())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
8	[BUG]  [BUGGY]  for(StepHandler  handler  :  yTmp.getEventHandlers())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  yTmp.getEventHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  yTmp.getEventHandlers())  {	  for(StepHandler    handler    :    yTmp.getHandlers())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
9	[BUG]  [BUGGY]  for(StepHandler  handler  :  ytmp.getHandlers())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  ytmp.getHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  ytmp.getHandlers())  {	  for(StepHandler    handler    :    yTmp.getHandlers())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
10	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager.getEventsHandlers())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager.getEventsHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  this.eventsHandlersManager.getEventsHandlers())  {	  for(StepHandler    handler    :    eventsHandlersManager.getEventsHandlers())    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
11	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlers())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.getEventsHandlers())  {	  for(StepHandler    handler    :    eventsHandlersManager.getEventsHandlers())    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
12	[BUG]  [BUGGY]  for(StepHandler  handler  :  t0.getEventsHandlers())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  t0.getEventsHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  t0.getEventsHandlers())  {	  for(StepHandler    handler    :    eventsHandlersManager.getEventsHandlers())    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
13	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  rki.getRawHandlers();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  rki.getRawHandlers();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  rki.getRawHandlers();	  StepHandler    stepHandlers    =    prototype.getRawHandlers();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
14	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getRawHandlers(stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getRawHandlers(stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getRawHandlers(stepStart);	  StepHandler    stepHandlers    =    prototype.getRawHandlers();    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
15	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  t0,  stepSize);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y0,  t0,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y0,  t0,  stepSize);	  rki.reinitialize(this,    y0,    t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
16	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  y0,  stepStart);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  yTmp,  y0,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  yTmp,  y0,  stepStart);	  rki.reinitialize(this,    y0,    t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
17	[BUG]  [BUGGY]  rki.reinitialize(this,  y,  t0,  stepSize,  stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y,  t0,  stepSize,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y,  t0,  stepSize,  stepStart);	  rki.reinitialize(this,    t0,    y,    stepSize,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
18	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  t0,  stepSize,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y0,  t0,  stepSize,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y0,  t0,  stepSize,  stepStart);	  rki.reinitialize(this,    t0,    y,    stepSize,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
19	[BUG]  [BUGGY]  rki.reinitialize(this,  y,  stepSize,  stepStart);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y,  stepSize,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y,  stepSize,  stepStart);	  rki.reinitialize(this,    t0,    y,    stepSize,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
20	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize  -  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize  -  1);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
21	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
22	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepSize,  stepStart);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepSize,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(stepSize,  stepStart);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
23	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize,  stages);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize,  stages);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize,  stages);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
24	[BUG]  [BUGGY]  for(StepHandler  handler  :  yHandlers.length,  stepSize)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  yHandlers.length,  stepSize)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  yHandlers.length,  stepSize)  {	  for(StepHandler    handler    :    yHandlers.length)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
25	[BUG]  [BUGGY]  for(StepHandler  handler  :  yHandlers.length,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  yHandlers.length,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  yHandlers.length,  stepStart)  {	  for(StepHandler    handler    :    yHandlers.length)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
26	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(rki,  stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(rki,  stepStart,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(rki,  stepStart,  stepSize);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(rki,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
27	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(y,  stepSize);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(y,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(y,  stepSize);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(rki,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
28	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }	  if(stepSize    >    0)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    if(!lastStep)    {    throw    new    RungeKuttaIntegratorException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
29	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(int  i  =  0;  i  <  steps.length;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }	  if(stepSize    >    0)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    if(!lastStep)    {    throw    new    RungeKuttaIntegratorException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepStart;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(int  i  =  0;  i  <  stepStart;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(int  i  =  0;  i  <  stepStart;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }	  if(stepSize    >    0)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    if(!lastStep)    {    throw    new    RungeKuttaIntegratorException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
31	[BUG]  [BUGGY]  stepHandlers  =  rki.getRawHandlers();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  rki.getRawHandlers();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  rki.getRawHandlers();	  stepHandlers    =    prototype.getRawHandlers();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
32	[BUG]  [BUGGY]  stepHandlers  =  prototype.getRawHandlers(stepStart);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getRawHandlers(stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getRawHandlers(stepStart);	  stepHandlers    =    prototype.getRawHandlers();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
33	[BUG]  [BUGGY]  rki.initialize(this,  yTmp,  yDotK,  stepSize);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.initialize(this,  yTmp,  yDotK,  stepSize);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.initialize(this,  yTmp,  yDotK,  stepSize);	  rki.reinitialize(this,    t0,    yDotK,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
34	[BUG]  [BUGGY]  rki.initialize(this,  y0,  yDotK,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.initialize(this,  y0,  yDotK,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.initialize(this,  y0,  yDotK,  stepStart);	  rki.initialize(this,    yTmp,    yDotK,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
35	[BUG]  [BUGGY]  for(StepHandler  handler  :  y.stepHandlers,  stepSize)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  y.stepHandlers,  stepSize)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  y.stepHandlers,  stepSize)  {	  for(StepHandler    handler    :    y.stepHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
36	[BUG]  [BUGGY]  for(StepHandler  handler  :  y.stepHandlers,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  y.stepHandlers,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  y.stepHandlers,  stepStart)  {	  for(StepHandler    handler    :    y.stepHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
37	[BUG]  [BUGGY]  for(StepHandler  handler  :  y.stepHandlers,  stepEnd)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  y.stepHandlers,  stepEnd)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  y.stepHandlers,  stepEnd)  {	  for(StepHandler    handler    :    y.stepHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
38	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart  +  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart  +  1);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
39	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  +  2);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  +  2);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
40	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepEnd);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepEnd);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepEnd);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(t0,    stepSize,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
41	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepSize);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(t0,    stepSize,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
42	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stages);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stages);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stages);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(t0,    stepSize,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
43	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart  -  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart  -  1);	  stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
44	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize  -  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize  -  1);	  stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
45	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  -  2);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  -  2);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  -  2);	  stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
46	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventHandlersManager)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  this.eventHandlersManager)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  this.eventHandlersManager)  {	  for(StepHandler    handler    :    eventHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
47	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.getEventHandlers())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.getEventHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  eventsHandlersManager.getEventHandlers())  {	  for(StepHandler    handler    :    eventHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
48	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepSize,  stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepSize,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(stepSize,  stepStart);	  stepHandlers    =    prototype.getStepHandlers(rki,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
49	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(y,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(y,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(y,  stepStart);	  stepHandlers    =    prototype.getStepHandlers(rki,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
50	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  yDotK,  stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  yTmp,  yDotK,  stepStart,  stepSize);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  yTmp,  yDotK,  stepStart,  stepSize);	  rki.reinitialize(this,    t0,    yDotK,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
51	[BUG]  [BUGGY]  rki.reinitialize(this,  ytmp,  yDotK,  stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  ytmp,  yDotK,  stepStart,  stepSize);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  ytmp,  yDotK,  stepStart,  stepSize);	  rki.reinitialize(this,    t0,    yDotK,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
52	[BUG]  [BUGGY]  rki.initialize(this,  yTmp,  yDotK,  stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.initialize(this,  yTmp,  yDotK,  stepStart,  stepSize);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.initialize(this,  yTmp,  yDotK,  stepStart,  stepSize);	  rki.reinitialize(this,    t0,    yDotK,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
53	[BUG]  [BUGGY]  Integer  stepSize  =  rki.getIntValue();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  Integer  stepSize  =  rki.getIntValue();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	Integer  stepSize  =  rki.getIntValue();	  if(stepSize    >    stepSize)    {    for(int    i    =    0;    i    <    stages.size();    ++i)    {    StepHandler    handler    =    prototype.getStepHandler(rki);    if(handler!=    null)    {    throw    new    RungeKuttaIntegrat    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
54	[BUG]  [BUGGY]  Integer  stepSize  =  rki.getStep();  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  Integer  stepSize  =  rki.getStep();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	Integer  stepSize  =  rki.getStep();	  if(stepSize    >    stepSize)    {    for(int    i    =    0;    i    <    stages.size();    ++i)    {    StepHandler    handler    =    prototype.getStepHandler(rki);    if(handler!=    null)    {    throw    new    RungeKuttaIntegrat    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
55	[BUG]  [BUGGY]  Integer  stepSize  =  rki.getInitializingStep();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  Integer  stepSize  =  rki.getInitializingStep();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	Integer  stepSize  =  rki.getInitializingStep();	  if(stepSize    >    stepSize)    {    for(int    i    =    0;    i    <    stages.size();    ++i)    {    StepHandler    handler    =    prototype.getStepHandler(rki);    if(handler!=    null)    {    throw    new    RungeKuttaIntegrat    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
56	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y0,  yDotK,  stepStart);	  rki.reinitialize(this,    yTmp,    yDotK,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
57	[BUG]  [BUGGY]  rki.reinitialize(this,  y1,  yDotK,  stepSize);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y1,  yDotK,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y1,  yDotK,  stepSize);	  rki.reinitialize(this,    yTmp,    yDotK,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
58	[BUG]  [BUGGY]  stepHandlers  =  rki.getStepHandlers(stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  rki.getStepHandlers(stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  rki.getStepHandlers(stepStart);	  stepHandlers    =    rki.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
59	[BUG]  [BUGGY]  stepHandlers  =  proto.getStepHandlers();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  proto.getStepHandlers();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  proto.getStepHandlers();	  stepHandlers    =    rki.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
60	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.getEventHandlers())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.getEventHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.getEventHandlers())  {	  for(StepHandler    handler    :    rki.getSteps())    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
61	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.getEvents())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.getEvents())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.getEvents())  {	  for(StepHandler    handler    :    rki.getSteps())    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
62	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.clone())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.clone())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.clone())  {	  for(StepHandler    handler    :    rki.getSteps())    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
63	[BUG]  [BUGGY]  for(StepHandler  handler  :  y.stages)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  y.stages)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  y.stages)  {	  for(StepHandler    handler    :    rki.stages)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
64	[BUG]  [BUGGY]  for(StepHandler  handler  :  yTmp.stages)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  yTmp.stages)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  yTmp.stages)  {	  for(StepHandler    handler    :    rki.stages)    {    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
65	[BUG]  [BUGGY]  for(StepHandler  handler  :  y.getStepHandlers)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  y.getStepHandlers)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  y.getStepHandlers)  {	  for(StepHandler    handler    :    rki.getStepHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
66	[BUG]  [BUGGY]  for(StepHandler  handler  :  yTmp.getStepHandlers)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  yTmp.getStepHandlers)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  yTmp.getStepHandlers)  {	  for(StepHandler    handler    :    rki.getStepHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
67	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  y1,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  yTmp,  y1,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  yTmp,  y1,  stepStart);	  rki.reinitialize(this,    y0,    t1,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
68	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  t1,  stepSize);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y0,  t1,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y0,  t1,  stepSize);	  rki.reinitialize(this,    y0,    t1,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
69	[BUG]  [BUGGY]  rki.reinitialize(this,  y1,  t1,  stepSize);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y1,  t1,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y1,  t1,  stepSize);	  rki.reinitialize(this,    y0,    t1,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
70	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  y,  stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  yTmp,  y,  stepStart,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  yTmp,  y,  stepStart,  stepSize);	  rki.reinitialize(this,    y0,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
71	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  stepSize,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y0,  stepSize,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y0,  stepSize,  stepStart);	  rki.reinitialize(this,    y0,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
72	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  yTmp,  stepStart,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  yTmp,  stepStart,  stepSize);	  rki.reinitialize(this,    y0,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
73	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  y,  stepSize);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  yTmp,  y,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  yTmp,  y,  stepSize);	  rki.reinitialize(this,    y0,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
74	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers,  stepEnd)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers,  stepEnd)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  this.eventsHandlers,  stepEnd)  {	  for(StepHandler    handler    :    this.eventsHandlers,    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
75	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventsHandlers,  stepSize)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  eventsHandlers,  stepSize)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  eventsHandlers,  stepSize)  {	  for(StepHandler    handler    :    this.eventsHandlers,    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
76	[BUG]  [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager().interpolator)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager().interpolator)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  getEventsHandlersManager().interpolator)  {	  for(StepHandler    handler    :    getEventsHandlersManager())    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
77	[BUG]  [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager().getEventsHandlersManager())  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager().getEventsHandlersManager())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  getEventsHandlersManager().getEventsHandlersManager())  {	  for(StepHandler    handler    :    getEventsHandlersManager())    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
78	[BUG]  [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager().getChildren())  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager().getChildren())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  getEventsHandlersManager().getChildren())  {	  for(StepHandler    handler    :    getEventsHandlersManager())    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
79	[BUG]  [BUGGY]  for(StepHandler  handler  :  yTmp.stepHandlers,  stepSize)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  yTmp.stepHandlers,  stepSize)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  yTmp.stepHandlers,  stepSize)  {	  for(StepHandler    handler    :    yTmp.stepHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
80	[BUG]  [BUGGY]  for(StepHandler  handler  :  yTmp.stepHandlers,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  yTmp.stepHandlers,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  yTmp.stepHandlers,  stepStart)  {	  for(StepHandler    handler    :    yTmp.stepHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
81	[BUG]  [BUGGY]  for(StepHandler  handler  :  yTmp.eventsHandlers)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  yTmp.eventsHandlers)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  yTmp.eventsHandlers)  {	  for(StepHandler    handler    :    yTmp.stepHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
82	[BUG]  [BUGGY]  for(StepHandler  handler  :  y.eventsHandlers)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  y.eventsHandlers)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  y.eventsHandlers)  {	  for(StepHandler    handler    :    rki.eventsHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
83	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlers)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlers)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.getEventsHandlers)  {	  for(StepHandler    handler    :    rki.eventsHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
84	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.eventsHandlers,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.eventsHandlers,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  eventsHandlersManager.eventsHandlers,  stepStart)  {	  for(StepHandler    handler    :    this.eventsHandlers,    stepStart)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
85	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers,  stepStart,  stepSize)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers,  stepStart,  stepSize)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  this.eventsHandlers,  stepStart,  stepSize)  {	  for(StepHandler    handler    :    this.eventsHandlers,    stepStart)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
86	[BUG]  [BUGGY]  rki.reinitialize(this,  y,  stepSize,  step);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y,  stepSize,  step);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y,  stepSize,  step);	  rki.reinitialize(this,    y,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
87	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  y1,  stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y0,  y1,  stepStart,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y0,  y1,  stepStart,  stepSize);	  rki.reinitialize(this,    yTmp,    y1,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
88	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  y1,  stepSize,  step);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  yTmp,  y1,  stepSize,  step);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  yTmp,  y1,  stepSize,  step);	  rki.reinitialize(this,    yTmp,    y1,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
89	[BUG]  [BUGGY]  rki.reinitialize(this,  y,  y1,  stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y,  y1,  stepStart,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y,  y1,  stepStart,  stepSize);	  rki.reinitialize(this,    yTmp,    y1,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
90	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart  -  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart  -  1);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize    -    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
91	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  -  2);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  -  2);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  -  2);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize    -    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
92	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepEnd);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepEnd);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepEnd);	  stepHandlers    =    prototype.getStepHandlers(t0,    stepSize,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
93	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepSize);	  stepHandlers    =    prototype.getStepHandlers(t0,    stepSize,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
94	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stages);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stages);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stages);	  stepHandlers    =    prototype.getStepHandlers(t0,    stepSize,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
95	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stages,  stepSize,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stages,  stepSize,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stages,  stepSize,  stepStart);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize,    stages);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
96	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.children)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.children)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.children)  {	  for(StepHandler    handler    :    children)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
97	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.children)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  this.children)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  this.children)  {	  for(StepHandler    handler    :    children)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
98	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepSize,  rki);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepSize,  rki);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(stepSize,  rki);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(stepStart,    rki);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
99	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  y,  stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y0,  y,  stepStart,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y0,  y,  stepStart,  stepSize);	  rki.reinitialize(this,    y0,    t0,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
100	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlersManager,  stepSize)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlersManager,  stepSize)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.getEventsHandlersManager,  stepSize)  {	  for(StepHandler    handler    :    rki.getEventsHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
101	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlersManager,  t0)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlersManager,  t0)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.getEventsHandlersManager,  t0)  {	  for(StepHandler    handler    :    rki.getEventsHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
102	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlersManager,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlersManager,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.getEventsHandlersManager,  stepStart)  {	  for(StepHandler    handler    :    rki.getEventsHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
103	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.stepHandlers,  stepEnd)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.stepHandlers,  stepEnd)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.stepHandlers,  stepEnd)  {	  for(StepHandler    handler    :    rki.stepHandlers,    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
104	[BUG]  [BUGGY]  for(StepHandler  handler  :  y0.stepHandlers,  stepSize)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  y0.stepHandlers,  stepSize)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  y0.stepHandlers,  stepSize)  {	  for(StepHandler    handler    :    rki.stepHandlers,    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
105	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  stepSize);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y0,  yDotK,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y0,  yDotK,  stepSize);	  rki.reinitialize(this,    yTmp,    yDotK,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
106	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(rki,  stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(rki,  stepStart,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(rki,  stepStart,  stepSize);	  stepHandlers    =    prototype.getStepHandlers(rki,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
107	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(y,  stepSize);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(y,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(y,  stepSize);	  stepHandlers    =    prototype.getStepHandlers(rki,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
108	[BUG]  [BUGGY]  stepSize  =  forward?  t0  :  -step;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepSize  =  forward?  t0  :  -step;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepSize  =  forward?  t0  :  -step;	  stepStart    =    t0;    stepSize    =    forward?    step    :    -step;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
109	[BUG]  [BUGGY]  stepSize  =  forward?  step  :  -step;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepSize  =  forward?  step  :  -step;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepSize  =  forward?  step  :  -step;	  stepStart    =    t0;    stepSize    =    forward?    step    :    -step;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
110	[BUG]  [BUGGY]  stepSize  =  y0?  step  :  -step;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepSize  =  y0?  step  :  -step;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepSize  =  y0?  step  :  -step;	  stepStart    =    t0;    stepSize    =    forward?    step    :    -step;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
111	[BUG]  [BUGGY]  stepSize  =  forward?  y0  :  -step;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepSize  =  forward?  y0  :  -step;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepSize  =  forward?  y0  :  -step;	  stepStart    =    t0;    stepSize    =    forward?    step    :    -step;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
112	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize,  stages);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize,  stages);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize,  stages);	  stepHandlers    =    prototype.getStepHandlers(stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
113	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(t0,  stepSize);	  stepHandlers    =    prototype.getStepHandlers(stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
114	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers,  t0,  stepSize)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers,  t0,  stepSize)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  this.eventsHandlers,  t0,  stepSize)  {	  for(StepHandler    handler    :    this.eventsHandlers,    t0)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
115	[BUG]  [BUGGY]  for(StepHandler  handler  :  yHandlers.toArray(new  StepHandler[yHandlers.size()  ]))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  yHandlers.toArray(new  StepHandler[yHandlers.size()  ]))  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  yHandlers.toArray(new  StepHandler[yHandlers.size()  ]))  {	  for(StepHandler    handler    :    yHandlers.clone())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
116	[BUG]  [BUGGY]  for(StepHandler  handler  :  yHandlers.iterator().next())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  yHandlers.iterator().next())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  yHandlers.iterator().next())  {	  for(StepHandler    handler    :    yHandlers.clone())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
117	[BUG]  [BUGGY]  for(StepHandler  handler  :  yTmp,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  yTmp,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  yTmp,  stepStart)  {	  for(StepHandler    handler    :    yTmp,    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
118	[BUG]  [BUGGY]  for(StepHandler  handler  :  y,  stepSize)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  y,  stepSize)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  y,  stepSize)  {	  for(StepHandler    handler    :    yTmp,    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
119	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki,  stepSize)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki,  stepSize)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki,  stepSize)  {	  for(StepHandler    handler    :    yTmp,    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
120	[BUG]  [BUGGY]  for(StepHandler  handler  :  ytmp,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  ytmp,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  ytmp,  stepStart)  {	  for(StepHandler    handler    :    yTmp,    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
121	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  rki.getStepHandlers(stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  rki.getStepHandlers(stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  rki.getStepHandlers(stepStart);	  StepHandler    stepHandlers    =    rki.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
122	[BUG]  [BUGGY]  stepHandler  =  prototype.getStepHandler(stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandler  =  prototype.getStepHandler(stepStart);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandler  =  prototype.getStepHandler(stepStart);	  stepHandler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
123	[BUG]  [BUGGY]  stepHandler  =  handler.getStepHandler();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandler  =  handler.getStepHandler();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandler  =  handler.getStepHandler();	  stepHandler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
124	[BUG]  [BUGGY]  stepHandler  =  rki.getStepHandler();  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandler  =  rki.getStepHandler();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandler  =  rki.getStepHandler();	  stepHandler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
125	[BUG]  [BUGGY]  for(StepHandler  handler  :  ytmp.stepHandlers,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  ytmp.stepHandlers,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  ytmp.stepHandlers,  stepStart)  {	  for(StepHandler    handler    :    rki.stepHandlers,    stepStart)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
126	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager,  t)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager,  t)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  this.eventsHandlersManager,  t)  {	  for(StepHandler    handler    :    this.eventsHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
127	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager,  t0)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager,  t0)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  this.eventsHandlersManager,  t0)  {	  for(StepHandler    handler    :    this.eventsHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
128	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager,  stepSize)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager,  stepSize)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  this.eventsHandlersManager,  stepSize)  {	  for(StepHandler    handler    :    this.eventsHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
129	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(y,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(y,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(y,  stepStart);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(rki,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
130	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  rki.getStepHandlers(prototype,  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  rki.getStepHandlers(prototype,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  rki.getStepHandlers(prototype,  stepStart);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(rki,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
131	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  y,  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y0,  y,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y0,  y,  stepStart);	  rki.reinitialize(this,    yTmp,    y,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
132	[BUG]  [BUGGY]  rki.reinitialize(this,  y,  y,  stepSize);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y,  y,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y,  y,  stepSize);	  rki.reinitialize(this,    yTmp,    y,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
133	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers.values())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers.values())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  this.eventsHandlers.values())  {	  for(StepHandler    handler    :    yHandlers.values())    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
134	[BUG]  [BUGGY]  for(StepHandler  handler  :  yHandlers.get(stepSize))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  yHandlers.get(stepSize))  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  yHandlers.get(stepSize))  {	  for(StepHandler    handler    :    yHandlers.values())    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
135	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventsHandlers.values())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  eventsHandlers.values())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  eventsHandlers.values())  {	  for(StepHandler    handler    :    yHandlers.values())    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
136	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  handler.reset();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  handler.reset();  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  handler.reset();  }	  if(stepSize    >    0)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    handler.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
137	[BUG]  [BUGGY]  int  stepSize  =  0;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  int  stepSize  =  0;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	int  stepSize  =  0;	  if(stepSize    >    0)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    handler.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
138	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  interpolator.reset();  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(int  i  =  0;  i  <  stepSize;  i++)  {  interpolator.reset();  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(int  i  =  0;  i  <  stepSize;  i++)  {  interpolator.reset();  }	  if(stepSize    >    0)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    handler.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
139	[BUG]  [BUGGY]  Integer  stepSize  =  rki.getStep(stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  Integer  stepSize  =  rki.getStep(stepStart,  stepSize);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	Integer  stepSize  =  rki.getStep(stepStart,  stepSize);	  if(stepSize    >    0)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    handler.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
140	[BUG]  [BUGGY]  rki.initialize(this,  y,  t0,  stepSize);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.initialize(this,  y,  t0,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.initialize(this,  y,  t0,  stepSize);	  rki.reinitialize(this,    t0,    y,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
141	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  t1,  stepSize,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y0,  t1,  stepSize,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y0,  t1,  stepSize,  stepStart);	  rki.reinitialize(this,    y0,    t1,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
142	[BUG]  [BUGGY]  if(stepSize  >  stepStart)  {  for(int  i  =  0;  i  <  stages.size();  ++i)  {  StepHandler  handler  =  prototype.getStepHandler(rki);  if(handler!=  null)  {  throw  new  RungeKutta  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  if(stepSize  >  stepStart)  {  for(int  i  =  0;  i  <  stages.size();  ++i)  {  StepHandler  handler  =  prototype.getStepHandler(rki);  if(handler!=  null)  {  throw  new  RungeKutta  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	if(stepSize  >  stepStart)  {  for(int  i  =  0;  i  <  stages.size();  ++i)  {  StepHandler  handler  =  prototype.getStepHandler(rki);  if(handler!=  null)  {  throw  new  RungeKutta	  if(stepSize    >    stepSize)    {    for(int    i    =    0;    i    <    stages.size();    ++i)    {    StepHandler    handler    =    prototype.getStepHandler(rki);    if(handler!=    null)    {    throw    new    RungeKuttaIntegrator    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
143	[BUG]  [BUGGY]  if(stepSize  >  stepStart)  {  for(int  i  =  0;  i  <  stages.size();  ++i)  {  StepHandler  handler  =  prototype.getStepHandler(rki);  if(handler!=  null)  {  throw  new  RungeKuttaIntegrat  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  if(stepSize  >  stepStart)  {  for(int  i  =  0;  i  <  stages.size();  ++i)  {  StepHandler  handler  =  prototype.getStepHandler(rki);  if(handler!=  null)  {  throw  new  RungeKuttaIntegrat  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	if(stepSize  >  stepStart)  {  for(int  i  =  0;  i  <  stages.size();  ++i)  {  StepHandler  handler  =  prototype.getStepHandler(rki);  if(handler!=  null)  {  throw  new  RungeKuttaIntegrat	  if(stepSize    >    stepSize)    {    for(int    i    =    0;    i    <    stages.size();    ++i)    {    StepHandler    handler    =    prototype.getStepHandler(rki);    if(handler!=    null)    {    throw    new    RungeKuttaIntegrator    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
144	[BUG]  [BUGGY]  if(stepSize  >  stepStart)  {  for(int  i  =  0;  i  <  stages.size();  ++i)  {  StepHandler  handler  =  prototype.getStepHandler(rki);  if(handler!=  null)  {  throw  new  RungeKuttaIn  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  if(stepSize  >  stepStart)  {  for(int  i  =  0;  i  <  stages.size();  ++i)  {  StepHandler  handler  =  prototype.getStepHandler(rki);  if(handler!=  null)  {  throw  new  RungeKuttaIn  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	if(stepSize  >  stepStart)  {  for(int  i  =  0;  i  <  stages.size();  ++i)  {  StepHandler  handler  =  prototype.getStepHandler(rki);  if(handler!=  null)  {  throw  new  RungeKuttaIn	  if(stepSize    >    stepSize)    {    for(int    i    =    0;    i    <    stages.size();    ++i)    {    StepHandler    handler    =    prototype.getStepHandler(rki);    if(handler!=    null)    {    throw    new    RungeKuttaIntegrator    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
145	[BUG]  [BUGGY]  if(stepSize  >  stepStart)  {  for(int  i  =  0;  i  <  stages.size();  ++i)  {  StepHandler  handler  =  prototype.getStepHandler(rki);  if(handler!=  null)  {  throw  new  RungeKutt  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  if(stepSize  >  stepStart)  {  for(int  i  =  0;  i  <  stages.size();  ++i)  {  StepHandler  handler  =  prototype.getStepHandler(rki);  if(handler!=  null)  {  throw  new  RungeKutt  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	if(stepSize  >  stepStart)  {  for(int  i  =  0;  i  <  stages.size();  ++i)  {  StepHandler  handler  =  prototype.getStepHandler(rki);  if(handler!=  null)  {  throw  new  RungeKutt	  if(stepSize    >    stepSize)    {    for(int    i    =    0;    i    <    stages.size();    ++i)    {    StepHandler    handler    =    prototype.getStepHandler(rki);    if(handler!=    null)    {    throw    new    RungeKuttaIntegrator    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
146	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlersManager())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlersManager())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.getEventsHandlersManager())  {	  for(StepHandler    handler    :    rki.eventsHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
147	[BUG]  [BUGGY]  for(StepHandler  handler  :  y.eventsHandlersManager)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  y.eventsHandlersManager)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  y.eventsHandlersManager)  {	  for(StepHandler    handler    :    rki.eventsHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
148	[BUG]  [BUGGY]  for(StepHandler  handler  :  y.steps)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  y.steps)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  y.steps)  {	  for(StepHandler    handler    :    rki.steps)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
149	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.steps,  stepSize)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.steps,  stepSize)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.steps,  stepSize)  {	  for(StepHandler    handler    :    rki.steps)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
150	[BUG]  [BUGGY]  stepHandler  =  prototype.getStepHandler(rki,  stepStart);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandler  =  prototype.getStepHandler(rki,  stepStart);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandler  =  prototype.getStepHandler(rki,  stepStart);	  stepHandler    =    prototype.getStepHandler(rki);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
151	[BUG]  [BUGGY]  stepHandler  =  prototype.getStepHandler(rki,  stepSize);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandler  =  prototype.getStepHandler(rki,  stepSize);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandler  =  prototype.getStepHandler(rki,  stepSize);	  stepHandler    =    prototype.getStepHandler(rki);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
152	[BUG]  [BUGGY]  stepHandler  =  rki.getStepHandler(prototype);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandler  =  rki.getStepHandler(prototype);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandler  =  rki.getStepHandler(prototype);	  stepHandler    =    prototype.getStepHandler(rki);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
153	[BUG]  [BUGGY]  rki.reinitialize(this,  y1,  yDotK,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y1,  yDotK,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y1,  yDotK,  stepStart);	  rki.reinitialize(this,    yTmp,    yDotK,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
154	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  y,  stepSize,  stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  yTmp,  y,  stepSize,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  yTmp,  y,  stepSize,  stepStart);	  rki.reinitialize(this,    t0,    y,    stepSize,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
155	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(y0,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(y0,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(y0,  stepStart);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(rki,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
156	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize  +  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize  +  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize  +  1);	  stepHandlers    =    prototype.getStepHandlers(stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
157	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.getEventHandlers)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.getEventHandlers)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.getEventHandlers)  {	  for(StepHandler    handler    :    rki.getStepHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
158	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.getStepHandlers,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.getStepHandlers,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.getStepHandlers,  stepStart)  {	  for(StepHandler    handler    :    rki.getStepHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
159	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(y0,  stepSize);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(y0,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(y0,  stepSize);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(rki,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
160	[BUG]  [BUGGY]  for(StepHandler  handler  :  yTmp.getStepHandlers())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  yTmp.getStepHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  yTmp.getStepHandlers())  {	  for(StepHandler    handler    :    yTmp.stepHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
161	[BUG]  [BUGGY]  for(StepHandler  handler  :  yTmp.events)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  yTmp.events)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  yTmp.events)  {	  for(StepHandler    handler    :    yTmp.stepHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
162	[BUG]  [BUGGY]  for(StepHandler  handler  :  t0.getEventHandlers())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  t0.getEventHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  t0.getEventHandlers())  {	  for(StepHandler    handler    :    t0)    {    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
163	[BUG]  [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager(),  t)  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  getEventsHandlersManager(),  t)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  getEventsHandlersManager(),  t)  {	  for(StepHandler    handler    :    getEventsHandlersManager())    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
164	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stages,  stepSize);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stages,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stages,  stepSize);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize,    stages);    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
165	[BUG]  [BUGGY]  for(StepHandler  handler  :  dt.getHandlers())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  dt.getHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  dt.getHandlers())  {	  for(StepHandler    handler    :    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
166	[BUG]  [BUGGY]  rki.reinitialize(this,  y,  stepSize,  t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y,  stepSize,  t0);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y,  stepSize,  t0);	  rki.reinitialize(this,    y,    t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
167	[BUG]  [BUGGY]  rki.reinitialize(this,  y,  stepStart,  t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y,  stepStart,  t0);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y,  stepStart,  t0);	  rki.reinitialize(this,    y,    t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
168	[BUG]  [BUGGY]  int  stepSize  =  stages.size();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  int  stepSize  =  stages.size();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	int  stepSize  =  stages.size();	  if(stepSize    >    stepSize)    {    for(int    i    =    0;    i    <    stages.size();    ++i)    {    StepHandler    handler    =    prototype.getStepHandler(rki);    if(handler!=    null)    {    throw    new    RungeKuttaIntegrat    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
169	[BUG]  [BUGGY]  Integer  stages  =  prototype.getStepstages(rki);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  Integer  stages  =  prototype.getStepstages(rki);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	Integer  stages  =  prototype.getStepstages(rki);	  if(stepSize    >    stepSize)    {    for(int    i    =    0;    i    <    stages.size();    ++i)    {    StepHandler    handler    =    prototype.getStepHandler(rki);    if(handler!=    null)    {    throw    new    RungeKuttaIntegrat    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
170	[BUG]  [BUGGY]  Integer  stages  =  prototype.getSteps();  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  Integer  stages  =  prototype.getSteps();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	Integer  stages  =  prototype.getSteps();	  if(stepSize    >    stepSize)    {    for(int    i    =    0;    i    <    stages.size();    ++i)    {    StepHandler    handler    =    prototype.getStepHandler(rki);    if(handler!=    null)    {    throw    new    RungeKuttaIntegrat    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
171	[BUG]  [BUGGY]  rki.initialize(this,  y0,  y1,  stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.initialize(this,  y0,  y1,  stepStart,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.initialize(this,  y0,  y1,  stepStart,  stepSize);	  rki.reinitialize(this,    yTmp,    y1,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
172	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  rki);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  rki);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  rki);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(stepStart,    rki);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
173	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart  -  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart  -  1);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
174	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  step  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  step  -  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  step  -  1);	  stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
175	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  step  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  step  -  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  step  -  1);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize    -    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
176	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  rki.getStepHandlers(interpolator);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  rki.getStepHandlers(interpolator);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  rki.getStepHandlers(interpolator);	  StepHandler    stepHandlers    =    rki.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
177	[BUG]  [BUGGY]  stepStart  =  t0;  stepSize  =  next?  step  :  -step;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepStart  =  t0;  stepSize  =  next?  step  :  -step;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepStart  =  t0;  stepSize  =  next?  step  :  -step;	  stepStart    =    t0;    stepSize    =    forward?    step    :    -step;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
178	[BUG]  [BUGGY]  stepStart  =  t0;  stepSize  =  forward?  step  :  -1;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepStart  =  t0;  stepSize  =  forward?  step  :  -1;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepStart  =  t0;  stepSize  =  forward?  step  :  -1;	  stepStart    =    t0;    stepSize    =    forward?    step    :    -step;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
179	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  y0,  stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  yTmp,  y0,  stepStart,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  yTmp,  y0,  stepStart,  stepSize);	  rki.reinitialize(this,    y0,    t0,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
180	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  t0,  stepSize,  step);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y0,  t0,  stepSize,  step);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y0,  t0,  stepSize,  step);	  rki.reinitialize(this,    y0,    t0,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
181	[BUG]  [BUGGY]  rki.initialize(this,  y0,  yDotK,  stepSize);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.initialize(this,  y0,  yDotK,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.initialize(this,  y0,  yDotK,  stepSize);	  rki.reinitialize(this,    yTmp,    yDotK,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
182	[BUG]  [BUGGY]  rki.initialize(this,  y1,  yDotK,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.initialize(this,  y1,  yDotK,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.initialize(this,  y1,  yDotK,  stepStart);	  rki.initialize(this,    yTmp,    yDotK,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
183	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize  +  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart,  stepSize  +  1);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
184	[BUG]  [BUGGY]  stepHandlers  =  rki.getStepHandlers(interpolator);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  rki.getStepHandlers(interpolator);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  rki.getStepHandlers(interpolator);	  stepHandlers    =    rki.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
185	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  *  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  *  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  *  1);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
186	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(int  i  =  0;  i  <  stages;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(int  i  =  0;  i  <  stages;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }	  if(stepSize    >    0)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    if(!lastStep)    {    throw    new    RungeKuttaIntegratorException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
187	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(int  i  =  0;  i  <  steps;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(int  i  =  0;  i  <  steps;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }	  if(stepSize    >    0)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    if(!lastStep)    {    throw    new    RungeKuttaIntegratorException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
188	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stages,  stepSize);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stages,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stages,  stepSize);	  stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize,    stages);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
189	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart  -  stepSize);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart  -  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart  -  stepSize);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(stepSize);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
190	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  rki.getStepHandlers(stepSize);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  rki.getStepHandlers(stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  rki.getStepHandlers(stepSize);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(stepSize);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
191	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlersManager,  t)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlersManager,  t)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.getEventsHandlersManager,  t)  {	  for(StepHandler    handler    :    rki.getEventsHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
192	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlersManager),  this)  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlersManager),  this)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.getEventsHandlersManager),  this)  {	  for(StepHandler    handler    :    rki.getEventsHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
193	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  eventsHandlersManager,  stepStart)  {	  for(StepHandler    handler    :    this.eventsHandlers,    stepStart)    {    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
194	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(y0,  stepSize);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(y0,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(y0,  stepSize);	  stepHandlers    =    prototype.getStepHandlers(rki,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
195	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  stepSize);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y0,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y0,  stepSize);	  rki.reinitialize(this,    t0,    y,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
196	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.getInstances())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.getInstances())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.getInstances())  {	  for(StepHandler    handler    :    rki.getSteps())    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
197	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.getStdHandlers())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.getStdHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.getStdHandlers())  {	  for(StepHandler    handler    :    rki.getSteps())    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
198	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  rki);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  rki);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(t0,  rki);	  stepHandlers    =    prototype.getStepHandlers(stepStart,    rki);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
199	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  this.eventsHandlers())  {	  for(StepHandler    handler    :    getEventsHandlers())    {    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
200	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart  -  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(stepStart  -  1);	  stepHandlers    =    prototype.getStepHandlers(stepStart);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
201	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers.clone())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers.clone())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  this.eventsHandlers.clone())  {	  for(StepHandler    handler    :    yHandlers.clone())    {    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
202	[BUG]  [BUGGY]  for(StepHandler  handler  :  y0.getHandlers())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  y0.getHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  y0.getHandlers())  {	  for(StepHandler    handler    :    y0)    {    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
203	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.eventsHandlers)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.eventsHandlers)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  eventsHandlersManager.eventsHandlers)  {	  for(StepHandler    handler    :    this.eventsHandlers,    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
204	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager,  stepSize)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager,  stepSize)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  eventsHandlersManager,  stepSize)  {	  for(StepHandler    handler    :    this.eventsHandlers,    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
205	[BUG]  [BUGGY]  for(StepHandler  handler  :  children.length)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  children.length)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  children.length)  {	  for(StepHandler    handler    :    children)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
206	[BUG]  [BUGGY]  Integer  stages  =  prototype.getSteps(rki);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  Integer  stages  =  prototype.getSteps(rki);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	Integer  stages  =  prototype.getSteps(rki);	  if(stepSize    >    stepSize)    {    for(int    i    =    0;    i    <    stages.size();    ++i)    {    StepHandler    handler    =    prototype.getStepHandler(rki);    if(handler!=    null)    {    throw    new    RungeKuttaIntegrator    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
207	[BUG]  [BUGGY]  Integer  stepSize  =  rki.getStepSize();  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  Integer  stepSize  =  rki.getStepSize();  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	Integer  stepSize  =  rki.getStepSize();	  if(stepSize    >    stepSize)    {    for(int    i    =    0;    i    <    stages.size();    ++i)    {    StepHandler    handler    =    prototype.getStepHandler(rki);    if(handler!=    null)    {    throw    new    RungeKuttaIntegrator    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
208	[BUG]  [BUGGY]  for(StepHandler  handler  :  t0.getHandlers())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  t0.getHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  t0.getHandlers())  {	  for(StepHandler    handler    :    yTmp.getHandlers())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
209	[BUG]  [BUGGY]  rki.reinitialize(this,  y0,  stepSize,  step);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  y0,  stepSize,  step);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  y0,  stepSize,  step);	  rki.reinitialize(this,    y0,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
210	[BUG]  [BUGGY]  stepHandlers  =  prototype.getHeaderHandlers();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getHeaderHandlers();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getHeaderHandlers();	  stepHandlers    =    prototype.getRawHandlers();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
211	[BUG]  [BUGGY]  rki.initialize(this,  y0,  y,  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.initialize(this,  y0,  y,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.initialize(this,  y0,  y,  stepStart);	  rki.reinitialize(this,    yTmp,    y,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
212	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.stages,  stepSize)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.stages,  stepSize)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.stages,  stepSize)  {	  for(StepHandler    handler    :    rki.stepHandlers,    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
213	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.stages,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.stages,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.stages,  stepStart)  {	  for(StepHandler    handler    :    rki.stepHandlers,    stepStart)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
214	[BUG]  [BUGGY]  for(StepHandler  handler  :  y0.stepHandlers,  stepStart)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  y0.stepHandlers,  stepStart)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  y0.stepHandlers,  stepStart)  {	  for(StepHandler    handler    :    rki.stepHandlers,    stepStart)    {    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
215	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager,  t0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager,  t0)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  eventsHandlersManager,  t0)  {	  for(StepHandler    handler    :    this.eventsHandlers,    t0)    {    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
216	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.values())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.values())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  eventsHandlersManager.values())  {	  for(StepHandler    handler    :    yHandlers.values())    {    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
217	[BUG]  [BUGGY]  int  stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  handler.reset();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  int  stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  handler.reset();  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	int  stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  handler.reset();  }	  if(stepSize    >    0)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    handler.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
218	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  handler.reset();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(int  i  =  0;  i  <  steps.length;  i++)  {  handler.reset();  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(int  i  =  0;  i  <  steps.length;  i++)  {  handler.reset();  }	  if(stepSize    >    0)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    handler.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
219	[BUG]  [BUGGY]  int  stepSize  >  0)  {  for(int  i  =  0;  i  <  steps;  i++)  {  handler.reset();  }  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  int  stepSize  >  0)  {  for(int  i  =  0;  i  <  steps;  i++)  {  handler.reset();  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	int  stepSize  >  0)  {  for(int  i  =  0;  i  <  steps;  i++)  {  handler.reset();  }	  if(stepSize    >    0)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    handler.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
220	[BUG]  [BUGGY]  stepHandler  =  handler.getStepHandler(rki);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandler  =  handler.getStepHandler(rki);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandler  =  handler.getStepHandler(rki);	  stepHandler    =    prototype.getStepHandler(rki);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
221	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  *  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  *  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  *  1);	  stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize    +    1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
222	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart  +  stepSize);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart  +  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(stepStart  +  stepSize);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(stepSize);    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
223	[BUG]  [BUGGY]  stepHandler  =  prototype.getStepHandler(stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandler  =  prototype.getStepHandler(stepStart,  stepSize);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandler  =  prototype.getStepHandler(stepStart,  stepSize);	  stepHandler    =    prototype.getStepHandler();    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
224	[BUG]  [BUGGY]  for(StepHandler  handler  :  dt,  stages)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  dt,  stages)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  dt,  stages)  {	  for(StepHandler    handler    :    dt)    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
225	[BUG]  [BUGGY]  rki.initialize(this,  t0,  yDotK,  stepStart);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.initialize(this,  t0,  yDotK,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.initialize(this,  t0,  yDotK,  stepStart);	  rki.initialize(this,    yTmp,    yDotK,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
226	[BUG]  [BUGGY]  rki.initialize(this,  yTmp,  stepSize,  yDotK);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.initialize(this,  yTmp,  stepSize,  yDotK);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.initialize(this,  yTmp,  stepSize,  yDotK);	  rki.initialize(this,    yTmp,    yDotK,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
227	[BUG]  [BUGGY]  stepHandlers  =  rki.interpolator.getStepHandlers();  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  rki.interpolator.getStepHandlers();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  rki.interpolator.getStepHandlers();	  stepHandlers    =    rki.getStepHandlers();    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
228	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  stepSize,  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  yTmp,  stepSize,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  yTmp,  stepSize,  stepStart);	  rki.reinitialize(this,    yTmp,    y,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
229	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlersManager,  this)  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.getEventsHandlersManager,  this)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.getEventsHandlersManager,  this)  {	  for(StepHandler    handler    :    rki.getEventsHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
230	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventsHandlers.length)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  eventsHandlers.length)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  eventsHandlers.length)  {	  for(StepHandler    handler    :    yHandlers.length)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
231	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers.length)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlers.length)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  this.eventsHandlers.length)  {	  for(StepHandler    handler    :    yHandlers.length)    {    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
232	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  rki.getStepHandlers(stepStart,  prototype);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  rki.getStepHandlers(stepStart,  prototype);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  rki.getStepHandlers(stepStart,  prototype);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(stepStart,    rki);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
233	[BUG]  [BUGGY]  rki.reinitialize(this,  t0,  yDotK,  stepSize,  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  t0,  yDotK,  stepSize,  stepStart);  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  t0,  yDotK,  stepSize,  stepStart);	  rki.reinitialize(this,    t0,    yDotK,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
234	[BUG]  [BUGGY]  for(StepHandler  handler  :  rki.getStandardSteps())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  rki.getStandardSteps())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  rki.getStandardSteps())  {	  for(StepHandler    handler    :    rki.getSteps())    {    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
235	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepOffset);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepOffset);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepOffset);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(t0,    stepSize,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
236	[BUG]  [BUGGY]  for(StepHandler  handler  :  yTmp,  stepEnd)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  yTmp,  stepEnd)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  yTmp,  stepEnd)  {	  for(StepHandler    handler    :    yTmp,    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
237	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepOffset);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepOffset);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(t0,  stepSize,  stepStart,  stepOffset);	  stepHandlers    =    prototype.getStepHandlers(t0,    stepSize,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
238	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  t0,  stepStart);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  yTmp,  t0,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  yTmp,  t0,  stepStart);	  rki.reinitialize(this,    y0,    t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
239	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  /  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  /  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  /  1);	  stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize    +    1);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
240	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.eventsHandlers,  stepSize)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.eventsHandlers,  stepSize)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  eventsHandlersManager.eventsHandlers,  stepSize)  {	  for(StepHandler    handler    :    this.eventsHandlers,    stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
241	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  /  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  /  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stepSize  /  1);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
242	[BUG]  [BUGGY]  if(stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  if(stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	if(stepSize  >  0)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  if(!lastStep)  {  throw  new  RungeKuttaIntegratorException( " ");  }  }	  if(stepSize    >    0)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    if(!lastStep)    {    throw    new    RungeKuttaIntegratorException(   "   ");    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
243	[BUG]  [BUGGY]  rki.reinitialize(this,  t0,  stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  t0,  stepStart,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  t0,  stepStart,  stepSize);	  rki.reinitialize(this,    t0,    y,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
244	[BUG]  [BUGGY]  if(stepSize  >  stepStart)  {  for(int  i  =  0;  i  <  stages.size();  ++i)  {  StepHandler  handler  =  prototype.getStepHandler(rki);  if(handler!=  null)  {  throw  new  Runge  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  if(stepSize  >  stepStart)  {  for(int  i  =  0;  i  <  stages.size();  ++i)  {  StepHandler  handler  =  prototype.getStepHandler(rki);  if(handler!=  null)  {  throw  new  Runge  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	if(stepSize  >  stepStart)  {  for(int  i  =  0;  i  <  stages.size();  ++i)  {  StepHandler  handler  =  prototype.getStepHandler(rki);  if(handler!=  null)  {  throw  new  Runge	  if(stepSize    >    stepSize)    {    for(int    i    =    0;    i    <    stages.size();    ++i)    {    StepHandler    handler    =    prototype.getStepHandler(rki);    if(handler!=    null)    {    throw    new    RungeKuttaIntegrator    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
245	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  stepSize,  yDotK);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  yTmp,  stepSize,  yDotK);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  yTmp,  stepSize,  yDotK);	  rki.reinitialize(this,    yTmp,    yDotK,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
246	[BUG]  [BUGGY]  stepHandlers  =  prototype.getHandlers();  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getHandlers();  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getHandlers();	  stepHandlers    =    prototype.getRawHandlers();    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
247	[BUG]  [BUGGY]  for(StepHandler  handler  :  yTmp.steps)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  yTmp.steps)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  yTmp.steps)  {	  for(StepHandler    handler    :    rki.steps)    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
248	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.getEventsHandlersManager())  {  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  eventsHandlersManager.getEventsHandlersManager())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  eventsHandlersManager.getEventsHandlersManager())  {	  for(StepHandler    handler    :    getEventsHandlersManager())    {    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
249	[BUG]  [BUGGY]  for(StepHandler  handler  :  eventHandlersManager.getEventHandlers())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  eventHandlersManager.getEventHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  eventHandlersManager.getEventHandlers())  {	  for(StepHandler    handler    :    eventHandlersManager)    {    	non-compiled	[CE]  illegal  start  of  expression	72	None	replace
250	[BUG]  [BUGGY]  if(stepSize  >  0)  {  for(int  i  =  0;  i  <  stepStart;  i++)  {  handler.reset();  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  if(stepSize  >  0)  {  for(int  i  =  0;  i  <  stepStart;  i++)  {  handler.reset();  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	if(stepSize  >  0)  {  for(int  i  =  0;  i  <  stepStart;  i++)  {  handler.reset();  }	  if(stepSize    >    0)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    handler.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
251	[BUG]  [BUGGY]  if(stepSize  >  0)  {  for(int  i  =  0;  i  <  steps;  i++)  {  handler.reset();  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  if(stepSize  >  0)  {  for(int  i  =  0;  i  <  steps;  i++)  {  handler.reset();  }  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	if(stepSize  >  0)  {  for(int  i  =  0;  i  <  steps;  i++)  {  handler.reset();  }	  if(stepSize    >    0)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    handler.reset();    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
252	[BUG]  [BUGGY]  for(StepHandler  handler  :  yTmp.stepHandlers,  stepEnd)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  yTmp.stepHandlers,  stepEnd)  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  yTmp.stepHandlers,  stepEnd)  {	  for(StepHandler    handler    :    yTmp.stepHandlers)    {    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
253	[BUG]  [BUGGY]  rki.initialize(this,  y,  stepSize,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.initialize(this,  y,  stepSize,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.initialize(this,  y,  stepSize,  stepStart);	  rki.reinitialize(this,    y,    t0,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
254	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  t1,  stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  yTmp,  t1,  stepStart,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  yTmp,  t1,  stepStart,  stepSize);	  rki.reinitialize(this,    y0,    t1,    stepStart,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
255	[BUG]  [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stages  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stages  -  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	StepHandler  stepHandlers  =  prototype.getStepHandlers(t0,  stepStart,  stages  -  1);	  StepHandler    stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize    -    1);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
256	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(rki,  stepStart,  stepSize  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(rki,  stepStart,  stepSize  -  1);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(rki,  stepStart,  stepSize  -  1);	  stepHandlers    =    prototype.getStepHandlers(t0,    stepStart,    stepSize    -    1);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
257	[BUG]  [BUGGY]  stepStart  =  t0;  stepSize  =  forward?  -1  :  -step;  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepStart  =  t0;  stepSize  =  forward?  -1  :  -step;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepStart  =  t0;  stepSize  =  forward?  -1  :  -step;	  if(stepSize    >    stepSize)    {    for(int    i    =    0;    i    <    stages.size();    ++i)    {    StepHandler    handler    =    prototype.getStepHandler(rki);    if(handler!=    null)    {    throw    new    RungeKuttaIntegrat    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
258	[BUG]  [BUGGY]  stepStart  =  t0;  stepSize  =  forward?  -step  :  -step;  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepStart  =  t0;  stepSize  =  forward?  -step  :  -step;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepStart  =  t0;  stepSize  =  forward?  -step  :  -step;	  if(stepSize    >    stepSize)    {    for(int    i    =    0;    i    <    stages.size();    ++i)    {    StepHandler    handler    =    prototype.getStepHandler(rki);    if(handler!=    null)    {    throw    new    RungeKuttaIntegrat    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
259	[BUG]  [BUGGY]  stepStart  =  t0;  stepSize  =  forward?  stage  :  -step;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepStart  =  t0;  stepSize  =  forward?  stage  :  -step;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepStart  =  t0;  stepSize  =  forward?  stage  :  -step;	  stepStart    =    t0;    stepSize    =    forward?    step    :    -step;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
260	[BUG]  [BUGGY]  stepSize  =  forward?  stage  :  -step;  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepSize  =  forward?  stage  :  -step;  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepSize  =  forward?  stage  :  -step;	  stepStart    =    t0;    stepSize    =    forward?    step    :    -step;    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
261	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager.getHandlers())  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  this.eventsHandlersManager.getHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  this.eventsHandlersManager.getHandlers())  {	  for(StepHandler    handler    :    yTmp.getHandlers())    {    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
262	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(y0,  stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(y0,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(y0,  stepStart);	  stepHandlers    =    prototype.getStepHandlers(rki,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
263	[BUG]  [BUGGY]  for(StepHandler  handler  :  children.values())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  children.values())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  children.values())  {	  for(StepHandler    handler    :    children)    {    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
264	[BUG]  [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart  -  stepSize);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  stepHandlers  =  prototype.getStepHandlers(stepStart  -  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	stepHandlers  =  prototype.getStepHandlers(stepStart  -  stepSize);	  stepHandlers    =    prototype.getStepHandlers(stepSize);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
265	[BUG]  [BUGGY]  rki.initialize(this,  t0,  yDotK,  stepSize);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.initialize(this,  t0,  yDotK,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.initialize(this,  t0,  yDotK,  stepSize);	  rki.reinitialize(this,    yTmp,    yDotK,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
266	[BUG]  [BUGGY]  rki.reinitialize(this,  yTmp,  t1,  stepStart);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  yTmp,  t1,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  yTmp,  t1,  stepStart);	  rki.reinitialize(this,    y0,    t1,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
267	[BUG]  [BUGGY]  rki.reinitialize(this,  t0,  y1,  stepStart);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.reinitialize(this,  t0,  y1,  stepStart);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.reinitialize(this,  t0,  y1,  stepStart);	  rki.reinitialize(this,    y0,    t1,    stepStart);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
268	[BUG]  [BUGGY]  rki.initialize(this,  y,  stepStart,  stepSize);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  rki.initialize(this,  y,  stepStart,  stepSize);  [BUGGY]      for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	rki.initialize(this,  y,  stepStart,  stepSize);	  rki.reinitialize(this,    y,    t0,    stepSize);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
269	[BUG]  [BUGGY]  for(StepHandler  handler  :  anEventsHandlersManager.getEventsHandlers())  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;      [BUGGY]  for(StepHandler  handler  :  anEventsHandlersManager.getEventsHandlers())  {  [BUGGY]      handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	130	130	2	replace	for(StepHandler  handler  :  anEventsHandlersManager.getEventsHandlers())  {	  for(StepHandler    handler    :    eventsHandlersManager.getEventsHandlers())    {    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
