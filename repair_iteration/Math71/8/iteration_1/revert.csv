projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintc=getC();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getInteger(t0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getIntValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getInteger(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getIntValue(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=c.length+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=c.length/1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=c.length-1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=c.length+2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=c.length*1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])sanityChecks(equations,t0,y0,t,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])sanityChecks(equations,t0,y0,t,forward);setEvaluations(c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])sanityChecks(t0,y0,t,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])sanityChecks(equations,t0,y0,t,forward);resetEvaluations();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])sanityChecks(t0,y0,t,forward);setEvaluations(c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(c.length==0){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(c.length==0){for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(c.length==0){for(intj=0;j<c.length;++j){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(c.length==0){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(c.length==0){for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);y+=c.length;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106for(intj=0;j<c.length;++j){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){if(c.length==0){for(intj=0;j<c.length;++j){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){for(intj=0;j<c.length;++j){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106for(intj=0;j<c.length;++j){System.arraycopy(c,0,c,0,c.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getIntValue()+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getLongValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106intc=getIntValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getInteger(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getInteger(1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalIntegerc=getInteger(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=c.length/2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=t.length/1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=y.length/1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])sanityChecks(t0,y0,t,dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])sanityChecks(t0,y0,t,k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=c.length+3;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])sanityChecks(equations,t0,y1,t,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])sanityChecks(equations,t0,y,t,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])sanityChecks(equations,t0,y0,t,k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){if(c.length==0){for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){if(c.length==0){for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getIntValue(t0,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getIntValue(t0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalIntegerc=getIntValue(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldoublec=getC();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintc=getC()+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintc=getC().length;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){if(c.length==0){for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);y+=c.length;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);y+=c.length;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){if(c.length==0){for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);y+=c.length;}}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){if(c.length==1){for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);y+=c.length;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getInteger(y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getInteger(t0.length+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){if(c.length==0){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c[i],0,
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){if(c.length==0){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c[i],0,c
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){if(c.length==0){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){if(c.length==0){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){if(c.length==0){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=c.length*2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=t.length*1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=c.length-2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=c.length-1+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])sanityChecks(equations,t0,y1,t,forward);setEvaluations(c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])sanityChecks(equations,t0,y,t,forward);setEvaluations(c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])sanityChecks(t0,y0,t,dt);setEvaluations(c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])sanityChecks(equations,t0,y,forward);setEvaluations(c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=c.length-1+forward;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])anityChecks(equations,t0,y0,t,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getIntValue(t0+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])anityChecks(t0,y0,t,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){System.arraycopy(c,0,c[i],0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c[i],0,c.length
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=c.length/1+forward;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=c.length/3;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){for(intj=0;j<c.length;++j){System.arraycopy(c,0,c,0,c.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getInteger(forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=c.length*3;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=c.length*1+forward;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintc=getC()+forward;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getIntValue()+forward;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106for(intc=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106for(intc=0;c<c.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])anityChecks(t0,y0,t,forward);setEvaluations(c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=c.length;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);y+=c.length;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);y+=e.length;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(forward){for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);y+=dt;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getInteger(t0,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getInteger(t0.length-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finaldouble[][]c=(double[][])a.sanityChecks(t0,y0,t,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(c.length==1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(c.length!=0){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(c.length==1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(t>k){for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);y+=c.length;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(c.length!=0){for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);y+=c.length;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(t>t0){for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);y+=c.length;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(c.length==1){for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);y+=c.length;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(c.length==1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(c.length!=0){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(c.length!=1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<c.length;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106finalintstages=t.length-1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getIntValue(t0.toString());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(c.length!=0){for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(c.length==1){for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(j>0){for(intc=0;j<c.length;++j){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106if(j>0){for(intj=0;j<c.length;++j){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java106Integerc=getNumberValue();
