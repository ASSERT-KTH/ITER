bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  stepSize  =  Math.max(stepStart,  dt));  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {    [BUGGY]  stepSize  =  Math.max(stepStart,  dt));  [BUGGY]  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	183	183	2	replace	stepSize  =  Math.max(stepStart,  dt));	stepSize  =  dt;  	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
2	[BUG]  [BUGGY]  stepSize  =  Math.max(stepStart,  dt.length));  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {    [BUGGY]  stepSize  =  Math.max(stepStart,  dt.length));  [BUGGY]  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	183	183	2	replace	stepSize  =  Math.max(stepStart,  dt.length));	stepSize  =  dt;  	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
3	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt.length));  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {    [BUGGY]  stepSize  =  Math.min(stepStart,  dt.length));  [BUGGY]  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	183	183	2	replace	stepSize  =  Math.min(stepStart,  dt.length));	stepSize  =  dt;  	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
4	[BUG]  [BUGGY]  stepSize  =  Math.min(stepStart,  dt));  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {    [BUGGY]  stepSize  =  Math.min(stepStart,  dt));  [BUGGY]  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	183	183	2	replace	stepSize  =  Math.min(stepStart,  dt));	stepSize  =  dt;  	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {    [BUGGY]    [BUGGY]  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	183	183	2	replace	  	stepSize  =  dt;  	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
6	[BUG]  [BUGGY]    double  stepSize  =  dt.doubleValue();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {    [BUGGY]    double  stepSize  =  dt.doubleValue();  [BUGGY]  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	183	183	2	replace	    double  stepSize  =  dt.doubleValue();		non-compiled	[CE]  illegal  start  of  expression	84	None	add
7	[BUG]  [BUGGY]    int  stepSize  =  dt.length();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {    [BUGGY]    int  stepSize  =  dt.length();  [BUGGY]  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	183	183	2	replace	    int  stepSize  =  dt.length();		non-compiled	[CE]  illegal  start  of  expression	84	None	add
8	[BUG]  [BUGGY]    int  stepSize  =  dt.getStepSize();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {    [BUGGY]    int  stepSize  =  dt.getStepSize();  [BUGGY]  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	183	183	2	replace	    int  stepSize  =  dt.getStepSize();		non-compiled	[CE]  illegal  start  of  expression	84	None	add
9	[BUG]  [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {    [BUGGY]  stepSize  =  Math.max(stepStart,  dt);  [BUGGY]  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	183	183	2	replace	stepSize  =  Math.max(stepStart,  dt);	stepSize  =  dt;  	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
10	[BUG]  [BUGGY]  stepSize  =  t0;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {    [BUGGY]  stepSize  =  t0;  [BUGGY]  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	183	183	2	replace	stepSize  =  t0;	stepSize  =  dt;  	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
11	[BUG]  [BUGGY]    stepSize  =  Math.max(stepSize,  dt.length));  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {    [BUGGY]    stepSize  =  Math.max(stepSize,  dt.length));  [BUGGY]  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	183	183	2	replace	    stepSize  =  Math.max(stepSize,  dt.length));		non-compiled	[CE]  illegal  start  of  expression	84	None	add
12	[BUG]  [BUGGY]    stepSize  =  Math.max(stepSize,  dt.length);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {    [BUGGY]    stepSize  =  Math.max(stepSize,  dt.length);  [BUGGY]  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	183	183	2	replace	    stepSize  =  Math.max(stepSize,  dt.length);		non-compiled	[CE]  illegal  start  of  expression	84	None	add
13	[BUG]  [BUGGY]    stepSize  =  Math.max(stepSize,  dt);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {    [BUGGY]    stepSize  =  Math.max(stepSize,  dt);  [BUGGY]  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	183	183	2	replace	    stepSize  =  Math.max(stepSize,  dt);		non-compiled	[CE]  illegal  start  of  expression	84	None	add
14	[BUG]  [BUGGY]    stepSize  =  Math.max(stepSize,  dt.length());  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {    [BUGGY]    stepSize  =  Math.max(stepSize,  dt.length());  [BUGGY]  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	183	183	2	replace	    stepSize  =  Math.max(stepSize,  dt.length());		non-compiled	[CE]  illegal  start  of  expression	84	None	add
15	[BUG]  [BUGGY]  stepSize  =  Math.abs(stepStart)/  dt;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {    [BUGGY]  stepSize  =  Math.abs(stepStart)/  dt;  [BUGGY]  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	183	183	2	replace	stepSize  =  Math.abs(stepStart)/  dt;	stepSize  =  dt;  	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
16	[BUG]  [BUGGY]    stepSize  =  Math.min(1,  dt.length);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {    [BUGGY]    stepSize  =  Math.min(1,  dt.length);  [BUGGY]  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	183	183	2	replace	    stepSize  =  Math.min(1,  dt.length);		non-compiled	[CE]  illegal  start  of  expression	84	None	add
