bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    Interpolator  interpolator  =  manager.getInterpolator();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]    Interpolator  interpolator  =  manager.getInterpolator();  [BUGGY]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	    Interpolator  interpolator  =  manager.getInterpolator();		non-compiled	[CE]  illegal  start  of  expression	42	None	add
2	[BUG]  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEvents());  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEvents());  }  [BUGGY]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEvents());  }		non-compiled	[CE]  illegal  start  of  expression	42	None	add
3	[BUG]  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler(i));  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler(i));  }  [BUGGY]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler(i));  }		non-compiled	[CE]  illegal  start  of  expression	42	None	add
4	[BUG]  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler());  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler());  }  [BUGGY]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler());  }		non-compiled	[CE]  illegal  start  of  expression	42	None	add
5	[BUG]  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventHandlers());  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventHandlers());  }  [BUGGY]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventHandlers());  }		non-compiled	[CE]  illegal  start  of  expression	42	None	add
6	[BUG]  [BUGGY]  boolean  lastStep  =  true;  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]  boolean  lastStep  =  true;  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	boolean  lastStep  =  true;	boolean  lastStep  =  false;  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
7	[BUG]  [BUGGY]  Boolean  lastStep  =  true;  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]  Boolean  lastStep  =  true;  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	Boolean  lastStep  =  true;	boolean  lastStep  =  false;  	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
8	[BUG]  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][j]);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][j]);  }  [BUGGY]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	    if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][j]);  }		non-compiled	[CE]  illegal  start  of  expression	42	None	add
9	[BUG]  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y[i][i],  y[i][j]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y[i][i],  y[i][j]);  }  [BUGGY]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	    if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y[i][i],  y[i][j]);  }		non-compiled	[CE]  illegal  start  of  expression	42	None	add
10	[BUG]  [BUGGY]    Interpolator  rki  =  manager.getInterpolator();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]    Interpolator  rki  =  manager.getInterpolator();  [BUGGY]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	    Interpolator  rki  =  manager.getInterpolator();		non-compiled	[CE]  illegal  start  of  expression	42	None	add
11	[BUG]  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }  [BUGGY]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	    if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }		non-compiled	[CE]  illegal  start  of  expression	42	None	add
12	[BUG]  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y,  t[i]);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y,  t[i]);  }  [BUGGY]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y,  t[i]);  }		non-compiled	[CE]  illegal  start  of  expression	42	None	add
13	[BUG]  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }  [BUGGY]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	    if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }		non-compiled	[CE]  illegal  start  of  expression	42	None	add
14	[BUG]  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y,  t[i][0]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y,  t[i][0]);  }  [BUGGY]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y,  t[i][0]);  }		non-compiled	[CE]  illegal  start  of  expression	42	None	add
15	[BUG]  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }  [BUGGY]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	    if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }		non-compiled	[CE]  illegal  start  of  expression	42	None	add
16	[BUG]  [BUGGY]    if(manager!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k][0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]    if(manager!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k][0]);  }  [BUGGY]  boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	    if(manager!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y,  t[k][0]);  }		non-compiled	[CE]  illegal  start  of  expression	42	None	add
