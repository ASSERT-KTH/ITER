bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);	      if(manager!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
2	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k][0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k][0]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t0,  y[k],  t[k][0]);  }	      if(manager!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
3	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t1,  y,  t[k][0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t1,  y,  t[k][0]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  k  =  0;  k  <  y.length;  k++)  {  computeDerivatives(t1,  y,  t[k][0]);  }	      if(manager!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
4	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler());  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler());  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler());  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEventsHandler());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
5	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managers.getEventsHandler());  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managers.getEventsHandler());  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managers.getEventsHandler());  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEventsHandler());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
6	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  handler.getEventsHandler());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  handler.getEventsHandler());  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  handler.getEventsHandler());  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEventsHandler());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
7	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    i++)    {    computeDerivatives(y[i][i],    y[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
8	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  handler.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  handler.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  handler.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    i++)    {    computeDerivatives(y[i][i],    y[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
9	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler(i));  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler(i));  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler(i));  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEventsHandler(i));    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler(0));  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler(0));  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler(0));  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEventsHandler(i));    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
11	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler(1));  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler(1));  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler(1));  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEventsHandler(i));    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
12	[BUG]  [BUGGY]  Boolean  lastStep  =  false;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  Boolean  lastStep  =  false;  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	Boolean  lastStep  =  false;	  boolean    lastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
13	[BUG]  [BUGGY]  int  lastStep  =  true;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  int  lastStep  =  true;  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	int  lastStep  =  true;	  boolean    lastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
14	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  computeDerivatives(t0,  y,  t[i]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  computeDerivatives(t0,  y,  t[i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  computeDerivatives(t0,  y,  t[i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    computeDerivatives(t0,    y,    t[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
15	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t1,  y,  t[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t1,  y,  t[i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t1,  y,  t[i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    computeDerivatives(t0,    y,    t[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
16	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  handler.length;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  handler.length;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  handler.length;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i],    t,    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
17	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i],  t,  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i],  t,  y[i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(t1,  y[i],  t,  y[i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i],    t,    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
18	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][j],  manager);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][j],  manager);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][j],  manager);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    i++)    {    computeDerivatives(y[i][i],    y[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
19	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  calculateDerivatives(y[i][i],  y[i][j]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  calculateDerivatives(y[i][i],  y[i][j]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  calculateDerivatives(y[i][i],  y[i][j]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    i++)    {    computeDerivatives(y[i][i],    y[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
20	[BUG]  [BUGGY]  Boolean  lastStep  =  null;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  Boolean  lastStep  =  null;  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	Boolean  lastStep  =  null;	  Boolean    lastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
21	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  computeDerivatives(t0,  y,  t[i][0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  computeDerivatives(t0,  y,  t[i][0]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  computeDerivatives(t0,  y,  t[i][0]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    computeDerivatives(t0,    y,    t[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
22	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t1,  y,  t[i][0]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t1,  y,  t[i][0]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t1,  y,  t[i][0]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    computeDerivatives(t0,    y,    t[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
23	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    computeDerivatives(t0,    y[i],    t,    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
24	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t1,  y[i],  t,  y[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t1,  y[i],  t,  y[i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t1,  y[i],  t,  y[i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    computeDerivatives(t0,    y[i],    t,    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
25	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventHandlers());  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventHandlers());  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventHandlers());  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEventHandlers());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
26	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managers.getEventHandlers());  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managers.getEventHandlers());  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managers.getEventHandlers());  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEventHandlers());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
27	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managersManager.getEventHandlers());  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managersManager.getEventHandlers());  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managersManager.getEventHandlers());  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEventHandlers());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
28	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0);  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	Interpolator  interpolator  =  manager.getInterpolator(t0);	      Interpolator    interpolator    =    manager.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
29	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorInstance(t0);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorInstance(t0);  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	Interpolator  interpolator  =  manager.getInterpolatorInstance(t0);	      Interpolator    interpolator    =    manager.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
30	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEvents());  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEvents());  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  steps.length;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEvents());  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEvents());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
31	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managers.getEvents());  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managers.getEvents());  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managers.getEvents());  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEvents());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
32	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managersManager.getEvents());  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managersManager.getEvents());  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managersManager.getEvents());  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEvents());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
33	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y[i][i],  y[i][j],  manager);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y[i][i],  y[i][j],  manager);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y[i][i],  y[i][j],  manager);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(y[i][i],    y[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
34	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  calculateDerivatives(y[i][i],  y[i][j]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  calculateDerivatives(y[i][i],  y[i][j]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  calculateDerivatives(y[i][i],  y[i][j]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(y[i][i],    y[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
35	[BUG]  [BUGGY]  Interpolator  rki  =  manager.getRawInterpolator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  Interpolator  rki  =  manager.getRawInterpolator();  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	Interpolator  rki  =  manager.getRawInterpolator();	      Interpolator    rki    =    manager.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
36	[BUG]  [BUGGY]  Interpolator  rki  =  manager.getInterpolator(t0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  Interpolator  rki  =  manager.getInterpolator(t0);  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	Interpolator  rki  =  manager.getInterpolator(t0);	      Interpolator    rki    =    manager.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
37	[BUG]  [BUGGY]  Interpolator  rki  =  manager.getRangeInterpolator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  Interpolator  rki  =  manager.getRangeInterpolator();  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	Interpolator  rki  =  manager.getRangeInterpolator();	      Interpolator    rki    =    manager.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
38	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(y[i],  t,  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(y[i],  t,  y[i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(y[i],  t,  y[i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    computeDerivatives(t0,    y[i],    t,    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
39	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  yDotK[0]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    computeDerivatives(t0,    y,    t[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
40	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  computeDerivatives(y[i][i],  y[i][j]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  computeDerivatives(y[i][i],  y[i][j]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  computeDerivatives(y[i][i],  y[i][j]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(y[i][i],    y[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
41	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y[i][i],  y[i][j]  +  1);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y[i][i],  y[i][j]  +  1);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  ++i)  {  computeDerivatives(y[i][i],  y[i][j]  +  1);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(y[i][i],    y[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
42	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  this.stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEvents());  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  this.stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEvents());  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  this.stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEvents());  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEvents());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
43	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]  +  1);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]  +  1);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]  +  1);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    i++)    {    computeDerivatives(y[i][i],    y[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
44	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  calculateDerivatives(y[i][i],  y[i][i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  calculateDerivatives(y[i][i],  y[i][i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  calculateDerivatives(y[i][i],  y[i][i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    i++)    {    computeDerivatives(y[i][i],    y[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
45	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  this.stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler());  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  this.stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler());  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  this.stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventsHandler());  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEventsHandler());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
46	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k][0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k][0]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  k  =  0;  k  <  x.length;  k++)  {  computeDerivatives(t0,  y,  t[k][0]);  }	      if(manager!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
47	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][j]  +  1);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][j]  +  1);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  y.length;  i++)  {  computeDerivatives(y[i][i],  y[i][j]  +  1);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    i++)    {    computeDerivatives(y[i][i],    y[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
48	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  this.stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventHandlers());  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  this.stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventHandlers());  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  this.stepSize;  i++)  {  addEndTimeChecker(t0,  i,  manager.getEventHandlers());  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEventHandlers());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
49	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  x.length;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i],    t,    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
50	[BUG]  [BUGGY]  boolean  lastStep  =  null;  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  boolean  lastStep  =  null;  [BUGGY]      while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	boolean  lastStep  =  null;	  boolean    lastStep    =    true;    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
51	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(y,  t[i],  t,  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(y,  t[i],  t,  y[i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(y,  t[i],  t,  y[i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    computeDerivatives(t0,    y[i],    t,    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
52	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(y[i][i],  y[i][j]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(y[i][i],  y[i][j]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(y[i][i],  y[i][j]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(y[i][i],    y[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
53	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(y[i][i],  y[i][j]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(y[i][i],  y[i][j]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(y[i][i],  y[i][j]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(y[i][i],    y[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
54	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  a.length;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i],    t,    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
55	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  k;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i],    t,    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
56	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  nHandlers.length;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  nHandlers.length;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  nHandlers.length;  ++i)  {  computeDerivatives(t0,  y[i],  t,  y[i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    ++i)    {    computeDerivatives(t0,    y[i],    t,    y[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
57	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  a.length;  i++)  {  computeDerivatives(y[i][i],  y[i][j]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  a.length;  i++)  {  computeDerivatives(y[i][i],  y[i][j]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  a.length;  i++)  {  computeDerivatives(y[i][i],  y[i][j]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    i++)    {    computeDerivatives(y[i][i],    y[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
58	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  k;  i++)  {  computeDerivatives(y[i][i],  y[i][j]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  k;  i++)  {  computeDerivatives(y[i][i],  y[i][j]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  k;  i++)  {  computeDerivatives(y[i][i],  y[i][j]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    i++)    {    computeDerivatives(y[i][i],    y[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
59	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  x.length;  i++)  {  computeDerivatives(y[i][i],  y[i][j]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  x.length;  i++)  {  computeDerivatives(y[i][i],  y[i][j]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  x.length;  i++)  {  computeDerivatives(y[i][i],  y[i][j]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    i++)    {    computeDerivatives(y[i][i],    y[i][j]);    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
60	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managers.getEventsHandler(i));  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managers.getEventsHandler(i));  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i,  managers.getEventsHandler(i));  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEventsHandler(i));    }    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
61	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i  +  1,  manager.getEventsHandler());  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i  +  1,  manager.getEventsHandler());  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i  +  1,  manager.getEventsHandler());  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEventsHandler());    }    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
62	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i  +  1,  manager.getEvents());  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i  +  1,  manager.getEvents());  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i  +  1,  manager.getEvents());  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEvents());    }    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
63	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  a.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  a.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  a.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    i++)    {    computeDerivatives(y[i][i],    y[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
64	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  x.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  x.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  x.length;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    i++)    {    computeDerivatives(y[i][i],    y[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
65	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  k;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  k;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  k;  i++)  {  computeDerivatives(y[i][i],  y[i][i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    y.length;    i++)    {    computeDerivatives(y[i][i],    y[i][i]);    }    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
66	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorForStep(t0);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  Interpolator  interpolator  =  manager.getInterpolatorForStep(t0);  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	Interpolator  interpolator  =  manager.getInterpolatorForStep(t0);	      Interpolator    interpolator    =    manager.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
67	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y,  t[i][1]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y,  t[i][1]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y,  t[i][1]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    computeDerivatives(t0,    y,    t[i][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
68	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k][0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k][0]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  k  =  0;  k  <  t.length;  k++)  {  computeDerivatives(t0,  y,  t[k][0]);  }	      if(manager!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
69	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k][0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k][0]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  k  =  0;  k  <  a.length;  k++)  {  computeDerivatives(t0,  y,  t[k][0]);  }	      if(manager!=    null)    {    for(int    k    =    0;    k    <    y.length;    k++)    {    computeDerivatives(t0,    y,    t[k][0]);    }    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
70	[BUG]  [BUGGY]  Interpolator  rki  =  manager.getStepInterpolator();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  Interpolator  rki  =  manager.getStepInterpolator();  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	Interpolator  rki  =  manager.getStepInterpolator();	      Interpolator    rki    =    manager.getInterpolator();    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
71	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i  +  1,  manager.getEventHandlers());  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i  +  1,  manager.getEventHandlers());  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  addEndTimeChecker(t0,  i  +  1,  manager.getEventHandlers());  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    addEndTimeChecker(t0,    i,    manager.getEventHandlers());    }    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
72	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y,  t[i],  manager);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y,  t[i],  manager);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y,  t[i],  manager);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    computeDerivatives(t0,    y,    t[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
73	[BUG]  [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y[i],  t[i]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]    }  interpolator.storeTime(t0);  stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);    [BUGGY]  if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y[i],  t[i]);  }  [BUGGY]    boolean  lastStep  =  false;  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	134	134	2	replace	if(manager!=  null)  {  for(int  i  =  0;  i  <  stepSize;  i++)  {  computeDerivatives(t0,  y[i],  t[i]);  }	      if(manager!=    null)    {    for(int    i    =    0;    i    <    stepSize;    i++)    {    computeDerivatives(t0,    y,    t[i]);    }    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
