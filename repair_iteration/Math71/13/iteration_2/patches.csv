bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).set(i  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).set(i  +  1);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).set(i  +  1);	  ((    RungeKuttaStepInterpolator)prototype).set(i);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
2	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).set(i,  c);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).set(i,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).set(i,  c);	  ((    RungeKuttaStepInterpolator)prototype).set(i);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
3	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).set(i  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).set(i  -  1);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).set(i  -  1);	  ((    RungeKuttaStepInterpolator)prototype).set(i);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
4	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).set(i,  stages);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).set(i,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).set(i,  stages);	  ((    RungeKuttaStepInterpolator)prototype).set(i);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
5	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  c.length  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  c.length  +  1);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  c.length  +  1);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    c.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
6	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  c.length  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  c.length  +  1);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  c.length  +  1);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    c.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
7	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototype.length  +  1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototype.length  +  1);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototype.length  +  1);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    c.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
8	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  2);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  2);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
9	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  +  3];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  +  3];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length  +  3];	  yDotK    [i]    =    new    double[stages[i].length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
10	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  +  4];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  +  4];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length  +  4];	  yDotK    [i]    =    new    double[stages[i].length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
11	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i  +  1);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i  +  1);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    i);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
12	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i,  stages);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    i);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
13	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  stages);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    i,    forward);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
14	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  forward,  stages);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  forward,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  forward,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    i,    forward);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
15	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  0,  i  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  0,  i  +  1);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  0,  i  +  1);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    0,    i);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
16	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  0,  stages);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  0,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  0,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    0,    i);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
17	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  0,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  0,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  0,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    0,    i);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
18	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  forward);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    yDotK,    dt);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
19	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  dt,  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  dt,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  dt,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    yDotK,    dt);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
20	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  yDotK,  c);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  yDotK,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  yDotK,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    yDotK,    dt);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
21	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  dt,  forward);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  dt,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  dt,  forward);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    yDotK,    dt);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
22	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i][];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i][];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i][];	  yDotK    [i]    =    new    double[stages[i][0];    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
23	[BUG]  [BUGGY]  yDotK  []  =  new  double[stages[i][];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  []  =  new  double[stages[i][];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  []  =  new  double[stages[i][];	  yDotK    [i]    =    new    double[stages[i][0];    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
24	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  t0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  t0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  t0);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y,    i,    t0);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
25	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  c,  i,  t0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  c,  i,  t0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  c,  i,  t0);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y,    i,    t0);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
26	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  stages,  i,  t0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  stages,  i,  t0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  stages,  i,  t0);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y,    i,    t0);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
27	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  t0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  t0);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y,    i,    t0);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
28	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages][1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages][1];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages][1];	  yDotK    [i]    =    new    double[stages][0];    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
29	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages][2];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages][2];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages][2];	  yDotK    [i]    =    new    double[stages][0];    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
30	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages][];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages][];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages][];	  yDotK    [i]    =    new    double[stages][0];    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
31	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  yDotK,  t0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  yDotK,  t0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  yDotK,  t0);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yTmp,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
32	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  y0,  t0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  y0,  t0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  y0,  t0);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yTmp,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
33	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y2,  yDotK,  t0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y2,  yDotK,  t0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y2,  yDotK,  t0);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yTmp,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
34	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages][i].doubleValue().doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages][i].doubleValue().doubleValue();  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages][i].doubleValue().doubleValue();	  yDotK    [i]    =    new    double[stages][i].doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
35	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  k);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  k);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  k);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yTmp,    j);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
36	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
37	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  stages,  yDotK,  t0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  stages,  yDotK,  t0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  stages,  yDotK,  t0);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
38	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  i);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  i);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    yDotK,    i);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
39	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  i);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    yDotK,    i);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
40	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y1,  yDotK,  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y1,  yDotK,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y1,  yDotK,  i);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    yDotK,    i);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
41	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i  +  1);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i  +  1);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    i);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
42	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y1,    i);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
43	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y2,  i);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y2,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y2,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y1,    i);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
44	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y3,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y3,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y3,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y1,    i);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
45	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages][i  *  1];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages][i  *  1];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages][i  *  1];	  yDotK    [i]    =    new    double[stages][i    +    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
46	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages][i  +  2];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages][i  +  2];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages][i  +  2];	  yDotK    [i]    =    new    double[stages][i    +    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
47	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages][i  +  3];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages][i  +  3];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages][i  +  3];	  yDotK    [i]    =    new    double[stages][i    +    1];    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
48	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(y0,  stages);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(y0,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).remove(y0,  stages);	  ((    RungeKuttaStepInterpolator)prototype).remove(i,    stages);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
49	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(i,  y0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(i,  y0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).remove(i,  y0);	  ((    RungeKuttaStepInterpolator)prototype).remove(i,    stages);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
50	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(i,  y);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(i,  y);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).remove(i,  y);	  ((    RungeKuttaStepInterpolator)prototype).remove(i,    stages);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
51	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  yDotK);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  yDotK);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  yDotK);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    stages,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
52	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  yDotK,  stages,  i);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  yDotK,  stages,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  yDotK,  stages,  i);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    stages,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
53	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  prototype,  yDotK.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  prototype,  yDotK.length);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  prototype,  yDotK.length);	  ((    RungeKuttaStepInterpolator)c).reinitialize(this,    y0,    yDotK,    prototyper.length);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
54	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototyper[i]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototyper[i]);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototyper[i]);	  ((    RungeKuttaStepInterpolator)c).reinitialize(this,    y0,    yDotK,    prototyper.length);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
55	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y1,  yDotK,  prototyper.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y1,  yDotK,  prototyper.length);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)c).reinitialize(this,  y1,  yDotK,  prototyper.length);	  ((    RungeKuttaStepInterpolator)c).reinitialize(this,    y0,    yDotK,    prototyper.length);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
56	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototyper[i].length);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototyper[i].length);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototyper[i].length);	  ((    RungeKuttaStepInterpolator)c).reinitialize(this,    y0,    yDotK,    prototyper.length);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
57	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y2,  dt);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y2,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y2,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y1,    dt);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
58	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  c,  dt);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  c,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  c,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y1,    dt);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
59	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).set();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).set();  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).set();	  ((    RungeKuttaStepInterpolator)interpolator).reset();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
60	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).update();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).update();  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).update();	  ((    RungeKuttaStepInterpolator)interpolator).reset();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
61	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setInstance(c,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setInstance(c,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).setInstance(c,  i);	  ((    RungeKuttaStepInterpolator)interpolator).reset();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
62	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  j);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  j);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  j);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    yDotK,    t);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
63	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages.length  *  i  +  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages.length  *  i  +  1];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages.length  *  i  +  1];	  yDotK    [i]    =    new    double[stages.length    *    i];    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
64	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i  *  c.length];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i  *  c.length];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i  *  c.length];	  yDotK    [i]    =    new    double[stages.length    *    i];    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
65	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i.length  *  c.length];  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i.length  *  c.length];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i.length  *  c.length];	  yDotK    [i]    =    new    double[stages.length    *    i];    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
66	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages.length  *  2];  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages.length  *  2];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages.length  *  2];	  yDotK    [i]    =    new    double[stages.length    *    i];    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
67	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages,    dt);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
68	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  c);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages,    dt);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
69	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  stages,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  stages,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  stages,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages,    dt);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
70	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[c[i].length  +  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[c[i].length  +  1];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[c[i].length  +  1];	  yDotK    [i]    =    new    double[c[i].length];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
71	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  yDotK,  t0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  yDotK,  t0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  yDotK,  t0);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
72	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  yDotK,  i);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  yDotK,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  yDotK,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
73	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).rollback();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).rollback();  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).rollback();	  ((    RungeKuttaStepInterpolator)prototype).rollback();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
74	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).rollBack();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).rollBack();  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).rollBack();	  ((    RungeKuttaStepInterpolator)prototype).rollback();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
75	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)i).rollback();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)i).rollback();  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)i).rollback();	  ((    RungeKuttaStepInterpolator)prototype).rollback();    	non-compiled	[CE]  illegal  start  of  expression	98	None	replace
76	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  j,  c);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  j,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  j,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages,    j);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
77	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
78	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yTmp,  yDotK);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yTmp,  yDotK);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yTmp,  yDotK);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
79	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  y0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  y0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  y0);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
80	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    dt);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
81	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  j);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  j);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  j);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    dt,    j);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
82	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yTmp,  yDotK,  j);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yTmp,  yDotK,  j);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yTmp,  yDotK,  j);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    dt,    j);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
83	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  j,  dt);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  j,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  j,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    dt,    j);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
84	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  dt,  k);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  dt,  k);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  dt,  k);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    dt,    j);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
85	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  stages);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    dt);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
86	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  dt,  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  dt,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  dt,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    dt);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
87	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  yDotK[i]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  yDotK[i]);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  yDotK[i]);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    stages,    yDotK[i]);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
88	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c[i],  yDotK);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c[i],  yDotK);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c[i],  yDotK);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    stages[i],    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
89	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages[i],  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages[i],  yDotK,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages[i],  yDotK,  forward);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    stages[i],    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
90	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages[i],  c);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages[i],  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages[i],  c);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    stages[i],    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	32	None	replace
91	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  j,  stages);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  j,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  j,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    j);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
92	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  yDotK,  stages,  i);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  yDotK,  stages,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  yDotK,  stages,  i);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    yDotK,    stages);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
93	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  stages);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  stages);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    yDotK,    stages);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
94	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[c.length  +  3];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[c.length  +  3];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[c.length  +  3];	  yDotK    [i]    =    new    double[c.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
95	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[c.length  +  2];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[c.length  +  2];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[c.length  +  2];	  yDotK    [i]    =    new    double[c.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
96	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  yDotK,  i);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  yDotK,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  yDotK,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    i);    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
97	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages][i]  +  2;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages][i]  +  2;  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages][i]  +  2;	  yDotK    [i]    =    new    double[stages][i]    +    1;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
98	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages][i]  /  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages][i]  /  1;  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages][i]  /  1;	  yDotK    [i]    =    new    double[stages][i]    +    1;    	non-compiled	[CE]  illegal  start  of  expression	75	None	replace
99	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yTmp,  yDotK,  c);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yTmp,  yDotK,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yTmp,  yDotK,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    dt,    c);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
100	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  c,  y0);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  c,  y0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  c,  y0);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    dt,    c);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
101	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setInitialize(this,  y0,  i);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setInitialize(this,  y0,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).setInitialize(this,  y0,  i);	  ((    RungeKuttaStepInterpolator)prototype).setInitialize(this,    yDotK,    i);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
102	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setInitialize(this,  yDotK,  i  +  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setInitialize(this,  yDotK,  i  +  1);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).setInitialize(this,  yDotK,  i  +  1);	  ((    RungeKuttaStepInterpolator)prototype).setInitialize(this,    yDotK,    i);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
103	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setInitialize(this,  y1,  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setInitialize(this,  y1,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).setInitialize(this,  y1,  i);	  ((    RungeKuttaStepInterpolator)prototype).setInitialize(this,    yDotK,    i);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
104	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c.length);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c.length);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    t0);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
105	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  +  1;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  +  1;  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length  +  1;	  yDotK    [i]    =    new    double[stages[i].length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
106	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  +  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  +  1);  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length  +  1);	  yDotK    [i]    =    new    double[stages[i].length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
107	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  -  1;  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  -  1;  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length  -  1;	  yDotK    [i]    =    new    double[stages[i].length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
108	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).get(i  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).get(i  +  1);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).get(i  +  1);	  ((    RungeKuttaStepInterpolator)prototype).remove(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
109	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)c).reinitialize(this,  y0,  yDotK,  prototype);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)c).reinitialize(this,  y0,  yDotK,  prototype);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)c).reinitialize(this,  y0,  yDotK,  prototype);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    yDotK,    c);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
110	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  yDotK,  c,  stages);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  yDotK,  c,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  yDotK,  c,  stages);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    yDotK,    c);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
111	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[c.length].length;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[c.length].length;  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[c.length].length;	  yDotK    [i]    =    new    double[stages].length;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
112	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages].length  -  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages].length  -  1;  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages].length  -  1;	  yDotK    [i]    =    new    double[stages].length;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
113	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  k);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  k);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  k);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    k);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
114	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  k);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  k);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  k);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    k);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
115	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  j,  c,  yDotK);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  j,  c,  yDotK);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  j,  c,  yDotK);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    j,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
116	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  yDotK);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  yDotK);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  yDotK);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    j,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
117	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  yDotK,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  yDotK,  forward);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    dt,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
118	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    dt,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	92	None	replace
119	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c[i],  yDotK);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c[i],  yDotK);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c[i],  yDotK);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages[i],    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
120	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  stages[i],  yDotK);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  stages[i],  yDotK);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  stages[i],  yDotK);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages[i],    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
121	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages[i],  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages[i],  yDotK,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages[i],  yDotK,  forward);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages[i],    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	53	None	replace
122	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yTmp,  yDotK,  i);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yTmp,  yDotK,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yTmp,  yDotK,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    dt,    i);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
123	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  c,  i);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  c,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  c,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    dt,    i);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
124	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length],  c.length  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length],  c.length  +  1);  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length],  c.length  +  1);	  yDotK    [i]    =    new    double[stages[i].length],    c.length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
125	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length],  y.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length],  y.length);  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length],  y.length);	  yDotK    [i]    =    new    double[stages[i].length],    c.length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
126	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length],  a.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length],  a.length);  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length],  a.length);	  yDotK    [i]    =    new    double[stages[i].length],    c.length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
127	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  +  1],  c.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  +  1],  c.length);  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length  +  1],  c.length);	  yDotK    [i]    =    new    double[stages[i].length],    c.length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
128	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  yDotK,  stages);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  yDotK,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  yDotK,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    stages);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
129	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  stages,  i);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  stages,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  stages,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    stages);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
130	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)i).interpolator.reset();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)i).interpolator.reset();  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)i).interpolator.reset();	  ((    RungeKuttaStepInterpolator)i).reset();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
131	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)i).interpolator  =  prototype.reset();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)i).interpolator  =  prototype.reset();  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)i).interpolator  =  prototype.reset();	  ((    RungeKuttaStepInterpolator)i).reset();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
132	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)i).start();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)i).start();  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)i).start();	  ((    RungeKuttaStepInterpolator)i).reset();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
133	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages][i].length  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages][i].length  +  1;  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages][i].length  +  1;	  yDotK    [i]    =    new    double[stages][i].length;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
134	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  0,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  0,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  0,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    0);    	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
135	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  forward);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  forward);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    dt,    forward);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
136	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  k);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  k);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  k);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    dt,    forward);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
137	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  stages,  yDotK,  t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  stages,  yDotK,  t0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  stages,  yDotK,  t0);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    c,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
138	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  yDotK,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  yDotK,  forward);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    c,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
139	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  yDotK,  i);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  yDotK,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  yDotK,  i);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    c,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
140	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages].length  /  1];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages].length  /  1];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages].length  /  1];	  yDotK    [i]    =    new    double[stages].length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
141	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages].length  -  2];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages].length  -  2];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages].length  -  2];	  yDotK    [i]    =    new    double[stages].length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	97	None	replace
142	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK,  c[i]);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK,  c[i]);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK,  c[i]);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    stages,    yDotK,    stages[i]);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
143	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  yDotK,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  yDotK,  forward);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
144	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  y0,  forward);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  y0,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  y0,  forward);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
145	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y2,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y2,  yDotK,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y2,  yDotK,  forward);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
146	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages].length  +  2];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages].length  +  2];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages].length  +  2];	  yDotK    [i]    =    new    double[stages].length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
147	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages].length  +  3];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages].length  +  3];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages].length  +  3];	  yDotK    [i]    =    new    double[stages].length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
148	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)c).remove(i,  prototype);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)c).remove(i,  prototype);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)c).remove(i,  prototype);	  ((    RungeKuttaStepInterpolator)prototype).remove(i,    c);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
149	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)c).remove(i,  prototyper);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)c).remove(i,  prototyper);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)c).remove(i,  prototyper);	  ((    RungeKuttaStepInterpolator)prototype).remove(i,    c);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
150	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i,  t);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i,  t);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i,  t);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    i,    t);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
151	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  i,  t);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  i,  t);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  i,  t);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    i,    t);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
152	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  t);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  t);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  t);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    i,    t);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
153	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  c);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    i,    t);    	non-compiled	[CE]  illegal  start  of  expression	87	None	replace
154	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  c);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yTmp,    t);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
155	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yTmp,  t);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yTmp,  t);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yTmp,  t);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yTmp,    t);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
156	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  yTmp,  t);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  yTmp,  t);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  yTmp,  t);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yTmp,    t);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
157	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  j,  c);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  j,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  j,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    j,    c);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
158	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  j,  prototyper);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  j,  prototyper);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  j,  prototyper);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    j,    c);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
159	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].doubleValue()  +  1;  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].doubleValue()  +  1;	  yDotK    [i]    =    new    double[stages[i].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
160	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].doubleValue().doubleValue();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].doubleValue().doubleValue();  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].doubleValue().doubleValue();	  yDotK    [i]    =    new    double[stages[i].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
161	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].doubleValue()  +  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].doubleValue()  +  2;  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].doubleValue()  +  2;	  yDotK    [i]    =    new    double[stages[i].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
162	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  yDotK,  dt);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  yDotK,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  yDotK,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yTmp,    yDotK,    dt);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
163	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y2,  yDotK,  dt);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y2,  yDotK,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y2,  yDotK,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yTmp,    yDotK,    dt);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
164	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  y0,  dt);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  y0,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  y0,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yTmp,    yDotK,    dt);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
165	[BUG]  [BUGGY]  yDotK  []  =  new  double[stages][i].doubleValue()  +  1;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  []  =  new  double[stages][i].doubleValue()  +  1;  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  []  =  new  double[stages][i].doubleValue()  +  1;	  yDotK    []    =    new    double[stages][i].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
166	[BUG]  [BUGGY]  final  double[][]  yDotK  =  new  double[stages][i].doubleValue();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  final  double[][]  yDotK  =  new  double[stages][i].doubleValue();  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	final  double[][]  yDotK  =  new  double[stages][i].doubleValue();	  yDotK    []    =    new    double[stages][i].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
167	[BUG]  [BUGGY]  yDotK  []  =  new  double[stages][i].doubleValue().doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  []  =  new  double[stages][i].doubleValue().doubleValue();  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  []  =  new  double[stages][i].doubleValue().doubleValue();	  yDotK    []    =    new    double[stages][i].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
168	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i][2];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i][2];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i][2];	  yDotK    [i]    =    new    double[stages[i][1];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
169	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  -  2];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  -  2];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length  -  2];	  yDotK    [i]    =    new    double[stages[i].length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
170	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  /  1];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  /  1];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length  /  1];	  yDotK    [i]    =    new    double[stages[i].length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
171	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  c,  i,  dt);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  c,  i,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  c,  i,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y,    i,    dt);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
172	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  dt);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y,    i,    dt);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
173	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  stages,  i,  dt);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  stages,  i,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  stages,  i,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y,    i,    dt);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
174	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  y);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  y);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  y);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages,    t);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
175	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i,  j);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i,  j);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i,  j);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    i,    j);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
176	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  j);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  j);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  j);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    i,    j);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
177	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  k);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  k);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  k);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    i,    j);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
178	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y1,  stages[i],  yDotK);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y1,  stages[i],  yDotK);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y1,  stages[i],  yDotK);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y1,    yDotK,    stages[i]);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
179	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  yDotK,  c[i]);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  yDotK,  c[i]);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  yDotK,  c[i]);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y1,    yDotK,    stages[i]);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
180	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  dt,  i);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  dt,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  dt,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    dt,    c);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
181	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  dt,  c);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  dt,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  dt,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    dt,    c);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
182	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  yTmp,  dt);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  yTmp,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  yTmp,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yTmp,    dt);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
183	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yTmp,  dt);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yTmp,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yTmp,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yTmp,    dt);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
184	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  yDotK,  forward,  stages);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  yDotK,  forward,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  yDotK,  forward,  stages);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
185	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y1,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y1,  yDotK,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y1,  yDotK,  forward);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
186	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  yTmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  yTmp,  yDotK,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  yTmp,  yDotK,  forward);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
187	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  c,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  c,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  c,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y,    dt,    i);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
188	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  stages,  i);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  stages,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  stages,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y,    dt,    i);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
189	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototype);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototype);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototype);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    c);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
190	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  c,  stages);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  c,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  c,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    c);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
191	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)i).set();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)i).set();  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)i).set();	  ((    RungeKuttaStepInterpolator)prototype).set();    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
192	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK[i]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK[i]);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK[i]);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    stages[i]);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
193	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages[i],  c);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages[i],  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages[i],  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    stages[i]);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
194	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  c,  stages[i]);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  c,  stages[i]);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  c,  stages[i]);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    stages[i]);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
195	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i  +  3];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i  +  3];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i  +  3];	  yDotK    [i]    =    new    double[stages[i    +    1];    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
196	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i  +  2];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i  +  2];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i  +  2];	  yDotK    [i]    =    new    double[stages[i    +    1];    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
197	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i  *  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i  *  1];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i  *  1];	  yDotK    [i]    =    new    double[stages[i    +    1];    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
198	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  yDotK[i]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  yDotK[i]);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  yDotK[i]);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages,    yDotK[i]);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
199	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y1,  yDotK,  prototype.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y1,  yDotK,  prototype.length);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)c).reinitialize(this,  y1,  yDotK,  prototype.length);	  ((    RungeKuttaStepInterpolator)c).reinitialize(this,    y0,    yDotK,    prototype.length);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
200	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  yTmp,  yDotK,  prototype.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  yTmp,  yDotK,  prototype.length);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)c).reinitialize(this,  yTmp,  yDotK,  prototype.length);	  ((    RungeKuttaStepInterpolator)c).reinitialize(this,    y0,    yDotK,    prototype.length);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
201	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages].length  +  2;  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages].length  +  2;  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages].length  +  2;	  yDotK    [i]    =    new    double[stages].length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
202	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages].length  +  3;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages].length  +  3;  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages].length  +  3;	  yDotK    [i]    =    new    double[stages].length    +    1;    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
203	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  forward,  stages);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  forward,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  forward,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
204	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i,  dt);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    i,    dt);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
205	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  c);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    stages);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
206	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  interpolator);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  interpolator);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  interpolator);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    stages);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
207	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  i);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yTmp,    t);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
208	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  yTmp,  t);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  yTmp,  t);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  yTmp,  t);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yTmp,    t);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
209	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)i).getInstances();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)i).getInstances();  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)i).getInstances();	  ((    RungeKuttaStepInterpolator)i).reset();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
210	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)i).interpolator.set();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)i).interpolator.set();  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)i).interpolator.set();	  ((    RungeKuttaStepInterpolator)i).reset();    	non-compiled	[CE]  illegal  start  of  expression	70	None	replace
211	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    dt);    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
212	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  i,  j);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  i,  j);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  i,  j);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    i,    j);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
213	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  stages);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    i,    j);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
214	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK[i],  c);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK[i],  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK[i],  c);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    stages,    yDotK[i]);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
215	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK[i],  k);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK[i],  k);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK[i],  k);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    stages,    yDotK[i]);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
216	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  c,  yDotK,  t0);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  c,  yDotK,  t0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  c,  yDotK,  t0);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    c,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
217	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  yDotK,  stages);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  yDotK,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  c,  yDotK,  stages);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    c,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
218	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  c,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  c,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  c,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    dt);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
219	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setTicks(i);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setTicks(i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).setTicks(i);	  ((    RungeKuttaStepInterpolator)interpolator).reset();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
220	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setStandardEquations(i);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setStandardEquations(i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).setStandardEquations(i);	  ((    RungeKuttaStepInterpolator)interpolator).reset();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
221	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setTicks(i,  stages);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).setTicks(i,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).setTicks(i,  stages);	  ((    RungeKuttaStepInterpolator)interpolator).reset();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
222	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  stages,  i);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  stages,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  stages,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages,    t);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
223	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  yDotK[i],  c);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  yDotK[i],  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  yDotK[i],  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages,    yDotK[i]);    	non-compiled	[CE]  illegal  start  of  expression	74	None	replace
224	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(i,  stages  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(i,  stages  +  1);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).remove(i,  stages  +  1);	  ((    RungeKuttaStepInterpolator)prototype).remove(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
225	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  forward);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  forward);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    dt,    forward);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
226	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  c);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  c);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    stages,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
227	[BUG]  [BUGGY]  yDotK  []  =  new  double[stages[i].length];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  []  =  new  double[stages[i].length];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  []  =  new  double[stages[i].length];	  yDotK    [i]    =    new    double[c[i].length];    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
228	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  yDotK,  t0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  yDotK,  t0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  yDotK,  t0);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yTmp,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	38	None	replace
229	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  -  3];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  -  3];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length  -  3];	  yDotK    [i]    =    new    double[stages[i].length    -    1];    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
230	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  c);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    c);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
231	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  c[i]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  c[i]);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  c[i]);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    stages[i]);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
232	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  +  1].length;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  +  1].length;  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length  +  1].length;	  yDotK    [i]    =    new    double[stages[i].length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
233	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  +  2;  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  +  2;  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length  +  2;	  yDotK    [i]    =    new    double[stages[i].length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
234	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  *  2];  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  *  2];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length  *  2];	  yDotK    [i]    =    new    double[stages[i].length    +    2];    	non-compiled	[CE]  illegal  start  of  expression	82	None	replace
235	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  yDotK,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  yDotK,  forward);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	80	None	replace
236	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  i,  t0);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  i,  t0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  i,  t0);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y,    i,    t0);    	non-compiled	[CE]  illegal  start  of  expression	84	None	replace
237	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length],  y0.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length],  y0.length);  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length],  y0.length);	  yDotK    [i]    =    new    double[stages[i].length],    c.length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
238	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  i,  dt);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  i,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  i,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y,    i,    dt);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
239	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  i,  stages);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  i,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  i,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y,    i,    dt);    	non-compiled	[CE]  illegal  start  of  expression	89	None	replace
240	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  stages,  yDotK,  prototyper.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  stages,  yDotK,  prototyper.length);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  stages,  yDotK,  prototyper.length);	  ((    RungeKuttaStepInterpolator)c).reinitialize(this,    y0,    yDotK,    prototyper.length);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
241	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  j,  k);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  j,  k);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  j,  k);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    j,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
242	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i][1]  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i][1]  +  1];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i][1]  +  1];	  yDotK    [i]    =    new    double[stages[i][1];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
243	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  stages);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
244	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  y2,  j,  c);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  y2,  j,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  y2,  j,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    j,    c);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
245	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  y1,  j,  c);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  y1,  j,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  y1,  j,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    j,    c);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
246	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  i,  forward);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  i,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  i,  forward);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    i,    forward);    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
247	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).set(i,  y0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).set(i,  y0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).set(i,  y0);	  ((    RungeKuttaStepInterpolator)prototype).set(i);    	non-compiled	[CE]  illegal  start  of  expression	90	None	replace
248	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  dt);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y1,    dt);    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
249	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  1);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  1);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    1);    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
250	[BUG]  [BUGGY]  yDotK  []  =  new  double[stages][i  +  1].doubleValue();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  []  =  new  double[stages][i  +  1].doubleValue();  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  []  =  new  double[stages][i  +  1].doubleValue();	  yDotK    []    =    new    double[stages][i].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
251	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK,  i);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    stages,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
252	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK,  forward);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    stages,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
253	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages][i].value;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages][i].value;  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages][i].value;	  yDotK    [i]    =    new    double[stages][i].length;    	non-compiled	[CE]  illegal  start  of  expression	71	None	replace
254	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  stages);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yTmp,    dt);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
255	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  dt,  i);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  dt,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  dt,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yTmp,    dt);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
256	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  dt,  k);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  dt,  k);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  dt,  k);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yTmp,    dt);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
257	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  j,  yTmp);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  j,  yTmp);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  j,  yTmp);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yTmp,    j);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
258	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(y0,  c);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(y0,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).remove(y0,  c);	  ((    RungeKuttaStepInterpolator)prototype).remove(i,    c);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
259	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  i);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    t0);    	non-compiled	[CE]  illegal  start  of  expression	77	None	replace
260	[BUG]  [BUGGY]  yDotK  []  =  new  double[stages[i].doubleValue();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  []  =  new  double[stages[i].doubleValue();  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  []  =  new  double[stages[i].doubleValue();	  yDotK    [i]    =    new    double[stages[i].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
261	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  i,  dt);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  i,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  i,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    i,    dt);    	non-compiled	[CE]  illegal  start  of  expression	91	None	replace
262	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages.length  +  3];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages.length  +  3];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages.length  +  3];	  yDotK    [i]    =    new    double[stages.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
263	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages.length  +  2];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages.length  +  2];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages.length  +  2];	  yDotK    [i]    =    new    double[stages.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
264	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  yTmp,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  yTmp,  yDotK,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  yTmp,  yDotK,  forward);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	83	None	replace
265	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  yDotK,  dt);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  yDotK,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  yDotK,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yTmp,    yDotK,    dt);    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
266	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  c.length  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  c.length  +  1);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  c.length  +  1);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    c.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
267	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y1,  stages,  yDotK,  stages[i]);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y1,  stages,  yDotK,  stages[i]);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y1,  stages,  yDotK,  stages[i]);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y1,    yDotK,    stages[i]);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
268	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  stages,  yDotK,  t);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  stages,  yDotK,  t);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  stages,  yDotK,  t);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    yDotK,    t);    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
269	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  stages,  yDotK,  prototype.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  stages,  yDotK,  prototype.length);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  stages,  yDotK,  prototype.length);	  ((    RungeKuttaStepInterpolator)c).reinitialize(this,    y0,    yDotK,    prototype.length);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
270	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yTmp,  prototype.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yTmp,  prototype.length);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yTmp,  prototype.length);	  ((    RungeKuttaStepInterpolator)c).reinitialize(this,    y0,    yDotK,    prototype.length);    	non-compiled	[CE]  illegal  start  of  expression	29	None	replace
271	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  stages,  c);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  stages,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yDotK,  stages,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    dt,    c);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
272	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  dt,  i);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  dt,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  dt,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y,    dt,    i);    	non-compiled	[CE]  illegal  start  of  expression	94	None	replace
273	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).get(i);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).get(i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).get(i);	  ((    RungeKuttaStepInterpolator)prototype).get(i);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
274	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  dt,  c);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  dt,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).reinitialize(this,  y0,  dt,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    dt,    c);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
275	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  yDotK,  forward);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  yDotK,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  yDotK,  forward);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
276	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  yDotK,  stages);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  yDotK,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  yDotK,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    stages);    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
277	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages  +  1];  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages  +  1];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages  +  1];	  yDotK    [i]    =    new    double[c.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
278	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages,  c.length  +  1];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages,  c.length  +  1];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages,  c.length  +  1];	  yDotK    [i]    =    new    double[c.length    +    1];    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
279	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  dt,  i);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  dt,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  dt,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    dt,    i);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
280	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages.length  *  1];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages.length  *  1];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages.length  *  1];	  yDotK    [i]    =    new    double[stages.length    *    i];    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
281	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages.length  *  3];  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages.length  *  3];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages.length  *  3];	  yDotK    [i]    =    new    double[stages.length    *    i];    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
282	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  stages,  yDotK,  dt);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  stages,  yDotK,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  stages,  yDotK,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    yDotK,    dt);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
283	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setInitialize(this,  yDotK,  stages);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).setInitialize(this,  yDotK,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).setInitialize(this,  yDotK,  stages);	  ((    RungeKuttaStepInterpolator)prototype).setInitialize(this,    yDotK,    i);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
284	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(i,  y0.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(i,  y0.length);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).remove(i,  y0.length);	  ((    RungeKuttaStepInterpolator)prototype).remove(i,    stages);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
285	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  k);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  k);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  k);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    k);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
286	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  forward);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  forward);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    dt,    forward);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
287	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  j0,  forward);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  j0,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  j0,  forward);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    dt,    forward);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
288	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  -  1].length;  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length  -  1].length;  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length  -  1].length;	  yDotK    [i]    =    new    double[stages[i].length;    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
289	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  yTmp);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  yTmp);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  yTmp);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yTmp,    dt);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
290	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  dt,  forward);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  dt,  forward);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  dt,  forward);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yTmp,    dt);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
291	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  dt,  stages);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  dt,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  dt,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yTmp,    dt);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
292	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  backwards);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  backwards);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  backwards);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    yDotK,    dt);    	non-compiled	[CE]  illegal  start  of  expression	93	None	replace
293	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  stages,  dt);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  stages,  dt);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  stages,  dt);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages,    dt);    	non-compiled	[CE]  illegal  start  of  expression	79	None	replace
294	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  yDotK);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  yDotK);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  yDotK);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	73	None	replace
295	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  t);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  t);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  t);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages,    t);    	non-compiled	[CE]  illegal  start  of  expression	88	None	replace
296	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(i  +  2);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(i  +  2);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).remove(i  +  2);	  ((    RungeKuttaStepInterpolator)prototype).remove(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
297	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(i  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(i  -  1);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).remove(i  -  1);	  ((    RungeKuttaStepInterpolator)prototype).remove(i    +    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
298	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  stages  +  1);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  stages  +  1);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  stages  +  1);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    c.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
299	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i  +  1,  c.length  +  1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i  +  1,  c.length  +  1);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  i  +  1,  c.length  +  1);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    c.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
300	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  j,  c);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  j,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  stages,  j,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages,    j);    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
301	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i][3];  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i][3];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i][3];	  yDotK    [i]    =    new    double[stages[i][1];    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
302	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  j,  stages);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  j,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  j,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    i,    j);    	non-compiled	[CE]  illegal  start  of  expression	96	None	replace
303	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  i,  c);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  i,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  i,  c);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    yDotK,    c);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
304	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(i,  j);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).remove(i,  j);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).remove(i,  j);	  ((    RungeKuttaStepInterpolator)prototype).remove(i,    stages);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
305	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  dt,  stages);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  dt,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  dt,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    dt,    i);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
306	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  c);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yDotK,  i,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    dt,    c);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
307	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yTmp,  yDotK,  forward,  stages);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yTmp,  yDotK,  forward,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  yTmp,  yDotK,  forward,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yTmp,    yDotK,    forward);    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
308	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototyper.cloneTree());  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototyper.cloneTree());  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototyper.cloneTree());	  ((    RungeKuttaStepInterpolator)c).reinitialize(this,    y0,    yDotK,    prototyper.length);    	non-compiled	[CE]  illegal  start  of  expression	76	None	replace
309	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages][i].doubleValue()  *  1;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages][i].doubleValue()  *  1;  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages][i].doubleValue()  *  1;	  yDotK    [i]    =    new    double[stages][i].doubleValue()    +    1;    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
310	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  0,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  0,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  0,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    0,    i);    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
311	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages.length  *  c.length];  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages.length  *  c.length];  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages.length  *  c.length];	  yDotK    [i]    =    new    double[stages.length    *    i];    	non-compiled	[CE]  illegal  start  of  expression	95	None	replace
312	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  j,  c,  stages);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  j,  c,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  j,  c,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    j,    c);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
313	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  yDotK,  j,  c);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  yDotK,  j,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  yDotK,  j,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    j,    c);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
314	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).start();  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)interpolator).start();  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)interpolator).start();	  ((    RungeKuttaStepInterpolator)interpolator).reset();    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
315	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  c,  yDotK);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  c,  yDotK);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  c,  yDotK);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    stages,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
316	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  j);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  j);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  j);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    stages,    yDotK);    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
317	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  stages);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    stages);    	non-compiled	[CE]  illegal  start  of  expression	78	None	replace
318	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages].length  *  c.length;  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages].length  *  c.length;  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages].length  *  c.length;	  yDotK    [i]    =    new    double[stages].length;    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
319	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  c,  stages[i]);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  c,  stages[i]);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  c,  stages[i]);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    stages,    yDotK,    stages[i]);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
320	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK,  c.length);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK,  c.length);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  stages,  yDotK,  c.length);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    stages,    yDotK,    stages[i]);    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
321	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  j,  i);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  j,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  j,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    j);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
322	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  j,  stages);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  j,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  j,  stages);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yTmp,    j);    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
323	[BUG]  [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  i,  stages);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  i,  stages);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaIntegrator)prototype).reinitialize(this,  y0,  i,  stages);	  ((    RungeKuttaIntegrator)prototype).reinitialize(this,    y0,    yDotK,    stages);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
324	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  yDotK,  t0);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  yDotK,  t0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  i,  yDotK,  t0);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    stages,    yDotK,    t0);    	non-compiled	[CE]  illegal  start  of  expression	68	None	replace
325	[BUG]  [BUGGY]  yDotk  []  =  new  double[stages][i].doubleValue();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotk  []  =  new  double[stages][i].doubleValue();  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotk  []  =  new  double[stages][i].doubleValue();	  yDotK    []    =    new    double[stages][i].doubleValue();    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
326	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  stages[i]);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  stages[i]);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  c,  yDotK,  stages[i]);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    c,    stages[i]);    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
327	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  dt,  j);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  dt,  j);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y1,  dt,  j);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    yDotK,    dt,    j);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
328	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  t0);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  t0);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  yTmp,  t0);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yTmp,    t);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
329	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototyper);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototyper);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)c).reinitialize(this,  y0,  yDotK,  prototyper);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    c);    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
330	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length],  c.length  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length],  c.length  -  1);  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length],  c.length  -  1);	  yDotK    [i]    =    new    double[stages[i].length],    c.length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
331	[BUG]  [BUGGY]  yDotK  [i]  =  new  double[stages[i].length],  c.length,  c.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  yDotK  [i]  =  new  double[stages[i].length],  c.length,  c.length);  [BUGGY]      }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	yDotK  [i]  =  new  double[stages[i].length],  c.length,  c.length);	  yDotK    [i]    =    new    double[stages[i].length],    c.length);    	non-compiled	[CE]  illegal  start  of  expression	86	None	replace
332	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  x0,  y1,  i);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  x0,  y1,  i);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  x0,  y1,  i);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y1,    i);    	non-compiled	[CE]  illegal  start  of  expression	85	None	replace
333	[BUG]  [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  yTmp,  c);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      resetEvaluations();  final  boolean  forward  =  t  >  t0;  final  int  stages  =  c.length  +  1;  if  (y  !=  y0)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  }  final  double[][]  yDotK  =  new  double[stages][];  for  (int  i  =  0;  i  <  stages;  ++i)  {      [BUGGY]  ((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  yTmp,  c);  [BUGGY]      yDotK  [i]  =  new  double[y0.length];  }  final  double[]  yTmp  =  new  double[y0.length];  AbstractStepInterpolator  interpolator;  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	112	112	2	replace	((  RungeKuttaStepInterpolator)prototype).reinitialize(this,  y0,  dt,  yTmp,  c);	  ((    RungeKuttaStepInterpolator)prototype).reinitialize(this,    y0,    yDotK,    dt,    c);    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
