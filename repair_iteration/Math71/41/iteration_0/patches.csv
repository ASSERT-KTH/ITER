bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]    int  stepSize  =  dt.intValue();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]    int  stepSize  =  dt.intValue();  [BUGGY]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	174	174	2	replace	    int  stepSize  =  dt.intValue();		non-compiled	[CE]  illegal  start  of  expression	82	None	add
2	[BUG]  [BUGGY]    final  double  stepSize  =  dt.doubleValue();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]    final  double  stepSize  =  dt.doubleValue();  [BUGGY]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	174	174	2	replace	    final  double  stepSize  =  dt.doubleValue();		non-compiled	[CE]  illegal  start  of  expression	82	None	add
3	[BUG]  [BUGGY]    dt  =  manager.getEventTime();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]    dt  =  manager.getEventTime();  [BUGGY]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	174	174	2	replace	    dt  =  manager.getEventTime();		non-compiled	[CE]  illegal  start  of  expression	82	None	add
4	[BUG]  [BUGGY]    dt  =  manager.getEventTime()  -  stepStart;  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]    dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	174	174	2	replace	    dt  =  manager.getEventTime()  -  stepStart;		non-compiled	[CE]  illegal  start  of  expression	82	None	add
5	[BUG]  [BUGGY]    int  stepSize  =  dt.getStep();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]    int  stepSize  =  dt.getStep();  [BUGGY]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	174	174	2	replace	    int  stepSize  =  dt.getStep();		non-compiled	[CE]  illegal  start  of  expression	82	None	add
6	[BUG]  [BUGGY]  if(Math.abs(dt)  <  Math.abs(stepSize))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]  if(Math.abs(dt)  <  Math.abs(stepSize))  {  [BUGGY]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	174	174	2	replace	if(Math.abs(dt)  <  Math.abs(stepSize))  {	if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {  	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
7	[BUG]  [BUGGY]  if  (Math.abs(dt)  <  =  Math.abs(dt))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]  if  (Math.abs(dt)  <  =  Math.abs(dt))  {  [BUGGY]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	174	174	2	replace	if  (Math.abs(dt)  <  =  Math.abs(dt))  {	if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {  	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
8	[BUG]  [BUGGY]    double  stepSize  =  dt.doubleValue();  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]    double  stepSize  =  dt.doubleValue();  [BUGGY]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	174	174	2	replace	    double  stepSize  =  dt.doubleValue();		non-compiled	[CE]  illegal  start  of  expression	82	None	add
9	[BUG]  [BUGGY]    final  double  stepSize  =  interface.getStepSize();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]    final  double  stepSize  =  interface.getStepSize();  [BUGGY]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	174	174	2	replace	    final  double  stepSize  =  interface.getStepSize();		non-compiled	[CE]  illegal  start  of  expression	82	None	add
10	[BUG]  [BUGGY]    int  stepSize  =  handler.getStepSize();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]    int  stepSize  =  handler.getStepSize();  [BUGGY]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	174	174	2	replace	    int  stepSize  =  handler.getStepSize();		non-compiled	[CE]  illegal  start  of  expression	82	None	add
11	[BUG]  [BUGGY]    final  double  stepSize  =  handler.getEventTime();  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]    final  double  stepSize  =  handler.getEventTime();  [BUGGY]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	174	174	2	replace	    final  double  stepSize  =  handler.getEventTime();		non-compiled	[CE]  illegal  start  of  expression	82	None	add
12	[BUG]  [BUGGY]    final  double  stepSize  =  handler.getEventTime()  -  stepStart;  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]    final  double  stepSize  =  handler.getEventTime()  -  stepStart;  [BUGGY]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	174	174	2	replace	    final  double  stepSize  =  handler.getEventTime()  -  stepStart;		non-compiled	[CE]  illegal  start  of  expression	82	None	add
13	[BUG]  [BUGGY]    int  stepSize  =  processStep(t0,  dt);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]    int  stepSize  =  processStep(t0,  dt);  [BUGGY]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	174	174	2	replace	    int  stepSize  =  processStep(t0,  dt);		non-compiled	[CE]  illegal  start  of  expression	82	None	add
14	[BUG]  [BUGGY]    int  stepSize  =  processStep(t0,  yTmp,  dt);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]    int  stepSize  =  processStep(t0,  yTmp,  dt);  [BUGGY]  if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {      loop  =  false;  }  else  {  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	174	174	2	replace	    int  stepSize  =  processStep(t0,  yTmp,  dt);		non-compiled	[CE]  illegal  start  of  expression	82	None	add
15	[BUG]  [BUGGY]  if(Math.abs(dt)  <  =  Math.abs(stepSize))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  for  (int  l  =  1;  l  <  stages;  ++l)  {  sum+=  b[l]  *  yDotK[l][j];  }  yTmp[j]  =  y[j]  +  stepSize  *  sum;  }  interpolator.storeTime(stepStart  +  stepSize);  if  (manager.evaluateStep(interpolator))  {  final  double  dt  =  manager.getEventTime()  -  stepStart;  [BUGGY]  if(Math.abs(dt)  <  =  Math.abs(stepSize))  {  [BUGGY]        loop  =  false;  }  else  {  stepSize  =  dt;  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	174	174	2	replace	if(Math.abs(dt)  <  =  Math.abs(stepSize))  {	if  (Math.abs(dt)  <=  Math.ulp(stepStart))  {  	non-compiled	[CE]  illegal  start  of  expression	81	None	replace
