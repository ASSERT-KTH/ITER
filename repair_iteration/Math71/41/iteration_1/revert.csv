projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=dt.intValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=dt.doubleValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174dt=manager.getEventTime();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174dt=manager.getEventTime()-stepStart;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=dt.getStep();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<=Math.ulp(stepStart)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<Math.abs(stepSize)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<=Math.abs(dt)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174doublestepSize=dt.doubleValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=interface.getStepSize();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=handler.getStepSize();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=handler.getEventTime();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=handler.getEventTime()-stepStart;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=processStep(t0,dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=processStep(t0,yTmp,dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<=Math.abs(stepSize)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174doublestepSize=dt.doubleValue()+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174doublestepSize=dt.doubleValue()*k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174doublestepSize=dt.doubleValue()+2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=dt.getEventTime();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=interface.getEventTime();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=manager.getEventTime();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=handler.getEventTime()-1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=dt.doubleValue()+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=dt.doubleValue()+2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=dt.doubleValue()*k;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=dt.getStepSize();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=interpolator.getStepSize();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=interface.getStepSize();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=prototype.getStepSize();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=interpolator.getEventTime()-stepStart;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=manager.getEventTime()-stepStart;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=interface.getEventTime()-stepStart;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=handler.getEventTime()/stepStart;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=processStep(dt,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=processStep(dt,t1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=processStep(rki,dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=processStep(t0,dt,k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=dt.getStep()+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=dt.getStep(k);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=dt.getMinimumStep();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174dt=manager.getEventTime()-1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174dt=manager.getEventTime()-stepSize;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174dt=manager.getEventTime()+stepSize;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)>Math.abs(stepSize)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<Math.abs(stepSize+1)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<Math.abs(str.length())){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=interface.getStepSize()-1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=interface.getStepSize()+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=dt.getStepSize();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=dt.intValue()+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174doublestepSize=dt.intValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=dt.intValue()-1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<Math.abs(dt)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<Math.abs(dt)||stepSize<Math.abs(dt)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174dt=interpolator.getEventTime()-stepStart;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174dt=manager.getEventTime()/stepStart;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=processStep(dt,yTmp,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=processStep(t0,dt,yTmp);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=processStep(t0,dt,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=processStep(dt,yTmp,t);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<=Math.abs(dt+1)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<Math.abs(dt)||Math.abs(dt+stepSize)<Math.abs(dt)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<Math.abs(dt)||Math.abs(dt+stepSize)<=Math.abs(dt)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<Math.abs(dt+1)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=dt.getStep(interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=dt.getRangeStep();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=dt.doubleValue();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=handler.getStepSize()+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=handler.getStepSize()-1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=processStep(t0,dt+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=interface.getRangeSize();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<Math.abs(yTmp.length)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=processStep(t0,y0,dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=handler.getStepSize()-stepStart;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=handler.getStep();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<Math.abs(stepSize)-1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<Math.abs(dt)||Math.abs(dt)<stepSize)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<Math.abs(stepSize)||Math.abs(dt)<Math.abs(stepSize)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174doublestepSize=processStep(t0,yTmp,dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=processStep(t0,nextStep,dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=handler.getEventTime()-stepStart+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174intstepSize=dt.getStep(step);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174doublestepSize=processStep(t0,dt);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=dt.doubleValue()*2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<=Math.abs(yTmp)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<Math.abs(yTmp)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<=Math.abs(stepSize+1)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<=Math.abs(dt)/2+stepSize)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174dt=manager.getEventTime()-stepStart+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174finaldoublestepSize=interface.getStepSize()/2;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java174if(Math.abs(dt)<=Math.abs(dt+stepSize)){
