bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  for(StepHandler  handler  :  interpolator.stepHandlers)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]  for(StepHandler  handler  :  interpolator.stepHandlers)  {  [BUGGY]  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	for(StepHandler  handler  :  interpolator.stepHandlers)  {	for  (StepHandler  handler  :  stepHandlers)  {  	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
2	[BUG]  [BUGGY]  for(StepHandler  handler  :  y)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]  for(StepHandler  handler  :  y)  {  [BUGGY]  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	for(StepHandler  handler  :  y)  {	for  (StepHandler  handler  :  stepHandlers)  {  	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
3	[BUG]  [BUGGY]  for(StepHandler  handler  :  yDotK)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]  for(StepHandler  handler  :  yDotK)  {  [BUGGY]  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	for(StepHandler  handler  :  yDotK)  {	for  (StepHandler  handler  :  stepHandlers)  {  	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
4	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]    [BUGGY]  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	  	for  (StepHandler  handler  :  stepHandlers)  {  	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
5	[BUG]  [BUGGY]    System.arraycopy(yTmp,  0,  y,  0,  y0.length);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]    System.arraycopy(yTmp,  0,  y,  0,  y0.length);  [BUGGY]  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	    System.arraycopy(yTmp,  0,  y,  0,  y0.length);		non-compiled	[CE]  illegal  start  of  expression	100	None	add
6	[BUG]  [BUGGY]    System.arraycopy(yDotK,  0,  y,  0,  y0.length);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]    System.arraycopy(yDotK,  0,  y,  0,  y0.length);  [BUGGY]  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	    System.arraycopy(yDotK,  0,  y,  0,  y0.length);		non-compiled	[CE]  illegal  start  of  expression	100	None	add
7	[BUG]  [BUGGY]    System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]    System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  [BUGGY]  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	    System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);		non-compiled	[CE]  illegal  start  of  expression	100	None	add
8	[BUG]  [BUGGY]    System.arraycopy(yTmp,  0,  y,  0,  stepSize);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]    System.arraycopy(yTmp,  0,  y,  0,  stepSize);  [BUGGY]  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	    System.arraycopy(yTmp,  0,  y,  0,  stepSize);		non-compiled	[CE]  illegal  start  of  expression	100	None	add
9	[BUG]  [BUGGY]    System.arraycopy(yTmp,  0,  stepHandlers,  0,  y0.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]    System.arraycopy(yTmp,  0,  stepHandlers,  0,  y0.length);  [BUGGY]  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	    System.arraycopy(yTmp,  0,  stepHandlers,  0,  y0.length);		non-compiled	[CE]  illegal  start  of  expression	100	None	add
10	[BUG]  [BUGGY]    System.arraycopy(yTmp,  0,  stepHandlers,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]    System.arraycopy(yTmp,  0,  stepHandlers,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	    System.arraycopy(yTmp,  0,  stepHandlers,  0,  y0.length);  manager.stepAccepted(nextStep,  y);		non-compiled	[CE]  illegal  start  of  expression	100	None	add
11	[BUG]  [BUGGY]    for(StepHandler  stepHandler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]    for(StepHandler  stepHandler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  [BUGGY]  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	    for(StepHandler  stepHandler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }		non-compiled	[CE]  illegal  start  of  expression	100	None	add
12	[BUG]  [BUGGY]    System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]    System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	    System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);		non-compiled	[CE]  illegal  start  of  expression	100	None	add
13	[BUG]  [BUGGY]  for(StepHandler  handler  :  y0)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]  for(StepHandler  handler  :  y0)  {  [BUGGY]  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	for(StepHandler  handler  :  y0)  {	for  (StepHandler  handler  :  stepHandlers)  {  	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
14	[BUG]  [BUGGY]  for(StepHandler  handler  :  yTmp)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]  for(StepHandler  handler  :  yTmp)  {  [BUGGY]  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	for(StepHandler  handler  :  yTmp)  {	for  (StepHandler  handler  :  stepHandlers)  {  	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
15	[BUG]  [BUGGY]  for(StepHandler  handler  :  this.stepHandlers)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]  for(StepHandler  handler  :  this.stepHandlers)  {  [BUGGY]  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	for(StepHandler  handler  :  this.stepHandlers)  {	for  (StepHandler  handler  :  stepHandlers)  {  	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
16	[BUG]  [BUGGY]  for(StepHandler  handler  :  y0.length)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]  for(StepHandler  handler  :  y0.length)  {  [BUGGY]  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	for(StepHandler  handler  :  y0.length)  {	for  (StepHandler  handler  :  stepHandlers)  {  	non-compiled	[CE]  illegal  start  of  expression	99	None	replace
17	[BUG]  [BUGGY]    if(stepHandlers!=  null)  {  for(StepHandler  stepHandler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]    if(stepHandlers!=  null)  {  for(StepHandler  stepHandler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  [BUGGY]  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	    if(stepHandlers!=  null)  {  for(StepHandler  stepHandler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }		non-compiled	[CE]  illegal  start  of  expression	100	None	add
18	[BUG]  [BUGGY]    if(stepHandlers!=  null)  {  for(StepHandler  stepHandler  :  stepHandlers)  {  handler.handleStep(interpolator,  nextStep);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]    if(stepHandlers!=  null)  {  for(StepHandler  stepHandler  :  stepHandlers)  {  handler.handleStep(interpolator,  nextStep);  }  [BUGGY]  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	    if(stepHandlers!=  null)  {  for(StepHandler  stepHandler  :  stepHandlers)  {  handler.handleStep(interpolator,  nextStep);  }		non-compiled	[CE]  illegal  start  of  expression	100	None	add
19	[BUG]  [BUGGY]    if(stepHandlers!=  null)  {  for(StepHandler  stepHandler  :  stepHandlers)  {  handler.handleStep(interpolator,  stepHandler);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]    if(stepHandlers!=  null)  {  for(StepHandler  stepHandler  :  stepHandlers)  {  handler.handleStep(interpolator,  stepHandler);  }  [BUGGY]  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	    if(stepHandlers!=  null)  {  for(StepHandler  stepHandler  :  stepHandlers)  {  handler.handleStep(interpolator,  stepHandler);  }		non-compiled	[CE]  illegal  start  of  expression	100	None	add
20	[BUG]  [BUGGY]    if(stepHandlers!=  null)  {  for(StepHandler  stepHandler  :  stepHandlers)  {  handler.handleStep(interpolator,  firstStep);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  }  final  double  nextStep  =  stepStart  +  stepSize;  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  [BUGGY]    if(stepHandlers!=  null)  {  for(StepHandler  stepHandler  :  stepHandlers)  {  handler.handleStep(interpolator,  firstStep);  }  [BUGGY]  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  if  (manager.reset(stepStart,  y)  &&  !  lastStep)  {    computeDerivatives(stepStart,  y,  yDotK[0]);  }  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	199	199	2	replace	    if(stepHandlers!=  null)  {  for(StepHandler  stepHandler  :  stepHandlers)  {  handler.handleStep(interpolator,  firstStep);  }		non-compiled	[CE]  illegal  start  of  expression	100	None	add
