projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y!=y0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0!=y){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0.length!=t.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages;++i){System.arraycopy(y0,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0!=y0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0!=y1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+1][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+1][1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+1][2];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+1][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages>=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0.length!=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+2][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[c.length+1][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+3][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(!forward){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==null){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=null){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==null||forward){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if((y0!=y0)||(y0!=null&&y0.length>0)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0!=yTmp){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0.length!=y0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if((y0!=y0)||(y0!=null&&y0.length>1)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+2];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+3];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[c.length+1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+2][2];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+2][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+3][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[c.length+1][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0.length!=y1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=y0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0.length!=y){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(stages,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inty=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages>0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<c.length;++i){System.arraycopy(y0,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<stages;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<c.length;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<stages;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages;++i){System.arraycopy(c,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(c.length!=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t.length!=y0.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(y0,0,y,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(y0,0,y,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(y0,0,y,0,c.length+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+2][1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c[i],0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=0||forward){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inty=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c[i][i],0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=(double[][])equations.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=t.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(stages,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(strates!=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(stages,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+4][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,stages,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;i<stages;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,stages.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+4];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,1,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages>=t.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(y0,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=t0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=y){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,y0,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,y0,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y1,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,y0,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,y0,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y0,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages>=stages){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,1,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,1,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=0||y0.length!=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,stages,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,c[i][i].length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
