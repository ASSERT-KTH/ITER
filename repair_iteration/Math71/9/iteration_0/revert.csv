projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y!=y0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0!=y){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0.length!=t.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages;++i){System.arraycopy(y0,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0!=y0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0!=y1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+1][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+1][1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+1][2];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+1][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages>=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0.length!=0){
