projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y!=y0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0!=y){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0.length!=t.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages;++i){System.arraycopy(y0,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0!=y0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0!=y1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+1][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+1][1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+1][2];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+1][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages>=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0.length!=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+2][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[c.length+1][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+3][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(!forward){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==null){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=null){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==null||forward){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if((y0!=y0)||(y0!=null&&y0.length>0)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0!=yTmp){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0.length!=y0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if((y0!=y0)||(y0!=null&&y0.length>1)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+2];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+3];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[c.length+1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+2][2];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+2][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+3][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[c.length+1][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0.length!=y1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=y0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0.length!=y){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(stages,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inty=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages>0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<c.length;++i){System.arraycopy(y0,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<stages;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<c.length;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<stages;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages;++i){System.arraycopy(c,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(c.length!=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t.length!=y0.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(y0,0,y,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(y0,0,y,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(y0,0,y,0,c.length+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+2][1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c[i],0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=0||forward){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inty=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c[i][i],0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=(double[][])equations.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=t.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(stages,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(strates!=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(stages,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+4][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,stages,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;i<stages;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,stages.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+4];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,1,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages>=t.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(y0,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=t0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=y){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,y0,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,y0,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y1,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,y0,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,y0,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y0,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages>=stages){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,1,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,1,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=0||y0.length!=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,stages,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,c[i][i].length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inty=0;y<stages.length;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length-1;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length+1;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inti=0;i<stages.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,c.length+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,1,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,b,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<stages;++i){System.arraycopy(c,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<y0.length;++i){System.arraycopy(c,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<c.length;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<c.length;++i){System.arraycopy(c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c[i][i],0,c.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inti=0;i<stages;++i){System.arraycopy(c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length-1;++i){System.arraycopy(stages,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(stages,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inti=0;i<stages.length;++i){System.arraycopy(stages,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(b,0,b,0,b.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<c.length;++i){System.arraycopy(stages,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(stages,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inti=0;i<stages;++i){System.arraycopy(stages,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0.length!=c.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0.length!=y0.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,c[i],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,1,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if((y0!=y0)&&(y0!=null&&y0.length>1)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length-1;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(stages,0,c,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inti=0;i<stages.length;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(c.length>0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(c.length!=1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(c.length==0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,b,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<c.length;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inty=0;y<stages;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<c.length;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldoubley=0;y<stages;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty0=0;y<stages;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=1;y<stages;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>=stages){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>stages){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<stages){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>>stages){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=t){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==y0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=0&&y0.length!=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=0||stages.length!=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=0||stages!=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==0||stages!=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<c.length;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<c.length;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(stages,0,c,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inty=0;y<stages;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==t.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(b,0,b,0,b.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y0,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y0,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y0,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(strategy,0,strategy,0,strategy.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,y0,0,c.length+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,dt,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,c[i][i],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inti=0;i<stages;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,y,0,c.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c[i],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c[0],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<c.length;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<c.length;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length-1;++i){System.arraycopy(y0,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inti=0;i<stages.length;++i){System.arraycopy(stages,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length-1;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inti=0;i<stages.length;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length+1;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=(double[][])c.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=(double[][])sanityChecks(equations);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=(double[][])equivalence.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[c.length+2];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[c.length+3];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[c.length+4];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(c.length!=y0.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==t0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages>=t0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<0||forward){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,1,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c[i][i],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c[i],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==null||stages!=null){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==null||stages==null){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==null||stages<=1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+3][1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107booleany=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c[i][0],0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c[0],0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c[i],0,c.length+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,y0,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(b,0,b,0,b.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(y0,0,y,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[c.length+2][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[c.length+3][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[t0.length+1][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages[i]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<c.length;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<c.length;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){finalinty=0;y<stages;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldoubley=0;y<stages;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty0=0;y<stages;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(!stages){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=null||forward){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=1||forward){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+4][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,y,0,c.length+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,y1,0,c.length+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,y,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,y1,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[c.length+2][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[c.length+3][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[c.length+1][1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length-1;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length+1;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length+3][2];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,y0,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y1,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(b,0,b,0,b.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y1,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,y0,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y1,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,y0,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(y0,0,yTmp,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(y0,0,y1,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages>t.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<t.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c[i],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c[0],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c[i],0,c.length);for(intj=0;j<stages;++j){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c[0],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c[i],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages>1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty0=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<stages.length+1;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,c[i].length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(b,0,b,0,b.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(b,0,b,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(stages,0,y,0,stages.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,stages.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(stages,0,c,0,stages.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<c.length;++i){System.arraycopy(stages,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=0&&forward){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==0||forward){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=0||stages==0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c[i],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c[i][i],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c[i][0],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c[i],0,c.length-1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<c.length;++i){System.arraycopy(y0,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<c.length;++i){System.arraycopy(y0,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if((y0!=y0)&&(y0!=null&&y0.length>0)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,1,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<c.length;++i){System.arraycopy(y0,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldoubley=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c[i][i],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0.length!=yTmp.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0.length!=yTmp){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length-1;++i){System.arraycopy(stages,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length+1;++i){System.arraycopy(stages,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<Stages.length;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(stages,0,y1,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=stages){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c0,0,y,0,c.length+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(b,0,b,0,b.length);for(inti=0;i<b.length;++i){System.arraycopy(b,0,b,0,
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if((y0!=null)&&(y0!=null&&y0.length>1)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(stages,0,y,0,y.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,c.length+1);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(t0,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(t0,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y1,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y1,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(stages,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(stages,0,y1,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(t0,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y1,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages+1][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(stages,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(stages,0,y0,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(stages,0,i,0,stages.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,stages.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=1&&forward){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,stages,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(stages,0,y,0,c.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(!forward){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(t0,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(t0,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(lastStep,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(lastStep,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,stages,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,c[i],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,c[0],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,stages[i],0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c[i],0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,c.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(stages,0,i,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(t0,0,c,1,c.length);for(inti=0;i<stages;++i){System.arraycopy(t0,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,1,c.length+1);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages;++i){System.arraycopy(stages,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,stages.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=null&&forward){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(stages,0,y,0,c.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=t0.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inty=0;y<c.length;++i){System.arraycopy(y0,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=(double[][])stages.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=(double[][])sanityChecks.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=(double[][])entries.clone();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(c,0,c,0,c.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<Stages.length;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages+1][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(t0,0,c,0,t.length);for(inti=0;i<stages;++i){System.arraycopy(t0,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(t0,0,c,0,t.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,c[i][i],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,c,1,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,c,1,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages;++i){System.arraycopy(y0,0,y1,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(stages,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(stages,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(t0,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,stages[i][i],0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>>0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,c[i][i].length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,i,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages;++i){System.arraycopy(c,0,y,0,c.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=null||stages<1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=null||stages<=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<Stages.length;++i){System.arraycopy(c,0,i,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<stages;++i){System.arraycopy(stages,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<stages;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages+1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,c,1,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages>stages){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[stages.length][];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(t0,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(t0,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,c.length+1);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,c,0,stages.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldoubley=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(t0,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(t0,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,stages[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(t0,0,c,0,t.length);for(inti=0;i<stages;++i){System.arraycopy(t0,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(c,0,i,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;y<stages.length;++i){System.arraycopy(c,0,y,0,c.length+1);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(b,0,b,0,b.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(t0,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<Stages.length;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(y0,0,stages,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==0||stages.length!=0){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(!forward){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(t0,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(t0,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,c.length+1);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward>1){System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(t0,0,c,0,t.length);for(inti=0;i<stages;++i){System.arraycopy(t0,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(b,0,b,0,b.length);for(inti=0;i<stages;++i){System.arraycopy(b,0,c,0,b.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if((y0!=null)&&(y0!=null&&y0.length>0)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=yTmp){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward<1){System.arraycopy(c,0,c,0,c.length+1);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=(double[][])equations.toArray(newdouble[stages]);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(t0,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(t0,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=1;i<stages;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){System.arraycopy(c,0,c,1,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,forwards);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(t0,0,y,0,c.length+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107booleany=0;y<stages.length;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;i<stages.length;++i){System.arraycopy(stages,0,y,0,stages.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,forwards);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length+1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(stages,0,c,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,stages,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,forwards);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,stages,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,forward);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=1;y<stages.length;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,c,1,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,c,1,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){System.arraycopy(c,0,c,1,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,1,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107booleany=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107booleany=0;y<stages.length;++i){System.arraycopy(stages,0,y,0,stages.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(b,0,b,0,b.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){System.arraycopy(c,0,c[i],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==null||stages<1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages>=null){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=y0.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(y0.length!=y.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>t0){if(forward<1){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t<k){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t<0){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,1,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){System.arraycopy(c,0,c,1,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t<0){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t<0){System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,forward,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages>=t0.length){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>t0){if(forward<1){System.arraycopy(c,0,c,0,c[i][i].length);for(inti=0;i<stages;++i){System.arraycopy(c,0,
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages<1){System.arraycopy(c,0,c[i][i],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if((y0==y0)||(y0!=null&&y0.length>1)){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y0,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,t,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y0,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[t0.length+1][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107System.arraycopy(c,0,t,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages>=1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=null&&stages<=1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages.length;++i){System.arraycopy(c,0,c,0,c.length+1,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,1,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,1,c.length
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=1;y<stages.length;++i){System.arraycopy(y0,0,y,0,y.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages>0||forward){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finaldouble[][]yTmp=newdouble[t0.length+1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107inty=0;y<stages;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=1;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){System.arraycopy(c,0,c[i],0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,stages,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inti=0;i<stages;++i){System.arraycopy(c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107for(inty=0;i<stages;++i){System.arraycopy(stages,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){System.arraycopy(c,0,c,0,forward);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,stages);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(c.length==0){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,c,0,stages);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107finalinty=1;y<stages;++i){System.arraycopy(c,0,y,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=null||stages){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages==null||stages>1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(stages!=null||stages<=1){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward<1){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c,0,c.length);}}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(t>k){if(forward){System.arraycopy(c,0,c,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(c,0,c[i][i],0,c.length
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java107if(c.length<2){System.arraycopy(c,0,y0,0,c.length);for(inti=0;i<stages;++i){System.arraycopy(y0,0,y1,0,y0.length);}
