bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  Manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  Manager.stepAccepted(nextStep,  y);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	Manager.stepAccepted(nextStep,  y);	  Manager.stepAccepted(nextStep,    dt);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
2	[BUG]  [BUGGY]  Manager.stepAccepted(nextStep,  y0);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  Manager.stepAccepted(nextStep,  y0);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	Manager.stepAccepted(nextStep,  y0);	  Manager.stepAccepted(nextStep,    dt);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
3	[BUG]  [BUGGY]  Manager.stepAccepted(nextStep,  stepStart);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  Manager.stepAccepted(nextStep,  stepStart);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	Manager.stepAccepted(nextStep,  stepStart);	  Manager.stepAccepted(nextStep,    dt);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
4	[BUG]  [BUGGY]  Manager.stepAccepted(dt,  nextStep);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  Manager.stepAccepted(dt,  nextStep);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	Manager.stepAccepted(dt,  nextStep);	  Manager.stepAccepted(nextStep,    dt);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
5	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    dt);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
6	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    dt);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
7	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y1,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y1,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y1,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    dt);    }    	non-compiled	[CE]  illegal  start  of  expression	60	None	replace
8	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y0,  1,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y0,  1,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y0,  1,  nextStep.length);	  System.arraycopy(y0,    0,    y1,    1,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
9	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y2,  1,  y0.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y2,  1,  y0.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y2,  1,  y0.length);	  System.arraycopy(y0,    0,    y1,    1,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
10	[BUG]  [BUGGY]  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  manager.stepAccepted(nextStep,  y);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	manager.stepAccepted(nextStep,  y);	  manager.stepAccepted(nextStep,    nextStep);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
11	[BUG]  [BUGGY]  manager.stepAccepted(nextStep,  y0);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  manager.stepAccepted(nextStep,  y0);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	manager.stepAccepted(nextStep,  y0);	  manager.stepAccepted(nextStep,    nextStep);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
12	[BUG]  [BUGGY]  manager.stepAccepted(nextStep,  dt);  [CE]  illegal  start  of  expression  [FE]                              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  manager.stepAccepted(nextStep,  dt);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	manager.stepAccepted(nextStep,  dt);	  manager.stepAccepted(nextStep,    nextStep);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
13	[BUG]  [BUGGY]  manager.stepAccepted(nextStep,  stepStart);  [CE]  illegal  start  of  expression  [FE]                                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  manager.stepAccepted(nextStep,  stepStart);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	manager.stepAccepted(nextStep,  stepStart);	  manager.stepAccepted(nextStep,    nextStep);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
14	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  ySize.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  ySize.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  0,  ySize.length);	  System.arraycopy(y0,    0,    y0,    0,    ySize.length);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
15	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y2,  0,  ySize.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y2,  0,  ySize.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y2,  0,  ySize.length);	  System.arraycopy(y0,    0,    y0,    0,    ySize.length);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
16	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  ySize.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  ySize.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  ytmp,  0,  ySize.length);	  System.arraycopy(y0,    0,    y0,    0,    ySize.length);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
17	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ys,  0,  ySize.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  ys,  0,  ySize.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  ys,  0,  ySize.length);	  System.arraycopy(y0,    0,    y0,    0,    ySize.length);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
18	[BUG]  [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    dt);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
19	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);	  if(nextStep    >    stepSize)    {    System.arraycopy(y0,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
20	[BUG]  [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	  if(nextStep    >    stepSize)    {    System.arraycopy(y0,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
21	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);	  if(nextStep    >    stepSize)    {    System.arraycopy(y0,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
22	[BUG]  [BUGGY]  if(nextStep  ==  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep  ==  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep  ==  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	  if(nextStep    >    stepSize)    {    System.arraycopy(y0,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
23	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  nextStep);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  nextStep);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y0,  0,  nextStep);	  System.arraycopy(y0,    0,    yTmp,    0,    nextStep);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
24	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  nextStep.length  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  nextStep.length  +  1);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  ytmp,  0,  nextStep.length  +  1);	  System.arraycopy(y0,    0,    ytmp,    0,    y0.length    +    1);    	non-compiled	[CE]  illegal  start  of  expression	51	None	replace
25	[BUG]  [BUGGY]  System.arraycopy(y,  0,  y0,  1,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y,  0,  y0,  1,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y,  0,  y0,  1,  nextStep.length);	  System.arraycopy(y,    0,    y0,    1,    y.length);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
26	[BUG]  [BUGGY]  System.arraycopy(y,  0,  y0,  1,  dt.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y,  0,  y0,  1,  dt.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y,  0,  y0,  1,  dt.length);	  System.arraycopy(y,    0,    y0,    1,    y.length);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
27	[BUG]  [BUGGY]  System.arraycopy(y,  0,  y0,  2,  y.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y,  0,  y0,  2,  y.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y,  0,  y0,  2,  y.length);	  System.arraycopy(y,    0,    y0,    1,    y.length);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
28	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);	  if(nextStep    ==    nextStep)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    dt);    }    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
29	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    nextStep);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
30	[BUG]  [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  nextStep);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  nextStep);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  nextStep);  }	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    nextStep);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
31	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  dt.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  dt.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  ytmp,  0,  dt.length);	  System.arraycopy(y0,    0,    ytmp,    0,    y1.length);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
32	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);	  if(y0!=    nextStep)    {    System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
33	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  nextStep,  dt.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  nextStep,  dt.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  1,  nextStep,  dt.length);	  System.arraycopy(y0,    0,    y1,    1,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
34	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  nextStep,  stepSize);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  nextStep,  stepSize);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  1,  nextStep,  stepSize);	  System.arraycopy(y0,    0,    y1,    1,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
35	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y2,  1,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y2,  1,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y2,  1,  nextStep.length);	  System.arraycopy(y0,    0,    y1,    1,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
36	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {	  if(nextStep!=    nextStep)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
37	[BUG]  [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  else  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  else  {  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  else  {	  if(nextStep!=    nextStep)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
38	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  nextStep.length  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  nextStep.length  -  1);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  0,  nextStep.length  -  1);	  System.arraycopy(y0,    0,    y1,    0,    y0.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
39	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y2,  0,  y0.length  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y2,  0,  y0.length  -  1);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y2,  0,  y0.length  -  1);	  System.arraycopy(y0,    0,    y1,    0,    y0.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
40	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  y0.length  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  y0.length  -  1);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y0,  0,  y0.length  -  1);	  System.arraycopy(y0,    0,    y1,    0,    y0.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
41	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  nextStep.length  -  1);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  nextStep.length  -  1);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  1,  nextStep.length  -  1);	  System.arraycopy(y0,    0,    y1,    0,    y0.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
42	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  nextStep.length  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  nextStep.length  -  1);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  ytmp,  0,  nextStep.length  -  1);	  System.arraycopy(y0,    0,    ytmp,    0,    y0.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
43	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  dt,  0,  y0.length  -  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  dt,  0,  y0.length  -  1);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  dt,  0,  y0.length  -  1);	  System.arraycopy(y0,    0,    ytmp,    0,    y0.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
44	[BUG]  [BUGGY]  System.arraycopy(nextStep,  0,  y0,  0,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(nextStep,  0,  y0,  0,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(nextStep,  0,  y0,  0,  nextStep.length);	  System.arraycopy(y,    0,    y0,    0,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
45	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  y.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  y.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  1,  y.length);	  System.arraycopy(y0,    0,    y0,    1,    y.length);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
46	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y2,  1,  y.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y2,  1,  y.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y2,  1,  y.length);	  System.arraycopy(y0,    0,    y0,    1,    y.length);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
47	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  1,  y.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  ytmp,  1,  y.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  ytmp,  1,  y.length);	  System.arraycopy(y0,    0,    y0,    1,    y.length);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
48	[BUG]  [BUGGY]  if(nextStep  ==  nextStep)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep  ==  nextStep)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep  ==  nextStep)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	  if(nextStep!=    nextStep)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
49	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);	  if(nextStep!=    nextStep)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
50	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y2,  0,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y2,  0,  yTmp.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y2,  0,  yTmp.length);	  System.arraycopy(y0,    0,    y1,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
51	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  yTmp,  dt.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  yTmp,  dt.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  0,  yTmp,  dt.length);	  System.arraycopy(y0,    0,    y1,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
52	[BUG]  [BUGGY]  if(nextStep  ==  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  nextStep);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep  ==  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  nextStep);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep  ==  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  nextStep);  }	  if(nextStep!=    nextStep)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    nextStep);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
53	[BUG]  [BUGGY]  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(nextStep,  0,  y,  0,  nextStep.length);	  System.arraycopy(y0,    0,    y,    0,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
54	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y,  1,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y,  1,  nextStep.length);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y,  1,  nextStep.length);	  System.arraycopy(y0,    0,    y,    0,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
55	[BUG]  [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep  ==  null)  {  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	  if(nextStep!=    null)    {    System.arraycopy(y0,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
56	[BUG]  [BUGGY]  System.arraycopy(dt,  0,  yTmp,  0,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(dt,  0,  yTmp,  0,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(dt,  0,  yTmp,  0,  nextStep.length);	  System.arraycopy(yTmp,    0,    dt,    0,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
57	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  y0,  nextStep,  0,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(yTmp,  0,  y0,  nextStep,  0,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(yTmp,  0,  y0,  nextStep,  0,  nextStep.length);	  System.arraycopy(yTmp,    0,    dt,    0,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
58	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  dt,  1,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(yTmp,  0,  dt,  1,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(yTmp,  0,  dt,  1,  nextStep.length);	  System.arraycopy(yTmp,    0,    dt,    0,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
59	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  else  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  else  {  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  else  {	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    nextStep);    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
60	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    nextStep);    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
61	[BUG]  [BUGGY]  System.arraycopy(ytmp,  0,  y,  0,  y.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(ytmp,  0,  y,  0,  y.length);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(ytmp,  0,  y,  0,  y.length);	  System.arraycopy(dt,    0,    y,    0,    y.length);    	non-compiled	[CE]  illegal  start  of  expression	59	None	replace
62	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  yU,  0,  dt.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  yU,  0,  dt.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  yU,  0,  dt.length);	  System.arraycopy(y0,    0,    dt,    0,    yU.length);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
63	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  yU.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  yU.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  ytmp,  0,  yU.length);	  System.arraycopy(y0,    0,    dt,    0,    yU.length);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
64	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  ySize);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  ySize);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  0,  ySize);	  System.arraycopy(y0,    0,    yTmp,    0,    ySize);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
65	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  nextStep);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  nextStep);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  ytmp,  0,  nextStep);	  System.arraycopy(y0,    0,    yTmp,    0,    ySize);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
66	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  dt);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  dt);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  yTmp,  0,  dt);	  System.arraycopy(y0,    0,    yTmp,    0,    ySize);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
67	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y2,  0,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y2,  0,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y2,  0,  nextStep.length);	  System.arraycopy(y0,    0,    y1,    0,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
68	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  nextStep.length  -  1);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  nextStep.length  -  1);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  yTmp,  0,  nextStep.length  -  1);	  System.arraycopy(y0,    0,    yTmp,    0,    y0.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	52	None	replace
69	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  y0,  1,  nextStep);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(yTmp,  0,  y0,  1,  nextStep);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(yTmp,  0,  y0,  1,  nextStep);	  System.arraycopy(yTmp,    0,    y0,    0,    nextStep);    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
70	[BUG]  [BUGGY]  if(nextStep  ==  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep  ==  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep  ==  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }	  if(nextStep    >    stepSize)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    dt);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
71	[BUG]  [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }	  if(nextStep!=    nextStep)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	37	None	replace
72	[BUG]  [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
73	[BUG]  [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
74	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  loop.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  loop.length);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y0,  0,  loop.length);	  System.arraycopy(loop,    0,    y0,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
75	[BUG]  [BUGGY]  if(nextStep  ==  nextStep)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  nextStep);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep  ==  nextStep)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  nextStep);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep  ==  nextStep)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  nextStep);  }	  if(nextStep!=    nextStep)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    nextStep);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
76	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
77	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  dt.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  dt.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  yTmp,  0,  dt.length);	  System.arraycopy(y0,    0,    dt,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
78	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  dt,  0,  y0.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  dt,  0,  y0.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  dt,  0,  y0.length);	  System.arraycopy(y,    0,    dt,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
79	[BUG]  [BUGGY]  System.arraycopy(y,  0,  dt,  0,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y,  0,  dt,  0,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y,  0,  dt,  0,  nextStep.length);	  System.arraycopy(y,    0,    dt,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
80	[BUG]  [BUGGY]  System.arraycopy(dt,  0,  y0,  0,  dt.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(dt,  0,  y0,  0,  dt.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(dt,  0,  y0,  0,  dt.length);	  System.arraycopy(y,    0,    dt,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
81	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  y0,  0,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(yTmp,  0,  y0,  0,  yTmp.length);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(yTmp,  0,  y0,  0,  yTmp.length);	  System.arraycopy(y0,    0,    y0,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
82	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  y,  0,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(yTmp,  0,  y,  0,  yTmp.length);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(yTmp,  0,  y,  0,  yTmp.length);	  System.arraycopy(y0,    0,    y0,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	57	None	replace
83	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  y2.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  y2.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  0,  y2.length);	  System.arraycopy(y0,    0,    y2,    0,    y1.length);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
84	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y3,  0,  y1.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y3,  0,  y1.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y3,  0,  y1.length);	  System.arraycopy(y0,    0,    y2,    0,    y1.length);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
85	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  1,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  ytmp,  1,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  ytmp,  1,  nextStep.length);	  System.arraycopy(y0,    0,    ytmp,    0,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	36	None	replace
86	[BUG]  [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }	  System.arraycopy(y0,    0,    y0,    0,    y0.length);    manager.stepAccepted(nextStep,    dt);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
87	[BUG]  [BUGGY]  if(nextStep  ==  nextStep)  {  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep  ==  nextStep)  {  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep  ==  nextStep)  {  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }	  System.arraycopy(y0,    0,    y0,    0,    y0.length);    manager.stepAccepted(nextStep,    dt);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
88	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);	  System.arraycopy(y0,    0,    y0,    0,    y0.length);    manager.stepAccepted(nextStep,    dt);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
89	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  [CE]  illegal  start  of  expression  [FE]                            AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);	  System.arraycopy(y0,    0,    y0,    0,    y0.length);    manager.stepAccepted(nextStep,    dt);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
90	[BUG]  [BUGGY]  System.arraycopy(dt,  0,  y0,  0,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(dt,  0,  y0,  0,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(dt,  0,  y0,  0,  nextStep.length);	  System.arraycopy(y0,    0,    dt,    0,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
91	[BUG]  [BUGGY]  System.arraycopy(nextStep,  0,  dt,  0,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(nextStep,  0,  dt,  0,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(nextStep,  0,  dt,  0,  nextStep.length);	  System.arraycopy(y0,    0,    dt,    0,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
92	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  ySize.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  ySize.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  yTmp,  0,  ySize.length);	  System.arraycopy(y0,    0,    y0,    0,    ySize.length);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
93	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  yTmp,  1,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  yTmp,  1,  yTmp.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  yTmp,  1,  yTmp.length);	  System.arraycopy(y0,    0,    yTmp,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
94	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
95	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  1,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  ytmp,  1,  yTmp.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  ytmp,  1,  yTmp.length);	  System.arraycopy(y0,    0,    ytmp,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
96	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  yTmp.length  +  1);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  yTmp.length  +  1);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  ytmp,  0,  yTmp.length  +  1);	  System.arraycopy(y0,    0,    ytmp,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
97	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ys,  1,  y.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  ys,  1,  y.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  ys,  1,  y.length);	  System.arraycopy(y0,    0,    y0,    1,    y.length);    	non-compiled	[CE]  illegal  start  of  expression	35	None	replace
98	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  null)  {  System.arraycopy(y0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	54	None	replace
99	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  else  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  else  {  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  else  {	  if(nextStep!=    nextStep)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
100	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  yTmp,  1,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  yTmp,  1,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  yTmp,  1,  nextStep.length);	  System.arraycopy(y0,    0,    yTmp,    0,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
101	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  nextStep.length  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  nextStep.length  +  1);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  yTmp,  0,  nextStep.length  +  1);	  System.arraycopy(y0,    0,    yTmp,    0,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	27	None	replace
102	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y2,  0,  nextStep);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y2,  0,  nextStep);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y2,  0,  nextStep);	  System.arraycopy(y0,    0,    yTmp,    0,    nextStep);    	non-compiled	[CE]  illegal  start  of  expression	26	None	replace
103	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }	  System.arraycopy(y0,    0,    y0,    0,    y0.length);    manager.stepAccepted(nextStep,    dt);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
104	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  y0.length);  manager.stepAccepted(nextStep,  dt);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  y0.length);  manager.stepAccepted(nextStep,  dt);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  0,  y0.length);  manager.stepAccepted(nextStep,  dt);	  System.arraycopy(y0,    0,    y0,    0,    y0.length);    manager.stepAccepted(nextStep,    dt);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
105	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  yU,  0,  yU.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  yU,  0,  yU.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  yU,  0,  yU.length);	  System.arraycopy(y0,    0,    dt,    0,    yU.length);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
106	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  yU.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  yU.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  yTmp,  0,  yU.length);	  System.arraycopy(y0,    0,    dt,    0,    yU.length);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
107	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  yU.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  yU.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  0,  yU.length);	  System.arraycopy(y0,    0,    dt,    0,    yU.length);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
108	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);	  if(nextStep    >    stepSize)    {    System.arraycopy(y0,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
109	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  y0.length  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  y0.length  -  1);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  1,  y0.length  -  1);	  System.arraycopy(y0,    0,    y1,    0,    y0.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	47	None	replace
110	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  else  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  else  {  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  else  {	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    nextStep);    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
111	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    nextStep);    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
112	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  nextStep,  y.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  nextStep,  y.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  1,  nextStep,  y.length);	  System.arraycopy(y0,    0,    y1,    1,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
113	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  stepStart,  1,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  stepStart,  1,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  stepStart,  1,  nextStep.length);	  System.arraycopy(y0,    0,    y1,    1,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
114	[BUG]  [BUGGY]  Manager.reset(nextStep,  dt);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  Manager.reset(nextStep,  dt);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	Manager.reset(nextStep,  dt);	  Manager.stepAccepted(nextStep,    dt);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
115	[BUG]  [BUGGY]  Manager.init(nextStep,  dt);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  Manager.init(nextStep,  dt);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	Manager.init(nextStep,  dt);	  Manager.stepAccepted(nextStep,    dt);    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
116	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y,  1,  y.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y,  1,  y.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y,  1,  y.length);	  System.arraycopy(y,    0,    y0,    1,    y.length);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
117	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  ySize);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  ySize);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  ytmp,  0,  ySize);	  System.arraycopy(y0,    0,    ytmp,    0,    y1.length);    	non-compiled	[CE]  illegal  start  of  expression	30	None	replace
118	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y2,  0,  ySize);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y2,  0,  ySize);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y2,  0,  ySize);	  System.arraycopy(y0,    0,    y2,    0,    y1.length);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
119	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y3,  0,  y0.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y3,  0,  y0.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y3,  0,  y0.length);	  System.arraycopy(y0,    0,    y2,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	28	None	replace
120	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    nextStep);    }    	non-compiled	[CE]  illegal  start  of  expression	41	None	replace
121	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  nextStep,  y.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  nextStep,  y.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  0,  nextStep,  y.length);	  System.arraycopy(y0,    0,    y1,    0,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	34	None	replace
122	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  y.length  +  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  yTmp,  0,  y.length  +  1);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  yTmp,  0,  y.length  +  1);	  System.arraycopy(y0,    0,    yTmp,    0,    y.length);    	non-compiled	[CE]  illegal  start  of  expression	69	None	replace
123	[BUG]  [BUGGY]  manager.stackFrameAccepted(nextStep,  y0);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  manager.stackFrameAccepted(nextStep,  y0);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	manager.stackFrameAccepted(nextStep,  y0);	  manager.stepAccepted(nextStep,    nextStep);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
124	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  1,  y0.length  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  ytmp,  1,  y0.length  -  1);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  ytmp,  1,  y0.length  -  1);	  System.arraycopy(y0,    0,    ytmp,    0,    y0.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
125	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  dt,  1,  y0.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  dt,  1,  y0.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  dt,  1,  y0.length);	  System.arraycopy(y,    0,    dt,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
126	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  dt,  0,  y1.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  dt,  0,  y1.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  dt,  0,  y1.length);	  System.arraycopy(y,    0,    dt,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
127	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  nextStep,  y0.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  nextStep,  y0.length);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  0,  nextStep,  y0.length);	  System.arraycopy(y0,    0,    y1,    0,    nextStep);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
128	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  dt,  0,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(yTmp,  0,  dt,  0,  yTmp.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(yTmp,  0,  dt,  0,  yTmp.length);	  System.arraycopy(y0,    0,    dt,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
129	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y0,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y0,  0,  y0.length);  manager.stepAccepted(nextStep,  y);	  if(y0!=    nextStep)    {    System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
130	[BUG]  [BUGGY]  if(nextStep!=  y0)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  y0)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  y0)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	  if(y0!=    nextStep)    {    System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
131	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  y0,  dt,  0,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(yTmp,  0,  y0,  dt,  0,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(yTmp,  0,  y0,  dt,  0,  nextStep.length);	  System.arraycopy(yTmp,    0,    dt,    0,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
132	[BUG]  [BUGGY]  System.arraycopy(t0,  0,  y0,  0,  y0.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(t0,  0,  y0,  0,  y0.length);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(t0,  0,  y0,  0,  y0.length);	  System.arraycopy(loop,    0,    y0,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
133	[BUG]  [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  nextStep)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }	  if(nextStep!=    nextStep)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    nextStep);    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
134	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y0,  1,  y0.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y0,  1,  y0.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y0,  1,  y0.length);	  System.arraycopy(y0,    0,    y1,    1,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
135	[BUG]  [BUGGY]  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);	  if(nextStep    >    stepSize)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
136	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y,  1,  y0.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y,  1,  y0.length);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y,  1,  y0.length);	  System.arraycopy(y0,    0,    y,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
137	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  nextStep,  stepStart);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  nextStep,  stepStart);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  1,  nextStep,  stepStart);	  System.arraycopy(y0,    0,    y1,    1,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
138	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  nextStep,  0,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  nextStep,  0,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  1,  nextStep,  0,  nextStep.length);	  System.arraycopy(y0,    0,    y1,    1,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	64	None	replace
139	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  y1.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  y1.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  1,  y1.length);	  System.arraycopy(y0,    0,    y2,    0,    y1.length);    	non-compiled	[CE]  illegal  start  of  expression	31	None	replace
140	[BUG]  [BUGGY]  Manager.stepAccepted(nextStep,  y1);  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  Manager.stepAccepted(nextStep,  y1);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	Manager.stepAccepted(nextStep,  y1);	  Manager.stepAccepted(nextStep,    nextStep);    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
141	[BUG]  [BUGGY]  if(y0!=  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(y0!=  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(y0!=  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  }	  if(y0!=    nextStep)    {    System.arraycopy(yTmp,    0,    y,    0,    y0.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	66	None	replace
142	[BUG]  [BUGGY]  if(y0!=  nextStep)  {  System.arraycopy(y0,  0,  y0,  0,  y0.length);  manager.stepAccepted(nextStep,  dt);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(y0!=  nextStep)  {  System.arraycopy(y0,  0,  y0,  0,  y0.length);  manager.stepAccepted(nextStep,  dt);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(y0!=  nextStep)  {  System.arraycopy(y0,  0,  y0,  0,  y0.length);  manager.stepAccepted(nextStep,  dt);  }	  System.arraycopy(y0,    0,    y0,    0,    y0.length);    manager.stepAccepted(nextStep,    dt);    	non-compiled	[CE]  illegal  start  of  expression	62	None	replace
143	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  ySize.length);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  ySize.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  1,  ySize.length);	  System.arraycopy(y0,    0,    y0,    0,    ySize.length);    	non-compiled	[CE]  illegal  start  of  expression	44	None	replace
144	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y1,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y1,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y1,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	  if(nextStep!=    null)    {    System.arraycopy(y0,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	56	None	replace
145	[BUG]  [BUGGY]  if(nextStep  <  stepSize)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep  <  stepSize)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep  <  stepSize)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	  if(nextStep    >    stepSize)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	65	None	replace
146	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  loop,  0,  y0.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  loop,  0,  y0.length);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  loop,  0,  y0.length);	  System.arraycopy(loop,    0,    y0,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	48	None	replace
147	[BUG]  [BUGGY]  System.arraycopy(y,  0,  y,  0,  y.length  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y,  0,  y,  0,  y.length  -  1);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y,  0,  y,  0,  y.length  -  1);	  System.arraycopy(y,    0,    y,    0,    y.length);    	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
148	[BUG]  [BUGGY]  if(nextStep  <  stepSize)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep  <  stepSize)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep  <  stepSize)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }	  if(nextStep    >    stepSize)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    dt);    }    	non-compiled	[CE]  illegal  start  of  expression	63	None	replace
149	[BUG]  [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }	  if(nextStep!=    nextStep)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    dt);    }    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
150	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  dt);  }	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    dt);    }    	non-compiled	[CE]  illegal  start  of  expression	61	None	replace
151	[BUG]  [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	  if(nextStep!=    nextStep)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	39	None	replace
152	[BUG]  [BUGGY]  if(nextStep  <  stepSize)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep  <  stepSize)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep  <  stepSize)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	  if(nextStep    >    stepSize)    {    System.arraycopy(y0,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	67	None	replace
153	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  dt);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  ytmp,  0,  dt);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  ytmp,  0,  dt);	  System.arraycopy(y0,    0,    yTmp,    0,    ySize);    	non-compiled	[CE]  illegal  start  of  expression	49	None	replace
154	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  dt,  0,  y.length);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  dt,  0,  y.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  dt,  0,  y.length);	  System.arraycopy(y,    0,    dt,    0,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
155	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  dt,  1,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  dt,  1,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  dt,  1,  nextStep.length);	  System.arraycopy(y0,    0,    dt,    0,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
156	[BUG]  [BUGGY]  manager.stepAccepted(nextStep,  y1);  [CE]  illegal  start  of  expression  [FE]                          AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  manager.stepAccepted(nextStep,  y1);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	manager.stepAccepted(nextStep,  y1);	  manager.stepAccepted(nextStep,    nextStep);    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
157	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  stepSize);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  0,  stepSize);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  0,  stepSize);	  System.arraycopy(y0,    0,    y1,    0,    nextStep);    	non-compiled	[CE]  illegal  start  of  expression	58	None	replace
158	[BUG]  [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  nextStep);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  nextStep);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  null)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  nextStep);  }	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    nextStep);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
159	[BUG]  [BUGGY]  if(y0!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  nextStep);  }  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(y0!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  nextStep);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(y0!=  null)  {  System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  nextStep);  }	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    nextStep);    }    	non-compiled	[CE]  illegal  start  of  expression	42	None	replace
160	[BUG]  [BUGGY]  System.arraycopy(y,  0,  y0,  1,  y.length  -  1);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y,  0,  y0,  1,  y.length  -  1);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y,  0,  y0,  1,  y.length  -  1);	  System.arraycopy(y,    0,    y0,    1,    y.length);    	non-compiled	[CE]  illegal  start  of  expression	33	None	replace
161	[BUG]  [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
162	[BUG]  [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep  ==  null)  {  System.arraycopy(yTmp,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    	non-compiled	[CE]  illegal  start  of  expression	55	None	replace
163	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  ytmp,  1,  nextStep.length  -  1);  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  ytmp,  1,  nextStep.length  -  1);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  ytmp,  1,  nextStep.length  -  1);	  System.arraycopy(y0,    0,    ytmp,    0,    y0.length    -    1);    	non-compiled	[CE]  illegal  start  of  expression	50	None	replace
164	[BUG]  [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  nextStep);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  nextStep);  }  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  nextStep);  }	  if(nextStep!=    nextStep)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    nextStep);    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
165	[BUG]  [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(nextStep!=  nextStep)  {  System.arraycopy(y0,  0,  y,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y);  }  else  {	  if(nextStep!=    nextStep)    {    System.arraycopy(yTmp,    0,    y,    0,    nextStep.length);    manager.stepAccepted(nextStep,    y);    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	40	None	replace
166	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  yTmp.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  yTmp.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  1,  yTmp.length);	  System.arraycopy(y0,    0,    y1,    0,    yTmp.length);    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
167	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  nextStep,  y0.length);  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y1,  1,  nextStep,  y0.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y1,  1,  nextStep,  y0.length);	  System.arraycopy(y0,    0,    y1,    1,    y0.length);    	non-compiled	[CE]  illegal  start  of  expression	46	None	replace
168	[BUG]  [BUGGY]  if(y0!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  else  {  [CE]  illegal  start  of  expression  [FE]                        AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  if(y0!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  else  {  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	if(y0!=  null)  {  System.arraycopy(yTmp,  0,  y0,  0,  nextStep.length);  manager.stepAccepted(nextStep,  y0);  }  else  {	  if(nextStep!=    null)    {    System.arraycopy(yTmp,    0,    y0,    0,    nextStep.length);    manager.stepAccepted(nextStep,    nextStep);    }    else    {    	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
169	[BUG]  [BUGGY]  System.arraycopy(y,  0,  dt,  1,  nextStep.length);  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y,  0,  dt,  1,  nextStep.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y,  0,  dt,  1,  nextStep.length);	  System.arraycopy(yTmp,    0,    dt,    0,    nextStep.length);    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
170	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y,  0,  yU.length);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y,  0,  yU.length);  [BUGGY]      manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y,  0,  yU.length);	  System.arraycopy(y0,    0,    dt,    0,    yU.length);    	non-compiled	[CE]  illegal  start  of  expression	45	None	replace
171	[BUG]  [BUGGY]  System.arraycopy(y0,  0,  y,  1,  nextStep);  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError      [CONTEXT]      stepSize  =  dt;  }  }  else  {  loop  =  false;  }  }  final  double  nextStep  =  stepStart  +  stepSize;      [BUGGY]  System.arraycopy(y0,  0,  y,  1,  nextStep);  [BUGGY]      System.arraycopy(yTmp,  0,  y,  0,  y0.length);  manager.stepAccepted(nextStep,  y);  lastStep  =  manager.stop();  interpolator.storeTime(nextStep);  for  (StepHandler  handler  :  stepHandlers)  {  handler.handleStep(interpolator,  lastStep);  }  stepStart  =  nextStep;  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	193	193	2	replace	System.arraycopy(y0,  0,  y,  1,  nextStep);	  System.arraycopy(y0,    0,    y,    0,    nextStep);    	non-compiled	[CE]  illegal  start  of  expression	25	None	replace
