bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  rki);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  rki);  [BUGGY]  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	replace	interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  rki);	interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
2	[BUG]  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  a);  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  a);  [BUGGY]  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	replace	interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  a);	interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
3	[BUG]  [BUGGY]  interpolator  =  new  DummyStepInterpolator(y0,  yDotK[stages  -  1],  forward);  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [BUGGY]  interpolator  =  new  DummyStepInterpolator(y0,  yDotK[stages  -  1],  forward);  [BUGGY]  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	replace	interpolator  =  new  DummyStepInterpolator(y0,  yDotK[stages  -  1],  forward);	interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
4	[BUG]  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  t0);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  t0);  [BUGGY]  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	replace	interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  t0);	interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
5	[BUG]  [BUGGY]    [CE]  <identifier>  expected  [FE]            AssertionFailedError  [CONTEXT]  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [BUGGY]    [BUGGY]  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	replace	  	interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  	non-compiled	[CE]  <identifier>  expected	7	None	replace
6	[BUG]  [BUGGY]    StageHandler  handler  =  prototype.getStepHandler();  [CE]  <identifier>  expected  [FE]    AssertionFailedError  [CONTEXT]  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [BUGGY]    StageHandler  handler  =  prototype.getStepHandler();  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	replace	    StageHandler  handler  =  prototype.getStepHandler();		non-compiled	[CE]  <identifier>  expected	8	None	add
7	[BUG]  [BUGGY]    StageHandler  handler  =  prototype.getStageHandler();  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [BUGGY]    StageHandler  handler  =  prototype.getStageHandler();  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	replace	    StageHandler  handler  =  prototype.getStageHandler();		non-compiled	[CE]  illegal  start  of  expression	8	None	add
8	[BUG]  [BUGGY]    StageHandler  handler  =  prototype.getRangeHandler();  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [BUGGY]    StageHandler  handler  =  prototype.getRangeHandler();  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	replace	    StageHandler  handler  =  prototype.getRangeHandler();		non-compiled	[CE]  illegal  start  of  expression	8	None	add
9	[BUG]  [BUGGY]    yDotK[stages  -  1],  forward);  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [BUGGY]    yDotK[stages  -  1],  forward);  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	replace	    yDotK[stages  -  1],  forward);		non-compiled	[CE]  illegal  start  of  expression	8	None	add
10	[BUG]  [BUGGY]    StageHandler  handler  =  prototype.getStandardStep();  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [BUGGY]    StageHandler  handler  =  prototype.getStandardStep();  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	replace	    StageHandler  handler  =  prototype.getStandardStep();		non-compiled	[CE]  illegal  start  of  expression	8	None	add
11	[BUG]  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yDotK,  yTmp[stages  -  1],  rki);  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yDotK,  yTmp[stages  -  1],  rki);  [BUGGY]  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	replace	interpolator  =  new  DummyStepInterpolator(yDotK,  yTmp[stages  -  1],  rki);	interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
12	[BUG]  [BUGGY]    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  i++)  {  yDotK[stages  -  1]  =  y0;  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [BUGGY]    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  i++)  {  yDotK[stages  -  1]  =  y0;  }  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	replace	    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  i++)  {  yDotK[stages  -  1]  =  y0;  }		non-compiled	[CE]  illegal  start  of  expression	8	None	add
13	[BUG]  [BUGGY]    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  i++)  {  yDotK[stages  -  1],  forward);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [BUGGY]    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  i++)  {  yDotK[stages  -  1],  forward);  }  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	replace	    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  i++)  {  yDotK[stages  -  1],  forward);  }		non-compiled	[CE]  illegal  start  of  expression	8	None	add
14	[BUG]  [BUGGY]    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[stages  -  1],  forward);  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [BUGGY]    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[stages  -  1],  forward);  }  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	replace	    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  yDotK[stages  -  1],  forward);  }		non-compiled	[CE]  illegal  start  of  expression	8	None	add
15	[BUG]  [BUGGY]    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  i++)  {  yDotK[stages  -  1]  =  y.getImmediateParentPointer();  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [BUGGY]    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  i++)  {  yDotK[stages  -  1]  =  y.getImmediateParentPointer();  }  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	replace	    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  i++)  {  yDotK[stages  -  1]  =  y.getImmediateParentPointer();  }		non-compiled	[CE]  illegal  start  of  expression	8	None	add
16	[BUG]  [BUGGY]    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  i++)  {  yDotK[stages  -  1]  =  y.getY();  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]  if  (requiresDenseOutput()  ||  (!  eventsHandlersManager.isEmpty()))  {  final  RungeKuttaStepInterpolator  rki  =  (RungeKuttaStepInterpolator)  prototype.copy();  rki.reinitialize(this,  yTmp,  yDotK,  forward);  interpolator  =  rki;  }  else  {  [BUGGY]    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  i++)  {  yDotK[stages  -  1]  =  y.getY();  }  [BUGGY]  interpolator  =  new  DummyStepInterpolator(yTmp,  yDotK[stages  -  1],  forward);  }  [CLASS]  EmbeddedRungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  firstTime  forward  fsal  lastStep  loop  nextIsLast  CombinedEventsManager  manager  double[]  b  c  scale  vecAbsoluteTolerance  vecRelativeTolerance  y  y0  yTmp  double  dt  error  exp  factor  hNew  maxGrowth  maxStep  minReduction  minStep  nextStep  nextT  safety  scalAbsoluteTolerance  scalRelativeTolerance  scaledH  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/EmbeddedRungeKuttaIntegrator.java	0.4082482904638631	217	217	2	replace	    if(stages  >  0)  {  for(int  i  =  0;  i  <  stages;  i++)  {  yDotK[stages  -  1]  =  y.getY();  }		non-compiled	[CE]  illegal  start  of  expression	8	None	add
