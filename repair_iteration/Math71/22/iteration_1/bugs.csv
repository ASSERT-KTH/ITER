bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while  (!stopTime)  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]  while  (!stopTime)  {  [BUGGY]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!stopTime)  {	while  (!lastStep)  {  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
2	[BUG]  [BUGGY]  while  (!stepSize)  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]  while  (!stepSize)  {  [BUGGY]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!stepSize)  {	while  (!lastStep)  {  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
3	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(t0,  y))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]  while  (!lastStep  &&  isEnabled(t0,  y))  {  [BUGGY]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!lastStep  &&  isEnabled(t0,  y))  {	while  (!lastStep)  {  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
4	[BUG]  [BUGGY]  while  (!hasNextStep)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]  while  (!hasNextStep)  {  [BUGGY]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!hasNextStep)  {	while  (!lastStep)  {  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
5	[BUG]  [BUGGY]    [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    [BUGGY]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	  	while  (!lastStep)  {  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
6	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
7	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
8	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	    if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
9	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
10	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
11	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y		non-compiled	[CE]  illegal  start  of  expression	44	None	add
12	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y		non-compiled	[CE]  illegal  start  of  expression	44	None	add
13	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,		non-compiled	[CE]  illegal  start  of  expression	44	None	add
14	[BUG]  [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y,  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y,  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	    if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y,		non-compiled	[CE]  illegal  start  of  expression	44	None	add
15	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  t0))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  t0))  {  [BUGGY]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!lastStep  &&  isEnabled(manager,  t0))  {	while  (!lastStep)  {  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
16	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(manager))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]  while  (!lastStep  &&  isEnabled(manager))  {  [BUGGY]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!lastStep  &&  isEnabled(manager))  {	while  (!lastStep)  {  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
17	[BUG]  [BUGGY]    if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	    if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
18	[BUG]  [BUGGY]    if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	    if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
19	[BUG]  [BUGGY]    if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	    if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
20	[BUG]  [BUGGY]    if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	    if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
21	[BUG]  [BUGGY]    if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]    if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]  while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	    if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  y[0]);  }		non-compiled	[CE]  illegal  start  of  expression	44	None	add
22	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepSize,  y))  {  [CE]  illegal  start  of  expression  [FE]    AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepSize,  y))  {  [BUGGY]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  isEnabled(t0,  stepSize,  y))  {	while  (!lastStep)  {  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
23	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepSize))  {  [CE]  illegal  start  of  expression  [FE]      AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepSize))  {  [BUGGY]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  isEnabled(t0,  stepSize))  {	while  (!lastStep)  {  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
24	[BUG]  [BUGGY]  while(!lastStep  &&  stepSize  >  0)  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError  [CONTEXT]    stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;    [BUGGY]  while(!lastStep  &&  stepSize  >  0)  {  [BUGGY]    interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  stepSize  >  0)  {	while  (!lastStep)  {  	non-compiled	[CE]  illegal  start  of  expression	43	None	replace
