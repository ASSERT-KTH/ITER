bugid	buggy	buggy_class	suspiciousness	buggy_line	endbuggycode	original_failing_test_number	action	patch	original_buggy	execution_result	diagnosis	previous_bug_id	new_failing_test_number	this_action
1	[BUG]  [BUGGY]  while  (!stopTime  &&!interpolator.shift())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!stopTime  &&!interpolator.shift())  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!stopTime  &&!interpolator.shift())  {	  while    (!stopTime)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
2	[BUG]  [BUGGY]  while  (!stopTime  &&  isEndTimeInterpolator())  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!stopTime  &&  isEndTimeInterpolator())  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!stopTime  &&  isEndTimeInterpolator())  {	  while    (!stopTime)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
3	[BUG]  [BUGGY]  while  (!stopTime  &&!interpolator.isEnabled())  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!stopTime  &&!interpolator.isEnabled())  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!stopTime  &&!interpolator.isEnabled())  {	  while    (!stopTime)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
4	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
5	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  j  =  0;  j  <  stage;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  j  =  0;  j  <  stage;  ++j)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  j  =  0;  j  <  stage;  ++j)  {  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
6	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  j  =  0;  j  <  phases;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  j  =  0;  j  <  phases;  ++j)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  j  =  0;  j  <  phases;  ++j)  {  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
7	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(y,  t0))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&  isEnabled(y,  t0))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!lastStep  &&  isEnabled(y,  t0))  {	  while    (!lastStep    &&    isEnabled(t0,    y))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
8	[BUG]  [BUGGY]  while  (!isEnabled(t0,  y)&&  isEnabled(t1,  y))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!isEnabled(t0,  y)&&  isEnabled(t1,  y))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!isEnabled(t0,  y)&&  isEnabled(t1,  y))  {	  while    (!lastStep    &&    isEnabled(t0,    y))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
9	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(t0,  y)&&  isEnabled(t1,  y))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&  isEnabled(t0,  y)&&  isEnabled(t1,  y))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!lastStep  &&  isEnabled(t0,  y)&&  isEnabled(t1,  y))  {	  while    (!lastStep    &&    isEnabled(t0,    y))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
10	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    k    =    0;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
11	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    k    =    0;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
12	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    k    =    0;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
13	[BUG]  [BUGGY]  while  (!hasNextStep  &&  yDotK[0]!=  y)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!hasNextStep  &&  yDotK[0]!=  y)  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!hasNextStep  &&  yDotK[0]!=  y)  {	  while    (!hasNextStep)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
14	[BUG]  [BUGGY]  while  (!hasNextStep  &&  yDotK[0]  ==  y)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!hasNextStep  &&  yDotK[0]  ==  y)  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!hasNextStep  &&  yDotK[0]  ==  y)  {	  while    (!hasNextStep)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
15	[BUG]  [BUGGY]  while  (!hasNextStep  &&  isEnabled(t0,  y))  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!hasNextStep  &&  isEnabled(t0,  y))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!hasNextStep  &&  isEnabled(t0,  y))  {	  while    (!hasNextStep)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
16	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    k    =    1;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
17	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  Interpolator  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  Interpolator  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  Interpolator  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    k    =    1;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
18	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interfaces.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interfaces.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  interfaces.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    k    =    1;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
19	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stage;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stage;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stage;  ++k)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    k    =    1;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
20	[BUG]  [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    phases;    ++i)    {    computeDerivatives(t0,    y,    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
21	[BUG]  [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    phases;    ++i)    {    computeDerivatives(t0,    y,    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
22	[BUG]  [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    phases;    ++i)    {    computeDerivatives(t0,    y,    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
23	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
24	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
25	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
26	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  addEndTimeChecker(t0,  i);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  addEndTimeChecker(t0,  i);  }  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  addEndTimeChecker(t0,  i);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
27	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  addEndTimeChecker(t0,  i,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  addEndTimeChecker(t0,  i,  yDotK[0]);  }  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  addEndTimeChecker(t0,  i,  yDotK[0]);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
28	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  computeDerivatives(t0,  y,  t[i]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  computeDerivatives(t0,  y,  t[i]);  }  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  computeDerivatives(t0,  y,  t[i]);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
29	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  computeDerivatives(t0,  y,  t[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  computeDerivatives(t0,  y,  t[i][1]);  }  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  computeDerivatives(t0,  y,  t[i][1]);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
30	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
31	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++k)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
32	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  Interpolator  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  Interpolator  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  Interpolator  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
33	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  phases;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  phases;  ++j)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  phases;  ++j)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
34	[BUG]  [BUGGY]  while(!lastStep  &&  stepSize  >  1)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  stepSize  >  1)  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  stepSize  >  1)  {	  while(!lastStep    &&    stepSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
35	[BUG]  [BUGGY]  while(!lastStep  &&  stepSize  <  =  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  stepSize  <  =  0)  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  stepSize  <  =  0)  {	  while(!lastStep    &&    stepSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
36	[BUG]  [BUGGY]  while(!lastStep  &&  stepSize  ==  0)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  stepSize  ==  0)  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  stepSize  ==  0)  {	  while(!lastStep    &&    stepSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
37	[BUG]  [BUGGY]  while(!lastStep  &&  stepSize!=  0)  {  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  stepSize!=  0)  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  stepSize!=  0)  {	  while(!lastStep    &&    stepSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
38	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(interpolator))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&  isEnabled(interpolator))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!lastStep  &&  isEnabled(interpolator))  {	  while    (!lastStep    &&    isEnabled(manager))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
39	[BUG]  [BUGGY]  while  (!isEnabled(manager))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!isEnabled(manager))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!isEnabled(manager))  {	  while    (!lastStep    &&    isEnabled(manager))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
40	[BUG]  [BUGGY]  while  (!isEnabled(manager)&&  isEnabled(t0))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!isEnabled(manager)&&  isEnabled(t0))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!isEnabled(manager)&&  isEnabled(t0))  {	  while    (!lastStep    &&    isEnabled(manager))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
41	[BUG]  [BUGGY]  while  (!isEnabled(manager)&&!lastStep)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!isEnabled(manager)&&!lastStep)  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!isEnabled(manager)&&!lastStep)  {	  while    (!lastStep    &&    isEnabled(manager))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
42	[BUG]  [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y,    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
43	[BUG]  [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y,    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
44	[BUG]  [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y,    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
45	[BUG]  [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
46	[BUG]  [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    phases;    ++i)    {    computeDerivatives(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
47	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    stages;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
48	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    stages;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
49	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stage;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stage;  ++i)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stage;  ++i)  {  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    stages;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
50	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepStart))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepStart))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  isEnabled(t0,  stepStart))  {	  while(!lastStep    &&    isEnabled(t0,    stepSize))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
51	[BUG]  [BUGGY]  while(!firstStep  &&  isEnabled(t0,  stepSize))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!firstStep  &&  isEnabled(t0,  stepSize))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!firstStep  &&  isEnabled(t0,  stepSize))  {	  while(!lastStep    &&    isEnabled(t0,    stepSize))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
52	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepSize)&&  isEnabled(t1,  stepSize))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepSize)&&  isEnabled(t1,  stepSize))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  isEnabled(t0,  stepSize)&&  isEnabled(t1,  stepSize))  {	  while(!lastStep    &&    isEnabled(t0,    stepSize))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
53	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepSize)||  isEnabled(t0,  stepStart))  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepSize)||  isEnabled(t0,  stepStart))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  isEnabled(t0,  stepSize)||  isEnabled(t0,  stepStart))  {	  while(!lastStep    &&    isEnabled(t0,    stepSize))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
54	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    k    =    0;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
55	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  Interpolator  interpolator.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  Interpolator  interpolator.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  Interpolator  interpolator.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    k    =    0;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
56	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stage;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stage;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stage;  ++k)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    k    =    0;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
57	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interfaces.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  i  =  0;  i  <  stages;  ++i)  {  interfaces.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  i  =  0;  i  <  stages;  ++i)  {  interfaces.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    k    =    0;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
58	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    k    =    1;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
59	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    k    =    1;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
60	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    k    =    1;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
61	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(interpolator,  t0))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&  isEnabled(interpolator,  t0))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!lastStep  &&  isEnabled(interpolator,  t0))  {	  while    (!lastStep    &&    isEnabled(manager,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
62	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  stepStart))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  stepStart))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!lastStep  &&  isEnabled(manager,  stepStart))  {	  while    (!lastStep    &&    isEnabled(manager,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
63	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  stepSize))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  stepSize))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!lastStep  &&  isEnabled(manager,  stepSize))  {	  while    (!lastStep    &&    isEnabled(manager,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
64	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  t0,  yDotK))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  t0,  yDotK))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!lastStep  &&  isEnabled(manager,  t0,  yDotK))  {	  while    (!lastStep    &&    isEnabled(manager,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
65	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
66	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
67	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(steps!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
68	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  y[0]);  }	      if(steps!=    null)    {    for(int    i    =    0;    i    <    steps.length;    ++i)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
69	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0]);  }	      if(steps!=    null)    {    for(int    i    =    0;    i    <    steps.length;    ++i)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
70	[BUG]  [BUGGY]  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  yDotK[0]);  }	      if(steps!=    null)    {    for(int    i    =    0;    i    <    steps.length;    ++i)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
71	[BUG]  [BUGGY]  while  (!lastStep  &&!stepSize)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&!stepSize)  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!lastStep  &&!stepSize)  {	  while    (!stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
72	[BUG]  [BUGGY]  while  (!stepSize  &&!lastStep)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!stepSize  &&!lastStep)  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!stepSize  &&!lastStep)  {	  while    (!stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
73	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepStart,  y))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepStart,  y))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  isEnabled(t0,  stepStart,  y))  {	  while(!lastStep    &&    isEnabled(t0,    stepSize,    y))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
74	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(t0,  y,  stepSize))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  isEnabled(t0,  y,  stepSize))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  isEnabled(t0,  y,  stepSize))  {	  while(!lastStep    &&    isEnabled(t0,    stepSize,    y))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
75	[BUG]  [BUGGY]  while(!firstStep  &&  isEnabled(t0,  stepSize,  y))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!firstStep  &&  isEnabled(t0,  stepSize,  y))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!firstStep  &&  isEnabled(t0,  stepSize,  y))  {	  while(!lastStep    &&    isEnabled(t0,    stepSize,    y))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
76	[BUG]  [BUGGY]  while(!isEnabled(t0,  y,  stepSize))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!isEnabled(t0,  y,  stepSize))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!isEnabled(t0,  y,  stepSize))  {	  while(!lastStep    &&    isEnabled(t0,    stepSize,    y))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
77	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator();  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator();  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	Interpolator  interpolator  =  manager.getInterpolator();	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
78	[BUG]  [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator();  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  InterpolatorInterpolator  interpolator  =  manager.getInterpolator();  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	InterpolatorInterpolator  interpolator  =  manager.getInterpolator();	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
79	[BUG]  [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0);  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  Interpolator  interpolator  =  manager.getInterpolator(t0);  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	Interpolator  interpolator  =  manager.getInterpolator(t0);	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
80	[BUG]  [BUGGY]  if(lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
81	[BUG]  [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
82	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  yDotK[0]);  }	      if(steps!=    null)    {    for(int    i    =    0;    i    <    steps.length;    ++i)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
83	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  y[1]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  y[1]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  y[1]);  }	      if(steps!=    null)    {    for(int    i    =    0;    i    <    steps.length;    ++i)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
84	[BUG]  [BUGGY]  while(!lastStep  &&  stepSize  >=  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  stepSize  >=  0)  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  stepSize  >=  0)  {	  while(!lastStep    &&    stepSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
85	[BUG]  [BUGGY]  while(!lastStep  &&  steps  >  0)  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  steps  >  0)  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  steps  >  0)  {	  while(!lastStep    &&    stepSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
86	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  yDotK[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  yDotK[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  yDotK[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    k    =    0;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
87	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yTmp[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yTmp[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yTmp[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    k    =    0;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
88	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    k    =    1;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
89	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yTmp[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yTmp[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yTmp[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    k    =    1;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
90	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  yDotK[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  yDotK[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  yDotK[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    k    =    1;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
91	[BUG]  [BUGGY]  if(lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    phases;    ++i)    {    computeDerivatives(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
92	[BUG]  [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    phases;    ++i)    {    computeDerivatives(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
93	[BUG]  [BUGGY]  while  (!hasNextStep  &&  isEnabled(manager,  t0))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!hasNextStep  &&  isEnabled(manager,  t0))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!hasNextStep  &&  isEnabled(manager,  t0))  {	  while    (!hasNextStep)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
94	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  interpolator))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&  isEnabled(manager,  interpolator))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!lastStep  &&  isEnabled(manager,  interpolator))  {	  while    (!lastStep    &&    isEnabled(manager,    t0))    {    	non-compiled	[CE]  illegal  start  of  expression	15	None	replace
95	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  yDotK[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  yDotK[0]);  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
96	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
97	[BUG]  [BUGGY]  while(stepSize  >  0)  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(stepSize  >  0)  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(stepSize  >  0)  {	  while    (!stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
98	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(dt,  y0,  yTmp[i]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(dt,  y0,  yTmp[i]);  }  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(dt,  y0,  yTmp[i]);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
99	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(dt,  y0,  yTmp[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(dt,  y0,  yTmp[0]);  }  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(dt,  y0,  yTmp[0]);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
100	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y[i][0],  y[i][1]);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
101	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(dt,  y0,  yTmp[1]);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(dt,  y0,  yTmp[1]);  }  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(dt,  y0,  yTmp[1]);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
102	[BUG]  [BUGGY]  while  (!stopTime  &&!interpolator.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!stopTime  &&!interpolator.isEnabled(Feature.QUOTE_FIELD_NAMES))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!stopTime  &&!interpolator.isEnabled(Feature.QUOTE_FIELD_NAMES))  {	  while    (!stopTime)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
103	[BUG]  [BUGGY]  while  (!stopTime  &&!interpolator.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!stopTime  &&!interpolator.isEnabled(Feature.QUOTE_FIELD_NAME))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!stopTime  &&!interpolator.isEnabled(Feature.QUOTE_FIELD_NAME))  {	  while    (!stopTime)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
104	[BUG]  [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    phases;    ++i)    {    computeDerivatives(t0,    y,    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
105	[BUG]  [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y,  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y,  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y,  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    phases;    ++i)    {    computeDerivatives(t0,    y,    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
106	[BUG]  [BUGGY]  while  (!hasEvents()  &&  isEnabled(manager))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!hasEvents()  &&  isEnabled(manager))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!hasEvents()  &&  isEnabled(manager))  {	  while    (!lastStep    &&    isEnabled(manager))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
107	[BUG]  [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y,    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
108	[BUG]  [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y,    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
109	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
110	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stageSize;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stageSize;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stageSize;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
111	[BUG]  [BUGGY]  while  (!lastStep  &&  isEnabled(y0,  t))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!lastStep  &&  isEnabled(y0,  t))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!lastStep  &&  isEnabled(y0,  t))  {	  while    (!lastStep    &&    isEnabled(t0,    y))    {    	non-compiled	[CE]  illegal  start  of  expression	3	None	replace
112	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stageSize;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stageSize;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stageSize;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    stages;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
113	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  phases;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  phases;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  phases;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    stages;    ++i)    {    }    	non-compiled	[CE]  illegal  start  of  expression	9	None	replace
114	[BUG]  [BUGGY]  while  (!hasNextStep  &&(t0  <  stepSize)||!t0.equals(stepSize))  {  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!hasNextStep  &&(t0  <  stepSize)||!t0.equals(stepSize))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!hasNextStep  &&(t0  <  stepSize)||!t0.equals(stepSize))  {	  while    (!hasNextStep)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
115	[BUG]  [BUGGY]  while  (!hasNextStep  &&(t0  <  stepSize)&&!steps.isEmpty())  {  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!hasNextStep  &&(t0  <  stepSize)&&!steps.isEmpty())  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!hasNextStep  &&(t0  <  stepSize)&&!steps.isEmpty())  {	  while    (!hasNextStep)    {    	non-compiled	[CE]  illegal  start  of  expression	4	None	replace
116	[BUG]  [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y!=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y!=  illegal  start  of  expression  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y!=  illegal  start  of  expression	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
117	[BUG]  [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	11	None	replace
118	[BUG]  [BUGGY]  while(!lastStep  &&  nextStep  >  0)  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  nextStep  >  0)  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  nextStep  >  0)  {	  while(!lastStep    &&    stepSize    >    0)    {    	non-compiled	[CE]  illegal  start  of  expression	24	None	replace
119	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y,  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y,  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y,  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    phases;    ++i)    {    computeDerivatives(t0,    y,    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
120	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y,  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y,  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y,  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    phases;    ++i)    {    computeDerivatives(t0,    y,    	non-compiled	[CE]  illegal  start  of  expression	14	None	replace
121	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stageSize;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stageSize;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stageSize;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
122	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
123	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stage;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stage;  ++j)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  j  =  0;  j  <  stage;  ++j)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	8	None	replace
124	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stageSize;  ++k)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stageSize;  ++k)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stageSize;  ++k)  {  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
125	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  Interpolator  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  Interpolator  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  Interpolator  interpolator.shift();  for(int  j  =  0;  j  <  stages;  ++j)  {  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	10	None	replace
126	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  j  =  0;  j  <  stages;  ++j)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    j    =    0;    j    <    stages;    ++j)    {    }    	non-compiled	[CE]  illegal  start  of  expression	20	None	replace
127	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stageSize;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stageSize;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stageSize;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    k    =    0;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
128	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stages;  ++k)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    k    =    0;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
129	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stage;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stage;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  0;  k  <  stage;  ++k)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    k    =    0;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	7	None	replace
130	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y,    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
131	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  stages;  ++i)  {  computeDerivatives(t0,  y,  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    stages;    ++i)    {    computeDerivatives(t0,    y,    	non-compiled	[CE]  illegal  start  of  expression	13	None	replace
132	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(manager)&&  isEnabled(eventsManager))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  isEnabled(manager)&&  isEnabled(eventsManager))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  isEnabled(manager)&&  isEnabled(eventsManager))  {	  while    (!lastStep    &&    isEnabled(manager))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
133	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(manager)&&  isEnabled(interpolator))  {  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  isEnabled(manager)&&  isEnabled(interpolator))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  isEnabled(manager)&&  isEnabled(interpolator))  {	  while    (!lastStep    &&    isEnabled(manager))    {    	non-compiled	[CE]  illegal  start  of  expression	16	None	replace
134	[BUG]  [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	17	None	replace
135	[BUG]  [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y!=  illegal  start  of  expression  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y!=  illegal  start  of  expression  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y!=  illegal  start  of  expression	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    phases;    ++i)    {    computeDerivatives(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
136	[BUG]  [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  interpolator.shift();  for(int  i  =  0;  i  <  phases;  ++i)  {  computeDerivatives(t0,  y  }	      if(interpolator!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    interpolator.shift();    for(int    i    =    0;    i    <    phases;    ++i)    {    computeDerivatives(t0,    y    	non-compiled	[CE]  illegal  start  of  expression	12	None	replace
137	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  for(int  i  =  0;  i  <  stages;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    k    =    1;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
138	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stageSize;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stageSize;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  stageSize;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    k    =    1;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
139	[BUG]  [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(interpolator!=  null)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(interpolator!=  null)  {  for(int  i  =  0;  i  <  phases;  ++i)  {  interpolator.shift();  for(int  k  =  1;  k  <  stages;  ++k)  {  }	      if(interpolator!=    null)    {    for(int    i    =    0;    i    <    stages;    ++i)    {    interpolator.shift();    for(int    k    =    1;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	6	None	replace
140	[BUG]  [BUGGY]  while((  stepSize  <  1)||(stepSize  >  1))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while((  stepSize  <  1)||(stepSize  >  1))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while((  stepSize  <  1)||(stepSize  >  1))  {	  while    (!stepSize)    {    	non-compiled	[CE]  illegal  start  of  expression	2	None	replace
141	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepSize)&&  isEnabled(t0,  stepStart))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepSize)&&  isEnabled(t0,  stepStart))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  isEnabled(t0,  stepSize)&&  isEnabled(t0,  stepStart))  {	  while(!lastStep    &&    isEnabled(t0,    stepSize))    {    	non-compiled	[CE]  illegal  start  of  expression	23	None	replace
142	[BUG]  [BUGGY]  while  (!stopTime  &&  isEndTime())  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while  (!stopTime  &&  isEndTime())  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while  (!stopTime  &&  isEndTime())  {	  while    (!stopTime)    {    	non-compiled	[CE]  illegal  start  of  expression	1	None	replace
143	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepSize,  yDotK))  {  [CE]  illegal  start  of  expression  [FE]        AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepSize,  yDotK))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  isEnabled(t0,  stepSize,  yDotK))  {	  while(!lastStep    &&    isEnabled(t0,    stepSize,    y))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
144	[BUG]  [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepSize,  yTmp))  {  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  while(!lastStep  &&  isEnabled(t0,  stepSize,  yTmp))  {  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	while(!lastStep  &&  isEnabled(t0,  stepSize,  yTmp))  {	  while(!lastStep    &&    isEnabled(t0,    stepSize,    y))    {    	non-compiled	[CE]  illegal  start  of  expression	22	None	replace
145	[BUG]  [BUGGY]  if(steps  ==  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(steps  ==  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(steps  ==  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  y[0]);  }	      if(steps!=    null)    {    for(int    i    =    0;    i    <    steps.length;    ++i)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
146	[BUG]  [BUGGY]  if(steps!=  null  &&  steps.length  >  0)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(steps!=  null  &&  steps.length  >  0)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(steps!=  null  &&  steps.length  >  0)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  y[0]);  }	      if(steps!=    null)    {    for(int    i    =    0;    i    <    steps.length;    ++i)    {    computeDerivatives(t0,    y,    y[0]);    }    	non-compiled	[CE]  illegal  start  of  expression	21	None	replace
147	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    k    =    1;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
148	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]              AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  yDotK[0]);  for(int  k  =  1;  k  <  stages;  ++k)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    k    =    1;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	19	None	replace
149	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  computeDerivatives(t0,  y,  y[0]);  }  [CE]  illegal  start  of  expression  [FE]                AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  computeDerivatives(t0,  y,  y[0]);  }  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  computeDerivatives(t0,  y,  y[0]);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
150	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  t);  }  [CE]  illegal  start  of  expression  [FE]                  AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  t);  }  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  t);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
151	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  t,  yTmp);  }  [CE]  illegal  start  of  expression  [FE]                    AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  t,  yTmp);  }  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  steps.length;  ++i)  {  computeDerivatives(t0,  y,  t,  yTmp);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
152	[BUG]  [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  computeDerivatives(t0,  y,  t,  yTmp);  }  [CE]  illegal  start  of  expression  [FE]                      AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(steps!=  null)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  computeDerivatives(t0,  y,  t,  yTmp);  }  [BUGGY]      interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(steps!=  null)  {  for(int  i  =  0;  i  <  stepSize;  ++i)  {  computeDerivatives(t0,  y,  t,  yTmp);  }	      	non-compiled	[CE]  illegal  start  of  expression	5	None	replace
153	[BUG]  [BUGGY]  if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]          AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(!lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    k    =    0;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
154	[BUG]  [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [CE]  illegal  start  of  expression  [FE]            AssertionFailedError    [CONTEXT]      stepStart  =  t0;  stepSize=  forward  ?  step  :  -step;  for  (StepHandler  handler  :  stepHandlers)  {  handler.reset();  }  CombinedEventsManager  manager  =  addEndTimeChecker(t0,  t,  eventsHandlersManager);  boolean  lastStep  =  false;      [BUGGY]  if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }  [BUGGY]    while  (!lastStep)  {  interpolator.shift();  for  (boolean  loop  =  true;  loop;)  {  computeDerivatives(stepStart,  y,  yDotK[0]);  for  (int  k  =  1;  k  <  stages;  ++k)  {  [CLASS]  RungeKuttaIntegrator  [METHOD]  integrate  [RETURN_TYPE]  double  FirstOrderDifferentialEquations  equations  final  double  t0  final  double[]  y0  final  double  t  final  double[]  y  [VARIABLES]  boolean  forward  lastStep  loop  CombinedEventsManager  manager  double[]  b  c  y  y0  yTmp  double  dt  nextStep  step  stopTime  sum  t  t0  double[][]  a  yDotK  AbstractStepInterpolator  interpolator  StepHandler  handler  RungeKuttaStepInterpolator  prototype  rki  int  i  j  k  l  stages  FirstOrderDifferentialEquations  equations  	projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java	0.2672612419124244	137	137	2	replace	if(lastStep)  {  for(int  k  =  1;  k  <  stages;  ++k)  {  computeDerivatives(t0,  y,  y[0]);  for(int  k  =  0;  k  <  stages;  ++k)  {  }	      if(steps!=    null)    {    for(int    k    =    1;    k    <    stages;    ++k)    {    computeDerivatives(t0,    y,    y[0]);    for(int    k    =    0;    k    <    stages;    ++k)    {    }    	non-compiled	[CE]  illegal  start  of  expression	18	None	replace
