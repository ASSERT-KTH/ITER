projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(y0,0,y,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(y0,0,y,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,y0,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(y0,0,yTmp,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(y0,0,y1,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]yTmp=newdouble[c.length+1][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]yTmp=newdouble[c.length+1][1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(y0,0,y,0,c.length+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,y0,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]yTmp=newdouble[stages.length+1][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]yTmp=newdouble[stages.length+1][1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(y0,0,stages,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108if(stages>0){for(inti=0;i<stages;++i){System.arraycopy(y0,0,y,0,stages[i]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108if(stages>0){for(inti=0;i<stages;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108if(stages>0){for(inti=0;i<stages;++i){yTmp[i]=newdouble[stages.length+1];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,y,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(y0,0,yTmp,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,yTmp,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(y0,0,ytmp,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(y0,0,c,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]yTmp=newdouble[stages.length+2][1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]yTmp=newdouble[c.length+2][1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]yTmp=newdouble[c.length+1][2];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]yTmp=newdouble[c.length+1][0];for(inti=0,j=0;i<c.length;++i){if(!sanityChecks(equations,t0,y
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]a=newdouble[c.length+1][0];for(inti=0;i<c.length;++i){b[i]=b[i][1];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,y1,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(t0,0,y,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]yTmp=newdouble[c.length+2][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]yTmp=newdouble[c.length+3][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108for(inti=0;i<stages;++i){System.arraycopy(y0,0,y,0,stages[i]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108for(inti=0;i<stages;++i){System.arraycopy(c,0,y,0,stages[i]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108for(inti=0;i<stages;++i){System.arraycopy(stages,0,y,0,stages[i]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108for(inti=0;i<stages;++i){System.arraycopy(y1,0,y,0,stages[i]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(y0,0,ytmp,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,y0,0,c.length+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,b,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108for(inti=0;i<stages;++i){yTmp[i]=newdouble[stages.length+1];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108for(inti=0;i<stages;++i){yDotK[i]=newdouble[stages.length+1];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(y0,0,y1,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(y0,0,y2,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108for(inti=0;i<stages;++i){System.arraycopy(y0,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108for(inti=0;i<stages;++i){System.arraycopy(c,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108for(inti=0;i<stages;++i){System.arraycopy(stages,0,y,0,y0.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108for(inti=0;i<stages;++i){System.arraycopy(strategy,0,strategy,0,strategy.length);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,y0,1,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(y0,0,y0,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,y1,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,y,0,c.length+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]yTmp=newdouble[stages.length+2][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]yTmp=newdouble[stages.length+3][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]yTmp=newdouble[stages.length+1][2];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,stages,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]yTmp=newdouble[stages+1][0];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(y0,0,yTmp,0,t.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]yTmp=newdouble[stages.length+1][1];System.arraycopy(y0,0,yTmp,0,stages.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]yTmp=newdouble[stages.length+1][1];for(inti=0;i<c.length;++i){setEvaluations(equations,t0,y0,t,y);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finalintstages=c.length;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finalintstages=c.length+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108Integerc=getInteger(t0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108Integery0=getInt(c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c.length,0,y,0,c.length+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c0,0,y,0,c.length+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108Context.checkState(forward);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,c,0,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108finaldouble[][]yTmp=newdouble[stages+1][1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,stages,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(y0,0,ystages,0,y0.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,y0,0,yTmp.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,y,1,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108sanityChecks(t0,y0,c,y);setEvaluations(equations);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108sanityChecks(t0,y0,c,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108sanityChecks(equations,t0,y0,c,y);setEvaluations(equations);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108NeighborTraversal.traverse(compiler,c,newRungeKuttaIntegrator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108NeighborTraversal.traverse(compiler,c,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108Set<String>ystages=Sets.newHashSet();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108NeighborTraversal.traverse(compiler,c,newRungeKuttaEquations());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,y0,0,t.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,y,0,c.length+1,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108if(stages!=null){for(inti=0;i<stages;++i){yTmp[i]=newdouble[stages.length+1];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108yTmp[i]=newdouble[stages.length+1];
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108if(stages!=null){for(inti=0;i<Stages.length;++i){yTmp[i]=newdouble[stages.length+1];}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(y0,0,y1,1,c.length);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(t0,0,y,0,c.length+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java108System.arraycopy(c,0,y1,0,c.length+1);
