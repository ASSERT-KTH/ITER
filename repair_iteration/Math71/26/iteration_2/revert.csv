projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<stages;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<stages;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<y0.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<0;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=prototype.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStandardStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,t0,y,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,t0,y,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,t0,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler(t0,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStandardStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStandardStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y0.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<stages.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<2;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=prototype.getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=interface.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=prototype.getStandardStep();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y.length;++k){computeDerivatives(c[k-1][0]*yDotK[0][k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y.length;++k){computeDerivatives(dt+c[k-1]*stepSize,yTmp,yDotK[k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y.length;++k){computeDerivatives(c[k-1][0],y,yDotK[0][k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y.length;++k){computeDerivatives(c[k-1][0],y,yDotK[0]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStageHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStepHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,stage,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,t0,prototype,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,stages,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,rki,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<yDotK.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<y.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<=0;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<2;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,y,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(transientStepInterpolator,t0,y,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,t0,stage,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(hashCode,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler(t0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStepHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y,t0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,t0,y,prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,t0,stage,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler(t0,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStepHandler(t0,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler(t0,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=loop.getStepHandler(t0,handler);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,prototype,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,interpolator,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStandardHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,newRungeKuttaStepInterpolator(),prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(hash);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<k;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k>=0;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<0.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<a.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,rki,y,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,y,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=handler.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=prototype.getStepStructure();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y0.length;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147Integerk0=getKuttaIntegrator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y0.length;++k){if(!lastStep){returntrue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y0.length;++k){intk=0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler(t0,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler(t0,y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,lastStep,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(compiler,t0,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<1;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,t0,y,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,stage,y,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(stage,t0,y,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,lastStep,y,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<y0.length;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<0;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<k;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<y0.length;++k){if(!lastStep){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147intk=0;k<y0.length;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(inti=0;i<y0.length;++i){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<a.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,newRungeKuttaStepInterpolator(),interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,prototype,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,rki,prototype,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,prototype,rki,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler(t0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler(y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler(loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler(t0,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<k;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=2;k<k;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(prototype,t0,y,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y,t0,prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,t0,y,phase);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<y0.length;++k){if(!lastStep){returntrue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147intk=0;k<y0.length;++k){if(!lastStep){returntrue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147intk=0;k<y0.length;++k){if(!lastStep){returnfalse;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147intk=1;k<y0.length;++k){if(!lastStep){returntrue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,lastStep,prototype,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<yDotK.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<yDot.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(y0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStandardHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStandardHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStandardHandler(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,prototype,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,trace);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<y.length;++k){computeDerivatives(c[k-1][0],y,yDotK[0]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147intk=0;k<y.length;++k){computeDerivatives(c[k-1][0],y,yDotK[0]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147while(!loop){for(intk=0;k<y.length;++k){computeDerivatives(c[k-1][0],y,yDotK[0]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y0,prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,t0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y0,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler(loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler(true);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147Integerk0=getKuttaStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147Integerk0=getKuttaIntegrator(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147Integerk0=getKuttaIntegrator()+1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStepHandler(t0,handler);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler(t0,handler);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=loop.getStepHandler(t0,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,rki,prototype,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,prototype,newRungeKuttaStepInterpolator(),stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStandardStepInterpolator(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147intk=0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<y0.length;++k){intk=0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<y0.length;++k){intk=1;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y0,stage,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,prototype,y,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,rki,stage,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y0.length;++k){if(!lastStep){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147intk=1;k<y0.length;++k){if(!lastStep){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147Integerk=1<<y0.length;++k){if(!lastStep){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(t0,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStepHandler(t0,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler(t0,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStepHandler(t0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStepHandler(t0,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler(t0,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,rki,stage,y,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,stage,y0,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,interpolator,stage,y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,t0,y,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,newRungeKuttaStepInterpolator(),prototype,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(prototype,newRungeKuttaStepInterpolator(),interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,newRungeKuttaStepInterpolator(),prototype,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(protocol,newRungeKuttaStepInterpolator(),interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y0,stage,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147intk=1;k<y0.length;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<y.length;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<3;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(t0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=prototype.getStructure();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=interface.getStepStructure();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStepHandler(rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,interpolator,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,prototype,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,prototype,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(prototype,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(t0,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,3);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,0,y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<y.length;++k){computeDerivatives(c[k-1][0]*yDotK[0][k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147intk=0;k<y.length;++k){computeDerivatives(c[k-1][0]*yDotK[0][k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(inti=0;i<y.length;++i){computeDerivatives(c[i-1][0]*yDotK[0][k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,rki,stage,y,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,y,phase);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,y,stages,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=interpolator.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=handler.getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<y.length;++k){computeDerivatives(dt+c[k-1]*stepSize,yTmp,yDotK[k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y.length;++k){computeDerivatives(dt+c[k-1]*stepSize,y,yDotK[k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y0.length;++k){computeDerivatives(dt+c[k-1]*stepSize,yTmp,yDotK[k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147intk=0;k<y.length;++k){computeDerivatives(dt+c[k-1]*stepSize,y,yDotK[k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<0;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<0;++k){if(!loop){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler(t0,y0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(t0,y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler(t0,y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler(t0,y0,phases);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<3;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,prototype,y,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,rki,stage,y,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,y,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<y.length;++k){computeDerivatives(c[k-1][0],y,yDotK[0][k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147intk=0;k<y.length;++k){computeDerivatives(c[k-1][0],y,yDotK[0][k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(inti=0;i<y.length;++i){computeDerivatives(c[i-1][0],y,yDotK[0][k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStepHandler(t0,c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<stages.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<steps.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<k;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147intk=0;k<k;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=2;k<=0;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<0.5;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<1.0;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStepHandler(t0,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStepHandler(t0,c);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStepHandler(t0,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStepHandler(t0,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y0,t0,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(rki,hashCode);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(hashCode,y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(loop,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(transientStepInterpolator,stage,y,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,lastStep,prototype,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,firstStep,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147phaseTraversal.traverse(interpolator,prototype,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(compiler,interpolator,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(this,interpolator,stages,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStageHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStageHandler(true);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStageHandler(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=interpolator.getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=interface.getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=prototype.getStandardStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler(t0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler(t0,phases);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getRangeInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=prototype.getSteps();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=interface.getStandardStep();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(compiler,rki,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(compiler,stage,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(compiler,phase,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler(rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStandardStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStepInterpolator(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStageInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,interpolator,prototype,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,rki,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,interfacer,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,handler,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(loop,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler(t0,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler(loop,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,stage,y,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,stage,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,rki,y,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y,stage,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y,stages,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,rki,t0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,t0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=interface.getStepHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,stage,prototype,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,stage,newRungeKuttaStepInterpolator(),prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(hash,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,t0,stage,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler(t0,y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStandardStepInterpolator(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,y0,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,t0,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y0.length;++k){intk=0;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147Integerk=0;k<y.length;++k){computeDerivatives(c[k-1][0],y,yDotK[0][k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,y0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,rki,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,loop,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y,t0,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147Integerk=0;k<y.length;++k){computeDerivatives(c[k-1][0],y,yDotK[0]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler(t0,handler);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler(t0,y1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,stage,t0,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,rki,stage,y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,t0,prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,this.steps);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<x.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(compiler,loop,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(compiler,prototype,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler(t0,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,stage,y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<stageSize;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=handler.getStandardStep();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=2;k<yDotK.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler(this);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,newRungeKuttaStepInterpolator(),stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147Integerk=0;k<k;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStepHandler(t0,y1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y0.length;++k){computeDerivatives(c[k-1][0]*yDotK[0][k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147Integerk=0;k<y.length;++k){computeDerivatives(c[k-1][0]*yDotK[0][k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<y.length;++k){computeDerivatives(dt+c[k-1]*stepSize,y,yDotK[k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147Integerk=0;k<y0.length;++k){if(!lastStep){returntrue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<=0.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<0.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y0,rki,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,loop,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,prototype,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<4;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,lastStep,stage,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,rki,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y0,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,rki,stages,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<=2;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=interface.getStepHandler(loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k!=0;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k==0;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=interfaces.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=interfaces.getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,newRungeKuttaIntegrator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStageHandler(loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,newRungeKuttaStepInterpolator(),loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,newRungeKuttaStepInterpolator(),this.prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(y0,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147Integerk=1<<y0.length;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,rki,y,prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,t0,y,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,t0,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(t0,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=2;k<y.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler(t0,y0,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147if(loop){for(intk=0;k<y0.length;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147intk=1;k<0;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStandardHandler(loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler(t0,y+1);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,lastStep,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler(t0,j);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler(t0,loop,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,phase,y,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStandardHandler(stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147if(k==0){for(intk=0;k<y0.length;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,lastStep,y,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,phase,y,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=2;k<y0.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,lastStep,stage,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(this,stage,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,stage,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=loop.getStepHandler(t0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler(stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler(t0,y0,phase);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y0,phase);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,y0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,stage,y,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,interpolator,stage,y,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,stage,y,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(compiler,stages,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(this,prototype,stages,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(this,stages,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<a.length-1;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147intk=0;k<c.length;++k){computeDerivatives(c[k-1][0],y,yDotK[0]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStepHandler(t0,loop,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStepHandler(t0,loop,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147intk=0;k<c.length;++k){computeDerivatives(c[k-1][0],y,yDotK[0][k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,t0,phase,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,newRungeKuttaStepInterpolator(),prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,newRungeKuttaStepInterpolator(),stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,newRungeKuttaStepInterpolator(),phase);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,lastStep,t0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y0,t0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStepHandler(t0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,y,transientStepInterpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,newRungeKuttaStepInterpolator(),prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,lastStep,prototype,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(this,prototype,rki,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147Integerk0=getKuttaIntegrator(y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,t0,stage,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147if(k==1){for(intk=1;k<y0.length;++k){if(!lastStep){continue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,this,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler(stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147if(k<0){for(intk=0;k<y0.length;++k){if(!lastStep){returntrue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y0,t,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147intk=1;k<k;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147if(k<0){for(intk=0;k<k;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y,t0,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=prototype.getStandardStep(0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getTraceHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler(t0,loop,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler(t0,j);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=interface.getStepHandler(rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,stage,y0);
