projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<stages;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<stages;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<y0.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<0;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=prototype.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStandardStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,t0,y,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,t0,y,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,t0,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler(t0,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStandardStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStandardStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y0.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<stages.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<2;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=prototype.getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=interface.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=prototype.getStandardStep();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y.length;++k){computeDerivatives(c[k-1][0]*yDotK[0][k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y.length;++k){computeDerivatives(dt+c[k-1]*stepSize,yTmp,yDotK[k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y.length;++k){computeDerivatives(c[k-1][0],y,yDotK[0][k]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y.length;++k){computeDerivatives(c[k-1][0],y,yDotK[0]);}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStageHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStepInterpolator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStepHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,stage,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,t0,prototype,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,stages,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,rki,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<yDotK.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<y.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<=0;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<2;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,y,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(transientStepInterpolator,t0,y,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,t0,stage,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(hashCode,rki);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler(t0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStepHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y,t0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,t0,y,prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,y0,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,t0,stage,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler(t0,y);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interpolator.getStepHandler(t0,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler(t0,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=loop.getStepHandler(t0,handler);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,prototype,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,interpolator,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=getStandardHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interface.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,newRungeKuttaStepInterpolator(),prototype);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=prototype.getStepHandler(hash);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<k;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k>=0;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<0.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<a.length;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler(t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,rki,y,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,stage,y,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=handler.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstages=prototype.getStepStructure();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y0.length;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147Integerk0=getKuttaIntegrator();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y0.length;++k){if(!lastStep){returntrue;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<y0.length;++k){intk=0;
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler(t0,loop);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=handler.getStepHandler(t0,y0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageHandlerstageHandler=interfaces.getStepHandler();
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(interpolator,lastStep,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147PhaseTraversal.traverse(compiler,t0,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<1;++k){
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,newRungeKuttaStepInterpolator());
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(compiler,t0,y,stage);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(this,stage,y,t0);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(stage,t0,y,interpolator);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147StageTraversal.traverse(interpolator,lastStep,y,stages);
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<y0.length;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<0;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=0;k<k;++k){if(!lastStep){break;}
projects/Math71/src/main/java/org/apache/commons/math/ode/nonstiff/RungeKuttaIntegrator.java147for(intk=1;k<y0.length;++k){if(!lastStep){continue;}
